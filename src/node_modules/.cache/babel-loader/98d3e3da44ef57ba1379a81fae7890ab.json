{"ast":null,"code":"import customAxios from \"apiRequests/customAxios\";\nimport { DELETE_HEALTH_TOPICS_URL, CREATE_HEALTH_TOPICS_URL, UPDATE_HEALTH_TOPICS_URL, ADMIN_ARTICLES_URL } from \"apiRequests/constants\";\nimport { setAllHealthTopics, setUploadedImageURL } from \"redux/actions/common\";\nexport const deleteHealthTopic = healthTopicId => async (dispatch, getState) => {\n  const deleteHealthTopic = await customAxios.delete(`${DELETE_HEALTH_TOPICS_URL}/${healthTopicId}`);\n\n  if (deleteHealthTopic.data.success) {\n    const removedArr = getState().common.healthTopics.filter(healthTopic => healthTopic.healthTopicId !== healthTopicId);\n    dispatch(setAllHealthTopics(removedArr));\n  } else {\n    console.log(deleteHealthTopic.data);\n  }\n};\nexport const createNewHealthTopic = (title, picture, history) => async (dispatch, getState) => {\n  const newHealthTopic = await customAxios.post(CREATE_HEALTH_TOPICS_URL, {\n    title,\n    picture\n  });\n  const healthTopicsArray = getState().common.healthTopics;\n\n  if (newHealthTopic.data.success) {\n    healthTopicsArray.unshift(newHealthTopic.data.data);\n    console.log(healthTopicsArray);\n    dispatch(setAllHealthTopics(healthTopicsArray));\n    dispatch(setUploadedImageURL(\"\"));\n    history.push(\"/admin/healthTopics\");\n  }\n};\nexport const updateHealthTopic = (healthTopicId, title, picture, history) => async (dispatch, getState) => {\n  const updatedHealthTopic = await customAxios.put(`${UPDATE_HEALTH_TOPICS_URL}/${healthTopicId}`, {\n    title,\n    picture\n  });\n\n  if (updatedHealthTopic.status) {\n    const healthTopicsArray = getState().common.healthTopics;\n    const updatedHealthTopics = healthTopicsArray.map(healthTopic => {\n      if (healthTopic.healthTopicId === healthTopicId) {\n        healthTopic.title = updatedHealthTopic.data.title;\n        healthTopic.picture = updatedHealthTopic.data.picture;\n      }\n\n      return healthTopic;\n    });\n    dispatch(setAllHealthTopics(updatedHealthTopics));\n    dispatch(setUploadedImageURL(\"\"));\n    history.push(\"/admin/healthTopics\");\n  }\n};\nexport const createNewArticle = (title, description, picture, healthTopicId, history) => async (dispatch, getState) => {\n  console.log(title, description, uploadedLink, healthTopicId, history);\n  const createdArticle = await customAxios.post(ADMIN_ARTICLES_URL, {\n    title,\n    description,\n    picture,\n    healthTopicId\n  });\n};","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/apiRequests/admin.js"],"names":["customAxios","DELETE_HEALTH_TOPICS_URL","CREATE_HEALTH_TOPICS_URL","UPDATE_HEALTH_TOPICS_URL","ADMIN_ARTICLES_URL","setAllHealthTopics","setUploadedImageURL","deleteHealthTopic","healthTopicId","dispatch","getState","delete","data","success","removedArr","common","healthTopics","filter","healthTopic","console","log","createNewHealthTopic","title","picture","history","newHealthTopic","post","healthTopicsArray","unshift","push","updateHealthTopic","updatedHealthTopic","put","status","updatedHealthTopics","map","createNewArticle","description","uploadedLink","createdArticle"],"mappings":"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","sourcesContent":["import customAxios from \"apiRequests/customAxios\";\nimport {\n  DELETE_HEALTH_TOPICS_URL,\n  CREATE_HEALTH_TOPICS_URL,\n  UPDATE_HEALTH_TOPICS_URL,\n  ADMIN_ARTICLES_URL,\n} from \"apiRequests/constants\";\nimport { setAllHealthTopics, setUploadedImageURL } from \"redux/actions/common\";\n\nexport const deleteHealthTopic =\n  (healthTopicId) => async (dispatch, getState) => {\n    const deleteHealthTopic = await customAxios.delete(\n      `${DELETE_HEALTH_TOPICS_URL}/${healthTopicId}`\n    );\n    if (deleteHealthTopic.data.success) {\n      const removedArr = getState().common.healthTopics.filter(\n        (healthTopic) => healthTopic.healthTopicId !== healthTopicId\n      );\n      dispatch(setAllHealthTopics(removedArr));\n    } else {\n      console.log(deleteHealthTopic.data);\n    }\n  };\n\nexport const createNewHealthTopic =\n  (title, picture, history) => async (dispatch, getState) => {\n    const newHealthTopic = await customAxios.post(CREATE_HEALTH_TOPICS_URL, {\n      title,\n      picture,\n    });\n    const healthTopicsArray = getState().common.healthTopics;\n    if (newHealthTopic.data.success) {\n      healthTopicsArray.unshift(newHealthTopic.data.data);\n      console.log(healthTopicsArray);\n      dispatch(setAllHealthTopics(healthTopicsArray));\n      dispatch(setUploadedImageURL(\"\"));\n      history.push(\"/admin/healthTopics\");\n    }\n  };\n\nexport const updateHealthTopic =\n  (healthTopicId, title, picture, history) => async (dispatch, getState) => {\n    const updatedHealthTopic = await customAxios.put(\n      `${UPDATE_HEALTH_TOPICS_URL}/${healthTopicId}`,\n      {\n        title,\n        picture,\n      }\n    );\n    if (updatedHealthTopic.status) {\n      const healthTopicsArray = getState().common.healthTopics;\n      const updatedHealthTopics = healthTopicsArray.map((healthTopic) => {\n        if (healthTopic.healthTopicId === healthTopicId) {\n          healthTopic.title = updatedHealthTopic.data.title;\n          healthTopic.picture = updatedHealthTopic.data.picture;\n        }\n        return healthTopic;\n      });\n      dispatch(setAllHealthTopics(updatedHealthTopics));\n      dispatch(setUploadedImageURL(\"\"));\n      history.push(\"/admin/healthTopics\");\n    }\n  };\n\nexport const createNewArticle =\n  (title, description, picture, healthTopicId, history) =>\n  async (dispatch, getState) => {\n    console.log(title, description, uploadedLink, healthTopicId, history);\n    const createdArticle = await customAxios.post(ADMIN_ARTICLES_URL, {\n      title,\n      description,\n      picture,\n      healthTopicId,\n    });\n  };\n"]},"metadata":{},"sourceType":"module"}