{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminArticles/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport MaterialTable from \"material-table\";\nimport { Box } from \"@material-ui/core\"; // import { makeStyles } from \"@material-ui/core/styles\";\n// import Modal from \"@material-ui/core/Modal\";\n// import Button from \"@material-ui/core/Button\";\n\nimport tableIcons from \"components/shared/tableIcons\";\nimport { fetchAllArticles } from \"apiRequests/common\"; // const useStyles = makeStyles((theme) => ({\n//   paper: {\n//     position: \"absolute\",\n//     width: 400,\n//     backgroundColor: theme.palette.background.paper,\n//     // border: \"2px solid #000\",\n//     boxShadow: theme.shadows[5],\n//     padding: theme.spacing(2, 4, 3),\n//     borderRadius: \"2%\",\n//   },\n//   button_yes: {\n//     backgroundColor: \"#ed5e68\",\n//     color: \"#fff\",\n//   },\n//   button_no: {\n//     backgroundColor: \"#8388a4\",\n//     marginLeft: \"1rem\",\n//     color: \"#fff\",\n//   },\n//   button_create: {\n//     color: \"#fff\",\n//     marginBottom: \"2rem\",\n//     alignSelf: \"start\",\n//   },\n// }));\n// const modalStyle = {\n//   top: \"50%\",\n//   left: `50%`,\n//   transform: `translate(-50%, -50%)`,\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminArticles = ({\n  articles,\n  fetchAllArticles\n}) => {\n  _s();\n\n  // const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n\n  const setArticlesWithTopics = () => {\n    articles.map(article => {});\n  };\n\n  useEffect(() => {\n    fetchAllArticles();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setArticlesWithTopics();\n    setRows(articles);\n  }, [articles]);\n\n  const getColumnData = () => [{\n    field: \"title\",\n    title: \"Title\"\n  }, {\n    field: \"description\",\n    title: \"Description\"\n  }, {\n    field: \"healthTopicTitle\",\n    Title: \"Health Topic\"\n  }, {\n    field: \"picture\",\n    title: \"Picture\",\n    sorting: false,\n    render: function renderImage(rowData) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: rowData.picture,\n        style: {\n          maxWidth: \"50%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n\n  const navigateToEditPage = () => {};\n\n  const setOpen = () => {};\n\n  const setDeleteArticleId = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      // width: \"40%\",\n      margin: \"3rem 0\",\n      padding: \"0 3rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      style: {\n        border: \"1px solid #999\"\n      },\n      icons: tableIcons,\n      title: \"Health topics list\",\n      columns: columns,\n      data: rows,\n      options: {\n        search: true,\n        actionsColumnIndex: -1,\n        // fixedColumns: {\n        //   left: 1,\n        //   right: 0,\n        // },\n        headerStyle: {\n          backgroundColor: \"#4bffa5\",\n          color: \"#000\"\n        }\n      },\n      actions: [{\n        icon: tableIcons.Edit,\n        tooltip: \"edit topic\",\n        onClick: (event, rowData) => {\n          navigateToEditPage(rowData.title, rowData.healthTopicId, rowData.picture);\n        }\n      }, {\n        icon: tableIcons.Delete,\n        tooltip: \"delete topic\",\n        onClick: (event, rowData) => {\n          setOpen(true);\n          setDeleteArticleId(rowData.healthTopicId);\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminArticles, \"tmgGlGb+YHqZQAa/5zT9xncKH+E=\");\n\n_c = AdminArticles;\nAdminArticles.propTypes = {\n  articles: PropTypes.array,\n  fetchAllArticles: PropTypes.func\n}; // export default AdminArticles;\n\nconst mapStateToProps = state => ({\n  articles: state.common.articles,\n  healthTopics: state.common.healthTopics\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllArticles: () => dispatch(fetchAllArticles())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminArticles);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminArticles\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminArticles/index.js"],"names":["React","useState","useEffect","PropTypes","connect","MaterialTable","Box","tableIcons","fetchAllArticles","AdminArticles","articles","rows","setRows","columns","setColumns","setArticlesWithTopics","map","article","getColumnData","field","title","Title","sorting","render","renderImage","rowData","picture","maxWidth","height","navigateToEditPage","setOpen","setDeleteArticleId","margin","padding","border","search","actionsColumnIndex","headerStyle","backgroundColor","color","icon","Edit","tooltip","onClick","event","healthTopicId","Delete","propTypes","array","func","mapStateToProps","state","common","healthTopics","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport MaterialTable from \"material-table\";\nimport { Box } from \"@material-ui/core\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Modal from \"@material-ui/core/Modal\";\n// import Button from \"@material-ui/core/Button\";\n\nimport tableIcons from \"components/shared/tableIcons\";\nimport { fetchAllArticles } from \"apiRequests/common\";\n\n// const useStyles = makeStyles((theme) => ({\n//   paper: {\n//     position: \"absolute\",\n//     width: 400,\n//     backgroundColor: theme.palette.background.paper,\n//     // border: \"2px solid #000\",\n//     boxShadow: theme.shadows[5],\n//     padding: theme.spacing(2, 4, 3),\n//     borderRadius: \"2%\",\n//   },\n//   button_yes: {\n//     backgroundColor: \"#ed5e68\",\n//     color: \"#fff\",\n//   },\n//   button_no: {\n//     backgroundColor: \"#8388a4\",\n//     marginLeft: \"1rem\",\n//     color: \"#fff\",\n//   },\n//   button_create: {\n//     color: \"#fff\",\n//     marginBottom: \"2rem\",\n//     alignSelf: \"start\",\n//   },\n// }));\n// const modalStyle = {\n//   top: \"50%\",\n//   left: `50%`,\n//   transform: `translate(-50%, -50%)`,\n// };\n\nconst AdminArticles = ({ articles, fetchAllArticles }) => {\n  // const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n\n  const setArticlesWithTopics = () => {\n    articles.map((article) => {});\n  };\n\n  useEffect(() => {\n    fetchAllArticles();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setArticlesWithTopics();\n    setRows(articles);\n  }, [articles]);\n\n  const getColumnData = () => [\n    { field: \"title\", title: \"Title\" },\n    { field: \"description\", title: \"Description\" },\n    { field: \"healthTopicTitle\", Title: \"Health Topic\" },\n    {\n      field: \"picture\",\n      title: \"Picture\",\n      sorting: false,\n      render: function renderImage(rowData) {\n        return (\n          <img\n            src={rowData.picture}\n            style={{ maxWidth: \"50%\", height: \"auto\" }}\n          />\n        );\n      },\n    },\n  ];\n  const navigateToEditPage = () => {};\n  const setOpen = () => {};\n  const setDeleteArticleId = () => {};\n\n  return (\n    <Box\n      style={{\n        // width: \"40%\",\n        margin: \"3rem 0\",\n        padding: \"0 3rem\",\n      }}\n    >\n      {/* <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.button_create}\n        onClick={navigateToCreatePage}\n      >\n        Create New Topic\n      </Button> */}\n      <MaterialTable\n        style={{ border: \"1px solid #999\" }}\n        icons={tableIcons}\n        title=\"Health topics list\"\n        columns={columns}\n        data={rows}\n        options={{\n          search: true,\n          actionsColumnIndex: -1,\n          // fixedColumns: {\n          //   left: 1,\n          //   right: 0,\n          // },\n          headerStyle: {\n            backgroundColor: \"#4bffa5\",\n            color: \"#000\",\n          },\n        }}\n        actions={[\n          {\n            icon: tableIcons.Edit,\n            tooltip: \"edit topic\",\n            onClick: (event, rowData) => {\n              navigateToEditPage(\n                rowData.title,\n                rowData.healthTopicId,\n                rowData.picture\n              );\n            },\n          },\n          {\n            icon: tableIcons.Delete,\n            tooltip: \"delete topic\",\n            onClick: (event, rowData) => {\n              setOpen(true);\n              setDeleteArticleId(rowData.healthTopicId);\n            },\n          },\n        ]}\n      />\n      {/* <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal> */}\n    </Box>\n  );\n};\nAdminArticles.propTypes = {\n  articles: PropTypes.array,\n  fetchAllArticles: PropTypes.func,\n};\n\n// export default AdminArticles;\n\nconst mapStateToProps = (state) => ({\n  articles: state.common.articles,\n  healthTopics: state.common.healthTopics,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllArticles: () => dispatch(fetchAllArticles()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminArticles);\n"]},"metadata":{},"sourceType":"module"}