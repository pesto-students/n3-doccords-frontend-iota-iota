{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/users/profiles/createProfile.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { Paper, makeStyles, Grid, Typography, Button } from \"@material-ui/core\";\nimport Controls from \"../../../components/Form/controls/Controls\";\nimport { Form } from \"../../../components/Form/useForm\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport { createNewProfile, updateProfile } from \"apiRequests/user\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport UploadAvatar from \"components/shared/upload/uploadAvatar\";\nimport { setUploadedImageURL } from \"redux/actions/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst genderItems = [{\n  id: \"male\",\n  title: \"Male\"\n}, {\n  id: \"female\",\n  title: \"Female\"\n}, {\n  id: \"other\",\n  title: \"Other\"\n}];\n\nconst getRelationshipCollection = () => [{\n  id: 1,\n  title: \"Self\"\n}, {\n  id: 2,\n  title: \"Spouse\"\n}, {\n  id: 3,\n  title: \"Father\"\n}, {\n  id: 4,\n  title: \"Mother\"\n}, {\n  id: 5,\n  title: \"Brother\"\n}, {\n  id: 6,\n  title: \"Sister\"\n}, {\n  id: 7,\n  title: \"Child\"\n}, {\n  id: 8,\n  title: \"Others\"\n}];\n\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    marginTop: \"3rem\",\n    margin: theme.spacing(3),\n    padding: theme.spacing(3)\n  }\n}));\n\nconst CreateProfile = ({\n  fetchAllHealthTopics,\n  healthTopics,\n  createNewProfile,\n  updateProfile\n}) => {\n  _s();\n\n  const [profileId, setProfileId] = useState(\"\");\n  const [profileName, setProfileName] = useState(\"\");\n  const [relationshipId, setRelationshipId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [errors, setErrors] = useState({\n    profileName: {\n      status: false,\n      text: \"\"\n    }\n  });\n  const uploadedLink = useSelector(state => state.common.uploadedLink);\n  const [healthTopicsList, setHealthTopicsList] = useState([]);\n  const [knownIssues, setKnownIssues] = useState([]);\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    if (location.state) {\n      const {\n        profileId,\n        profileName,\n        relationshipId,\n        email,\n        phone,\n        age,\n        gender,\n        picture\n      } = location.state;\n      console.log(\"<<Inside\", relationshipId.toString());\n      setProfileId(profileId);\n      setProfileName(profileName);\n      setRelationshipId(relationshipId.toString());\n      setEmail(email);\n      setPhone(phone);\n      setAge(age);\n      setGender(gender);\n      dispatch(setUploadedImageURL(picture));\n    } else {\n      fetchAllHealthTopics();\n      setGender(genderItems[0].id);\n      setRelationshipId(getRelationshipCollection()[0].id);\n    }\n  }, []);\n\n  const generateHealthTopics = topics => {\n    const healthTopicsArr = topics.map(topic => ({\n      id: topic.healthTopicId,\n      title: topic.title\n    }));\n    return healthTopicsArr;\n  };\n\n  useEffect(() => {\n    fetchAllHealthTopics();\n    setGender(genderItems[0].id);\n    setRelationshipId(getRelationshipCollection()[0].id);\n  }, []);\n  useEffect(() => {\n    if (healthTopics.length > 0) {\n      setHealthTopicsList(generateHealthTopics(healthTopics));\n    }\n\n    if (healthTopics.length > 0 && location.state) {\n      const {\n        knownIssues\n      } = location.state;\n      const knownIssuesList = knownIssues.map(issue => {\n        let topicData = {};\n        healthTopics.forEach(topic => {\n          // console.log(topic, issue);\n          if (topic.healthTopicId === issue) {\n            topicData = topic;\n          }\n        });\n        return topicData;\n      });\n      setKnownIssues(generateHealthTopics(knownIssuesList));\n    }\n  }, [healthTopics]);\n\n  const onSubmit = () => {\n    if (profileName.trim() === \"\") {\n      setErrors({\n        profileName: {\n          status: true,\n          text: \"Please enter name\"\n        }\n      });\n    } else {\n      const knownIssueIds = knownIssues.map(issue => issue.id);\n\n      if (profileId.length > 0) {\n        updateProfile({\n          picture: uploadedLink,\n          relationshipId,\n          profileName,\n          age,\n          email,\n          phone,\n          gender,\n          knownIssues: knownIssueIds\n        });\n      } else {\n        createNewProfile({\n          picture: uploadedLink,\n          relationshipId,\n          profileName,\n          age,\n          email,\n          phone,\n          gender,\n          knownIssues: knownIssueIds\n        }, history);\n      }\n    }\n  };\n\n  const handleInputChange = e => {\n    if (e.target.name === \"relationship\") {\n      setRelationshipId(e.target.value);\n    }\n\n    if (e.target.name === \"profileName\") {\n      setProfileName(e.target.value);\n\n      if (e.target.value.length > 0) {\n        setErrors({ ...errors,\n          profileName: {\n            status: false,\n            text: \"\"\n          }\n        });\n      }\n    }\n\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    }\n\n    if (e.target.name === \"phone\") {\n      setPhone(e.target.value);\n    }\n\n    if (e.target.name === \"age\") {\n      setAge(e.target.value);\n    }\n\n    if (e.target.name === \"gender\") {\n      setGender(e.target.value);\n    }\n  };\n\n  console.log(\"<<<Relation>>\", relationshipId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      style: {\n        color: \"#ffffff\",\n        textTransform: \"none\",\n        width: \"fit-content\",\n        margin: \"1rem 1.5rem\"\n      },\n      onClick: () => {\n        history.goBack();\n        dispatch(setUploadedImageURL(\"\"));\n      },\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          lg: 12,\n          xl: 12,\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(UploadAvatar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"profileName\",\n              label: \"Profile name *\",\n              value: profileName,\n              onChange: handleInputChange,\n              error: errors.profileName.status,\n              helperText: errors.profileName.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n              name: \"relationship\",\n              label: \"Relationship\",\n              value: relationshipId,\n              onChange: handleInputChange,\n              options: getRelationshipCollection()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              label: \"Email\",\n              name: \"email\",\n              value: email,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              label: \"Phone\",\n              name: \"phone\",\n              value: phone,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"age\",\n              label: \"Age\",\n              value: age,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-evenly\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Controls.RadioGroup, {\n              name: \"gender\",\n              label: \"Gender\",\n              value: gender,\n              onChange: handleInputChange,\n              items: genderItems\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.root,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Any known health issue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                multiple: true,\n                limitTags: 2,\n                id: \"multiple-limit-tags\",\n                options: healthTopicsList,\n                getOptionLabel: option => option.title,\n                defaultValue: knownIssues,\n                value: knownIssues,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  variant: \"outlined\",\n                  label: \"Health issues\",\n                  placeholder: \"Health issues\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this),\n                onChange: (event, value) => {\n                  console.log(value);\n                  setKnownIssues(value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n              style: {\n                display: \"block\",\n                margin: \"0 auto\"\n              },\n              onClick: onSubmit,\n              text: profileId ? \"Update\" : \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateProfile, \"5Towd4LxUfqvU/c92LvOj4SuQac=\", false, function () {\n  return [useSelector, useStyles, useHistory, useDispatch, useLocation];\n});\n\n_c = CreateProfile;\nCreateProfile.propTypes = {\n  fetchAllHealthTopics: PropTypes.func,\n  createNewProfile: PropTypes.func,\n  updateProfile: PropTypes.func,\n  healthTopics: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  healthTopics: state.common.healthTopics\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics()),\n  createNewProfile: (data, history) => dispatch(createNewProfile(data, history)),\n  updateProfile: (data, history) => dispatch(updateProfile(data, history))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProfile);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProfile\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/users/profiles/createProfile.js"],"names":["React","useEffect","useState","PropTypes","connect","useSelector","useDispatch","Paper","makeStyles","Grid","Typography","Button","Controls","Form","fetchAllHealthTopics","createNewProfile","updateProfile","useHistory","useLocation","Autocomplete","TextField","UploadAvatar","setUploadedImageURL","genderItems","id","title","getRelationshipCollection","useStyles","theme","pageContent","marginTop","margin","spacing","padding","CreateProfile","healthTopics","profileId","setProfileId","profileName","setProfileName","relationshipId","setRelationshipId","email","setEmail","phone","setPhone","age","setAge","gender","setGender","errors","setErrors","status","text","uploadedLink","state","common","healthTopicsList","setHealthTopicsList","knownIssues","setKnownIssues","classes","history","dispatch","location","picture","console","log","toString","generateHealthTopics","topics","healthTopicsArr","map","topic","healthTopicId","length","knownIssuesList","issue","topicData","forEach","onSubmit","trim","knownIssueIds","handleInputChange","e","target","name","value","color","textTransform","width","goBack","display","flexDirection","justifyContent","alignItems","root","option","params","event","propTypes","func","array","mapStateToProps","mapDispatchToProps","data"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { Paper, makeStyles, Grid, Typography, Button } from \"@material-ui/core\";\nimport Controls from \"../../../components/Form/controls/Controls\";\nimport { Form } from \"../../../components/Form/useForm\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport { createNewProfile, updateProfile } from \"apiRequests/user\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport UploadAvatar from \"components/shared/upload/uploadAvatar\";\n\nimport { setUploadedImageURL } from \"redux/actions/common\";\n\nconst genderItems = [\n  { id: \"male\", title: \"Male\" },\n  { id: \"female\", title: \"Female\" },\n  { id: \"other\", title: \"Other\" },\n];\n\nconst getRelationshipCollection = () => [\n  { id: 1, title: \"Self\" },\n  { id: 2, title: \"Spouse\" },\n  { id: 3, title: \"Father\" },\n  { id: 4, title: \"Mother\" },\n  { id: 5, title: \"Brother\" },\n  { id: 6, title: \"Sister\" },\n  { id: 7, title: \"Child\" },\n  { id: 8, title: \"Others\" },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginTop: \"3rem\",\n    margin: theme.spacing(3),\n    padding: theme.spacing(3),\n  },\n}));\n\nconst CreateProfile = ({\n  fetchAllHealthTopics,\n  healthTopics,\n  createNewProfile,\n  updateProfile,\n}) => {\n  const [profileId, setProfileId] = useState(\"\");\n  const [profileName, setProfileName] = useState(\"\");\n  const [relationshipId, setRelationshipId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [errors, setErrors] = useState({\n    profileName: {\n      status: false,\n      text: \"\",\n    },\n  });\n  const uploadedLink = useSelector((state) => state.common.uploadedLink);\n  const [healthTopicsList, setHealthTopicsList] = useState([]);\n  const [knownIssues, setKnownIssues] = useState([]);\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (location.state) {\n      const {\n        profileId,\n        profileName,\n        relationshipId,\n        email,\n        phone,\n        age,\n        gender,\n        picture,\n      } = location.state;\n      console.log(\"<<Inside\", relationshipId.toString());\n      setProfileId(profileId);\n      setProfileName(profileName);\n      setRelationshipId(relationshipId.toString());\n      setEmail(email);\n      setPhone(phone);\n      setAge(age);\n      setGender(gender);\n      dispatch(setUploadedImageURL(picture));\n    } else {\n      fetchAllHealthTopics();\n      setGender(genderItems[0].id);\n      setRelationshipId(getRelationshipCollection()[0].id);\n    }\n  }, []);\n\n  const generateHealthTopics = (topics) => {\n    const healthTopicsArr = topics.map((topic) => ({\n      id: topic.healthTopicId,\n      title: topic.title,\n    }));\n    return healthTopicsArr;\n  };\n  useEffect(() => {\n    fetchAllHealthTopics();\n    setGender(genderItems[0].id);\n    setRelationshipId(getRelationshipCollection()[0].id);\n  }, []);\n  useEffect(() => {\n    if (healthTopics.length > 0) {\n      setHealthTopicsList(generateHealthTopics(healthTopics));\n    }\n    if (healthTopics.length > 0 && location.state) {\n      const { knownIssues } = location.state;\n      const knownIssuesList = knownIssues.map((issue) => {\n        let topicData = {};\n        healthTopics.forEach((topic) => {\n          // console.log(topic, issue);\n          if (topic.healthTopicId === issue) {\n            topicData = topic;\n          }\n        });\n        return topicData;\n      });\n      setKnownIssues(generateHealthTopics(knownIssuesList));\n    }\n  }, [healthTopics]);\n\n  const onSubmit = () => {\n    if (profileName.trim() === \"\") {\n      setErrors({\n        profileName: {\n          status: true,\n          text: \"Please enter name\",\n        },\n      });\n    } else {\n      const knownIssueIds = knownIssues.map((issue) => issue.id);\n      if (profileId.length > 0) {\n        updateProfile({\n          picture: uploadedLink,\n          relationshipId,\n          profileName,\n          age,\n          email,\n          phone,\n          gender,\n          knownIssues: knownIssueIds,\n        });\n      } else {\n        createNewProfile(\n          {\n            picture: uploadedLink,\n            relationshipId,\n            profileName,\n            age,\n            email,\n            phone,\n            gender,\n            knownIssues: knownIssueIds,\n          },\n          history\n        );\n      }\n    }\n  };\n\n  const handleInputChange = (e) => {\n    if (e.target.name === \"relationship\") {\n      setRelationshipId(e.target.value);\n    }\n    if (e.target.name === \"profileName\") {\n      setProfileName(e.target.value);\n      if (e.target.value.length > 0) {\n        setErrors({\n          ...errors,\n          profileName: {\n            status: false,\n            text: \"\",\n          },\n        });\n      }\n    }\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    }\n    if (e.target.name === \"phone\") {\n      setPhone(e.target.value);\n    }\n    if (e.target.name === \"age\") {\n      setAge(e.target.value);\n    }\n    if (e.target.name === \"gender\") {\n      setGender(e.target.value);\n    }\n  };\n  console.log(\"<<<Relation>>\", relationshipId);\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        style={{\n          color: \"#ffffff\",\n          textTransform: \"none\",\n          width: \"fit-content\",\n          margin: \"1rem 1.5rem\",\n        }}\n        onClick={() => {\n          history.goBack();\n          dispatch(setUploadedImageURL(\"\"));\n        }}\n      >\n        Go back\n      </Button>\n      <Paper className={classes.pageContent}>\n        <Grid container>\n          <Grid\n            item\n            xs={12}\n            md={12}\n            lg={12}\n            xl={12}\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <UploadAvatar />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Paper className={classes.pageContent}>\n        <Form>\n          <Grid container>\n            <Grid item xs={12} md={6}>\n              <Controls.Input\n                name=\"profileName\"\n                label=\"Profile name *\"\n                value={profileName}\n                onChange={handleInputChange}\n                error={errors.profileName.status}\n                helperText={errors.profileName.text}\n              />\n              <Controls.Select\n                name=\"relationship\"\n                label=\"Relationship\"\n                value={relationshipId}\n                onChange={handleInputChange}\n                options={getRelationshipCollection()}\n              />\n              <Controls.Input\n                label=\"Email\"\n                name=\"email\"\n                value={email}\n                onChange={handleInputChange}\n              />\n              <Controls.Input\n                label=\"Phone\"\n                name=\"phone\"\n                value={phone}\n                onChange={handleInputChange}\n              />\n              <Controls.Input\n                name=\"age\"\n                label=\"Age\"\n                value={age}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={6}\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-evenly\",\n              }}\n            >\n              <Controls.RadioGroup\n                name=\"gender\"\n                label=\"Gender\"\n                value={gender}\n                onChange={handleInputChange}\n                items={genderItems}\n              />\n              <div className={classes.root}>\n                <Typography variant=\"subtitle1\">\n                  Any known health issue\n                </Typography>\n                <Autocomplete\n                  multiple\n                  limitTags={2}\n                  id=\"multiple-limit-tags\"\n                  options={healthTopicsList}\n                  getOptionLabel={(option) => option.title}\n                  defaultValue={knownIssues}\n                  value={knownIssues}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      variant=\"outlined\"\n                      label=\"Health issues\"\n                      placeholder=\"Health issues\"\n                    />\n                  )}\n                  onChange={(event, value) => {\n                    console.log(value);\n                    setKnownIssues(value);\n                  }}\n                />\n              </div>\n\n              <Controls.Button\n                style={{ display: \"block\", margin: \"0 auto\" }}\n                onClick={onSubmit}\n                text={profileId ? \"Update\" : \"Create\"}\n              />\n            </Grid>\n          </Grid>\n        </Form>\n      </Paper>\n    </>\n  );\n};\n\nCreateProfile.propTypes = {\n  fetchAllHealthTopics: PropTypes.func,\n  createNewProfile: PropTypes.func,\n  updateProfile: PropTypes.func,\n  healthTopics: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n  healthTopics: state.common.healthTopics,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics()),\n  createNewProfile: (data, history) =>\n    dispatch(createNewProfile(data, history)),\n  updateProfile: (data, history) => dispatch(updateProfile(data, history)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProfile);\n"]},"metadata":{},"sourceType":"module"}