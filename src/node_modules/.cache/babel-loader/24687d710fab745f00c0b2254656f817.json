{"ast":null,"code":"import customAxios from \"apiRequests/customAxios\";\nimport { DELETE_HEALTH_TOPICS_URL, CREATE_HEALTH_TOPICS_URL, UPDATE_HEALTH_TOPICS_URL, ADMIN_ARTICLES_URL } from \"apiRequests/constants\";\nimport { setAllHealthTopics, setUploadedImageURL, setAllArticles } from \"redux/actions/common\";\nexport const deleteHealthTopic = healthTopicId => async (dispatch, getState) => {\n  const deleteHealthTopic = await customAxios.delete(`${DELETE_HEALTH_TOPICS_URL}/${healthTopicId}`);\n\n  if (deleteHealthTopic.data.success) {\n    const removedArr = getState().common.healthTopics.filter(article => article.articleId !== articleId);\n    dispatch(setAllHealthTopics(removedArr));\n  } else {\n    console.log(deleteHealthTopic.data);\n  }\n};\nexport const createNewHealthTopic = (title, picture, history) => async (dispatch, getState) => {\n  const newHealthTopic = await customAxios.post(CREATE_HEALTH_TOPICS_URL, {\n    title,\n    picture\n  });\n  const healthTopicsArray = getState().common.healthTopics;\n\n  if (newHealthTopic.data.success) {\n    healthTopicsArray.unshift(newHealthTopic.data.data);\n    console.log(healthTopicsArray);\n    dispatch(setAllHealthTopics(healthTopicsArray));\n    dispatch(setUploadedImageURL(\"\"));\n    history.push(\"/admin/healthTopics\");\n  }\n};\nexport const updateHealthTopic = (healthTopicId, title, picture, history) => async (dispatch, getState) => {\n  const updatedHealthTopic = await customAxios.put(`${UPDATE_HEALTH_TOPICS_URL}/${healthTopicId}`, {\n    title,\n    picture\n  });\n\n  if (updatedHealthTopic.status) {\n    const healthTopicsArray = getState().common.healthTopics;\n    const updatedHealthTopics = healthTopicsArray.map(healthTopic => {\n      if (healthTopic.healthTopicId === healthTopicId) {\n        healthTopic.title = updatedHealthTopic.data.title;\n        healthTopic.picture = updatedHealthTopic.data.picture;\n      }\n\n      return healthTopic;\n    });\n    dispatch(setAllHealthTopics(updatedHealthTopics));\n    dispatch(setUploadedImageURL(\"\"));\n    history.push(\"/admin/healthTopics\");\n  }\n};\nexport const createNewArticle = (title, description, picture, healthTopicId, history) => async (dispatch, getState) => {\n  console.log(title, description, picture, healthTopicId, history);\n  const createdArticle = await customAxios.post(ADMIN_ARTICLES_URL, {\n    title,\n    description,\n    picture,\n    healthTopicId\n  });\n  const articlesArray = getState().common.articles;\n\n  if (createdArticle.data.success) {\n    articlesArray.unshift(createdArticle.data.data);\n    dispatch(setAllArticles(articlesArray));\n    dispatch(setUploadedImageURL(\"\"));\n    history.push(\"/admin/articles\");\n  }\n};\nexport const updateArticle = (articleId, title, description, picture, healthTopicId, history) => async (dispatch, getState) => {\n  const updatedArticle = await customAxios.put(`${ADMIN_ARTICLES_URL}/${articleId}`, {\n    title,\n    description,\n    picture,\n    healthTopicId\n  });\n\n  if (updatedArticle.status) {\n    const articlesArray = getState().common.articles;\n    const updatedArticles = articlesArray.map(article => {\n      if (article.articleId === articleId) {\n        article.title = updatedArticle.data.title;\n        article.picture = updatedArticle.data.picture;\n        article.description = updatedArticle.data.description;\n        article.healthTopicId = updatedArticle.data.healthTopicId;\n      }\n\n      return article;\n    });\n    dispatch(setAllArticles(updatedArticles));\n    dispatch(setUploadedImageURL(\"\"));\n    history.push(\"/admin/articles\");\n  }\n};\nexport const deleteArticle = articleId => async (dispatch, getState) => {\n  const deleteArticleData = await customAxios.delete(`${ADMIN_ARTICLES_URL}/${articleId}`);\n\n  if (deleteArticleData.data.success) {\n    const removedArr = getState().common.healthTopics.filter(healthTopic => healthTopic.healthTopicId !== healthTopicId);\n    dispatch(setAllHealthTopics(removedArr));\n  } else {\n    console.log(deleteHealthTopic.data);\n  }\n};","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/apiRequests/admin.js"],"names":["customAxios","DELETE_HEALTH_TOPICS_URL","CREATE_HEALTH_TOPICS_URL","UPDATE_HEALTH_TOPICS_URL","ADMIN_ARTICLES_URL","setAllHealthTopics","setUploadedImageURL","setAllArticles","deleteHealthTopic","healthTopicId","dispatch","getState","delete","data","success","removedArr","common","healthTopics","filter","article","articleId","console","log","createNewHealthTopic","title","picture","history","newHealthTopic","post","healthTopicsArray","unshift","push","updateHealthTopic","updatedHealthTopic","put","status","updatedHealthTopics","map","healthTopic","createNewArticle","description","createdArticle","articlesArray","articles","updateArticle","updatedArticle","updatedArticles","deleteArticle","deleteArticleData"],"mappings":"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","sourcesContent":["import customAxios from \"apiRequests/customAxios\";\nimport {\n  DELETE_HEALTH_TOPICS_URL,\n  CREATE_HEALTH_TOPICS_URL,\n  UPDATE_HEALTH_TOPICS_URL,\n  ADMIN_ARTICLES_URL,\n} from \"apiRequests/constants\";\nimport {\n  setAllHealthTopics,\n  setUploadedImageURL,\n  setAllArticles,\n} from \"redux/actions/common\";\n\nexport const deleteHealthTopic =\n  (healthTopicId) => async (dispatch, getState) => {\n    const deleteHealthTopic = await customAxios.delete(\n      `${DELETE_HEALTH_TOPICS_URL}/${healthTopicId}`\n    );\n    if (deleteHealthTopic.data.success) {\n      const removedArr = getState().common.healthTopics.filter(\n        (article) => article.articleId !== articleId\n      );\n      dispatch(setAllHealthTopics(removedArr));\n    } else {\n      console.log(deleteHealthTopic.data);\n    }\n  };\n\nexport const createNewHealthTopic =\n  (title, picture, history) => async (dispatch, getState) => {\n    const newHealthTopic = await customAxios.post(CREATE_HEALTH_TOPICS_URL, {\n      title,\n      picture,\n    });\n    const healthTopicsArray = getState().common.healthTopics;\n    if (newHealthTopic.data.success) {\n      healthTopicsArray.unshift(newHealthTopic.data.data);\n      console.log(healthTopicsArray);\n      dispatch(setAllHealthTopics(healthTopicsArray));\n      dispatch(setUploadedImageURL(\"\"));\n      history.push(\"/admin/healthTopics\");\n    }\n  };\n\nexport const updateHealthTopic =\n  (healthTopicId, title, picture, history) => async (dispatch, getState) => {\n    const updatedHealthTopic = await customAxios.put(\n      `${UPDATE_HEALTH_TOPICS_URL}/${healthTopicId}`,\n      {\n        title,\n        picture,\n      }\n    );\n    if (updatedHealthTopic.status) {\n      const healthTopicsArray = getState().common.healthTopics;\n      const updatedHealthTopics = healthTopicsArray.map((healthTopic) => {\n        if (healthTopic.healthTopicId === healthTopicId) {\n          healthTopic.title = updatedHealthTopic.data.title;\n          healthTopic.picture = updatedHealthTopic.data.picture;\n        }\n        return healthTopic;\n      });\n      dispatch(setAllHealthTopics(updatedHealthTopics));\n      dispatch(setUploadedImageURL(\"\"));\n      history.push(\"/admin/healthTopics\");\n    }\n  };\n\nexport const createNewArticle =\n  (title, description, picture, healthTopicId, history) =>\n  async (dispatch, getState) => {\n    console.log(title, description, picture, healthTopicId, history);\n    const createdArticle = await customAxios.post(ADMIN_ARTICLES_URL, {\n      title,\n      description,\n      picture,\n      healthTopicId,\n    });\n    const articlesArray = getState().common.articles;\n    if (createdArticle.data.success) {\n      articlesArray.unshift(createdArticle.data.data);\n      dispatch(setAllArticles(articlesArray));\n      dispatch(setUploadedImageURL(\"\"));\n      history.push(\"/admin/articles\");\n    }\n  };\n\nexport const updateArticle =\n  (articleId, title, description, picture, healthTopicId, history) =>\n  async (dispatch, getState) => {\n    const updatedArticle = await customAxios.put(\n      `${ADMIN_ARTICLES_URL}/${articleId}`,\n      {\n        title,\n        description,\n        picture,\n        healthTopicId,\n      }\n    );\n\n    if (updatedArticle.status) {\n      const articlesArray = getState().common.articles;\n      const updatedArticles = articlesArray.map((article) => {\n        if (article.articleId === articleId) {\n          article.title = updatedArticle.data.title;\n          article.picture = updatedArticle.data.picture;\n          article.description = updatedArticle.data.description;\n          article.healthTopicId = updatedArticle.data.healthTopicId;\n        }\n        return article;\n      });\n      dispatch(setAllArticles(updatedArticles));\n      dispatch(setUploadedImageURL(\"\"));\n      history.push(\"/admin/articles\");\n    }\n  };\nexport const deleteArticle = (articleId) => async (dispatch, getState) => {\n  const deleteArticleData = await customAxios.delete(\n    `${ADMIN_ARTICLES_URL}/${articleId}`\n  );\n  if (deleteArticleData.data.success) {\n    const removedArr = getState().common.healthTopics.filter(\n      (healthTopic) => healthTopic.healthTopicId !== healthTopicId\n    );\n    dispatch(setAllHealthTopics(removedArr));\n  } else {\n    console.log(deleteHealthTopic.data);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}