{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/Table/Table.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable react/display-name */\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Grid, Avatar } from \"@material-ui/core\";\nimport { fetchAllProfilesAndDocuments, deleteAllProfilesAndDocuments } from \"apiRequests/user\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst relationship = [{\n  id: 1,\n  title: \"Self\"\n}, {\n  id: 2,\n  title: \"Spouse\"\n}, {\n  id: 3,\n  title: \"Father\"\n}, {\n  id: 4,\n  title: \"Mother\"\n}, {\n  id: 5,\n  title: \"Brother\"\n}, {\n  id: 6,\n  title: \"Sister\"\n}, {\n  id: 7,\n  title: \"Child\"\n}, {\n  id: 8,\n  title: \"Others\"\n}];\n\nconst Table = props => {\n  _s();\n\n  // eslint-disable-next-line react/prop-types\n  const {\n    add,\n    edit,\n    fetchAllProfilesAndDocuments,\n    profiles,\n    documents,\n    deleteAllProfilesAndDocuments\n  } = props;\n  const history = useHistory();\n  const [rows, setRows] = useState([]);\n  const [isMultipleSelection, setIsMultipleSelection] = React.useState(false);\n  useEffect(() => {\n    fetchAllProfilesAndDocuments();\n  }, []);\n  useEffect(() => {\n    setRows(modifyProfiles());\n  }, [documents, profiles]);\n\n  const modifyProfiles = () => {\n    const modified = profiles.map(profile => {\n      const filteredDocuments = documents.filter(document => document.profileId === profile.profileId);\n      profile.uploadedDoc = filteredDocuments.length;\n      let shared = 0;\n      filteredDocuments.map(filtered => {\n        shared = shared + filtered.sharedList.length;\n        return filtered;\n      });\n      return {\n        name: profile.profileName,\n        relationshipId: relationship[profile.relationshipId - 1].title,\n        uploadedDoc: profile.uploadedDoc,\n        sharedDoc: shared,\n        profileId: profile.profileId\n      };\n    });\n    return modified;\n  };\n\n  const columns = [{\n    title: \"Name\",\n    field: \"name\",\n    render: rowData => /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: rowData.name[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        md: 8,\n        children: rowData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: \"Relationship\",\n    field: \"relationshipId\"\n  }, {\n    title: \"Uploaded Doc\",\n    field: \"uploadedDoc\"\n  }, {\n    title: \"Shared Doc\",\n    field: \"sharedDoc\"\n  }];\n\n  const deleteProfiles = rowData => {\n    const profileIds = rowData.map(row => row.profileId);\n    const docIds = profileIds.map(id => {\n      const filteredArray = documents.filter(doc => id === doc.profileId);\n      return filteredArray;\n    }).flat(1).map(doc => doc.documentId);\n    deleteAllProfilesAndDocuments(profileIds, docIds, history);\n  }; // const handlADDClick () => {\n  // }\n  // const handlDeleteClick () => {\n  // }\n\n\n  const handlEditClick = (event, rowsData) => {\n    console.log(event.target.value);\n\n    if (rowsData.length > 1) {\n      return alert(\"You can't edit more than one\");\n    } // Handle Edit click call back\n\n\n    edit();\n  }; // const handlNameClick () => {\n  // }\n\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"simple-modal-title\",\n      children: \"Are you sure, you want to delete this health topic?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: classes.button_yes,\n        onClick: clickedYes,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: classes.button_no,\n        onClick: handleClose,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Profiles Table\",\n      data: rows,\n      onSelectionChange: rows => {\n        rows.length > 1 ? setIsMultipleSelection(true) : setIsMultipleSelection(false);\n        console.log(rows.length);\n      },\n      columns: columns // editable={\n      //   onRowUpdate:()=>(newData)=>null,\n      // }\n      ,\n      options: {\n        search: false,\n        paging: false,\n        filtering: true,\n        // exportButton: true,\n        selection: true\n      },\n      actions: [{\n        icon: \"share\",\n        tooltip: \"Share Profile\",\n        onClick: (event, rowData) => alert(\"You saved \")\n      }, {\n        icon: \"edit\",\n        tooltip: isMultipleSelection ? \"You can edit only one profile\" : \"Edit Profile\",\n        onClick: (event, rowsData) => handlEditClick(event, rowsData),\n        disabled: isMultipleSelection\n      }, {\n        icon: \"add\",\n        tooltip: \"Add Profile\",\n        isFreeAction: true,\n        onClick: event => add()\n      }, {\n        icon: \"delete\",\n        tooltip: \"Delete User\",\n        onClick: (event, rowData) => {\n          deleteProfiles(rowData);\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"HnUwpY5JsW6A+xjbL5rNqfsq370=\", false, function () {\n  return [useHistory];\n});\n\n_c = Table;\n\nconst mapStateToProps = state => ({\n  profiles: state.user.profiles,\n  documents: state.user.documents\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllProfilesAndDocuments: () => dispatch(fetchAllProfilesAndDocuments()),\n  deleteAllProfilesAndDocuments: (profiles, documents, history) => dispatch(deleteAllProfilesAndDocuments(profiles, documents, history))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/Table/Table.js"],"names":["React","useState","useEffect","MaterialTable","Grid","Avatar","fetchAllProfilesAndDocuments","deleteAllProfilesAndDocuments","connect","useHistory","relationship","id","title","Table","props","add","edit","profiles","documents","history","rows","setRows","isMultipleSelection","setIsMultipleSelection","modifyProfiles","modified","map","profile","filteredDocuments","filter","document","profileId","uploadedDoc","length","shared","filtered","sharedList","name","profileName","relationshipId","sharedDoc","columns","field","render","rowData","deleteProfiles","profileIds","row","docIds","filteredArray","doc","flat","documentId","handlEditClick","event","rowsData","console","log","target","value","alert","body","modalStyle","classes","paper","button_yes","clickedYes","button_no","handleClose","search","paging","filtering","selection","icon","tooltip","onClick","disabled","isFreeAction","open","mapStateToProps","state","user","mapDispatchToProps","dispatch"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,SACEC,4BADF,EAEEC,6BAFF,QAGO,kBAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CADmB,EAEnB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAFmB,EAGnB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAHmB,EAInB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAJmB,EAKnB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CALmB,EAMnB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CANmB,EAOnB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAPmB,EAQnB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CARmB,CAArB;;AAWA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB;AACA,QAAM;AACJC,IAAAA,GADI;AAEJC,IAAAA,IAFI;AAGJV,IAAAA,4BAHI;AAIJW,IAAAA,QAJI;AAKJC,IAAAA,SALI;AAMJX,IAAAA;AANI,MAOFO,KAPJ;AAQA,QAAMK,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACqB,mBAAD,EAAsBC,sBAAtB,IAAgDvB,KAAK,CAACC,QAAN,CAAe,KAAf,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,4BAA4B;AAC7B,GAFQ,EAEN,EAFM,CAAT;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,OAAO,CAACG,cAAc,EAAf,CAAP;AACD,GAFQ,EAEN,CAACN,SAAD,EAAYD,QAAZ,CAFM,CAAT;;AAIA,QAAMO,cAAc,GAAG,MAAM;AAC3B,UAAMC,QAAQ,GAAGR,QAAQ,CAACS,GAAT,CAAcC,OAAD,IAAa;AACzC,YAAMC,iBAAiB,GAAGV,SAAS,CAACW,MAAV,CACvBC,QAAD,IAAcA,QAAQ,CAACC,SAAT,KAAuBJ,OAAO,CAACI,SADrB,CAA1B;AAGAJ,MAAAA,OAAO,CAACK,WAAR,GAAsBJ,iBAAiB,CAACK,MAAxC;AACA,UAAIC,MAAM,GAAG,CAAb;AACAN,MAAAA,iBAAiB,CAACF,GAAlB,CAAuBS,QAAD,IAAc;AAClCD,QAAAA,MAAM,GAAGA,MAAM,GAAGC,QAAQ,CAACC,UAAT,CAAoBH,MAAtC;AACA,eAAOE,QAAP;AACD,OAHD;AAIA,aAAO;AACLE,QAAAA,IAAI,EAAEV,OAAO,CAACW,WADT;AAELC,QAAAA,cAAc,EAAE7B,YAAY,CAACiB,OAAO,CAACY,cAAR,GAAyB,CAA1B,CAAZ,CAAyC3B,KAFpD;AAGLoB,QAAAA,WAAW,EAAEL,OAAO,CAACK,WAHhB;AAILQ,QAAAA,SAAS,EAAEN,MAJN;AAKLH,QAAAA,SAAS,EAAEJ,OAAO,CAACI;AALd,OAAP;AAOD,KAjBgB,CAAjB;AAkBA,WAAON,QAAP;AACD,GApBD;;AAsBA,QAAMgB,OAAO,GAAG,CACd;AACE7B,IAAAA,KAAK,EAAE,MADT;AAEE8B,IAAAA,KAAK,EAAE,MAFT;AAGEC,IAAAA,MAAM,EAAGC,OAAD,iBACN,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,UAAU,EAAC,QAA3B;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA,+BACE,QAAC,MAAD;AAAA,oBAASA,OAAO,CAACP,IAAR,CAAa,CAAb;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA,kBACGO,OAAO,CAACP;AADX;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,GADc,EAed;AACEzB,IAAAA,KAAK,EAAE,cADT;AAEE8B,IAAAA,KAAK,EAAE;AAFT,GAfc,EAmBd;AACE9B,IAAAA,KAAK,EAAE,cADT;AAEE8B,IAAAA,KAAK,EAAE;AAFT,GAnBc,EAuBd;AACE9B,IAAAA,KAAK,EAAE,YADT;AAEE8B,IAAAA,KAAK,EAAE;AAFT,GAvBc,CAAhB;;AA6BA,QAAMG,cAAc,GAAID,OAAD,IAAa;AAClC,UAAME,UAAU,GAAGF,OAAO,CAAClB,GAAR,CAAaqB,GAAD,IAASA,GAAG,CAAChB,SAAzB,CAAnB;AACA,UAAMiB,MAAM,GAAGF,UAAU,CACtBpB,GADY,CACPf,EAAD,IAAQ;AACX,YAAMsC,aAAa,GAAG/B,SAAS,CAACW,MAAV,CAAkBqB,GAAD,IAASvC,EAAE,KAAKuC,GAAG,CAACnB,SAArC,CAAtB;AACA,aAAOkB,aAAP;AACD,KAJY,EAKZE,IALY,CAKP,CALO,EAMZzB,GANY,CAMPwB,GAAD,IAASA,GAAG,CAACE,UANL,CAAf;AAOA7C,IAAAA,6BAA6B,CAACuC,UAAD,EAAaE,MAAb,EAAqB7B,OAArB,CAA7B;AACD,GAVD,CAzEuB,CAqFvB;AAEA;AACA;AAEA;;;AACA,QAAMkC,cAAc,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAN,CAAaC,KAAzB;;AACA,QAAIJ,QAAQ,CAACtB,MAAT,GAAkB,CAAtB,EAAyB;AACvB,aAAO2B,KAAK,CAAC,8BAAD,CAAZ;AACD,KAJyC,CAM1C;;;AACA5C,IAAAA,IAAI;AACL,GARD,CA3FuB,CAqGvB;AAEA;;;AACA,QAAM6C,IAAI,gBACR;AAAK,IAAA,KAAK,EAAEC,UAAZ;AAAwB,IAAA,SAAS,EAAEC,OAAO,CAACC,KAA3C;AAAA,4BACE;AAAG,MAAA,EAAE,EAAC,oBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,SAAS,EAAED,OAAO,CAACE,UAFrB;AAGE,QAAA,OAAO,EAAEC,UAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,SAAS,EAAEH,OAAO,CAACI,SAFrB;AAGE,QAAA,OAAO,EAAEC,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAuBA,sBACE;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,KAAK,EAAC,gBADR;AAEE,MAAA,IAAI,EAAEhD,IAFR;AAGE,MAAA,iBAAiB,EAAGA,IAAD,IAAU;AAC3BA,QAAAA,IAAI,CAACa,MAAL,GAAc,CAAd,GACIV,sBAAsB,CAAC,IAAD,CAD1B,GAEIA,sBAAsB,CAAC,KAAD,CAF1B;AAGAiC,QAAAA,OAAO,CAACC,GAAR,CAAYrC,IAAI,CAACa,MAAjB;AACD,OARH;AASE,MAAA,OAAO,EAAEQ,OATX,CAUE;AACA;AACA;AAZF;AAaE,MAAA,OAAO,EAAE;AACP4B,QAAAA,MAAM,EAAE,KADD;AAEPC,QAAAA,MAAM,EAAE,KAFD;AAGPC,QAAAA,SAAS,EAAE,IAHJ;AAIP;AACAC,QAAAA,SAAS,EAAE;AALJ,OAbX;AAoBE,MAAA,OAAO,EAAE,CACP;AACEC,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,OAAO,EAAE,eAFX;AAGEC,QAAAA,OAAO,EAAE,CAACrB,KAAD,EAAQV,OAAR,KAAoBgB,KAAK,CAAC,YAAD;AAHpC,OADO,EAMP;AACEa,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,OAAO,EAAEpD,mBAAmB,GACxB,+BADwB,GAExB,cAJN;AAKEqD,QAAAA,OAAO,EAAE,CAACrB,KAAD,EAAQC,QAAR,KAAqBF,cAAc,CAACC,KAAD,EAAQC,QAAR,CAL9C;AAMEqB,QAAAA,QAAQ,EAAEtD;AANZ,OANO,EAcP;AACEmD,QAAAA,IAAI,EAAE,KADR;AAEEC,QAAAA,OAAO,EAAE,aAFX;AAGEG,QAAAA,YAAY,EAAE,IAHhB;AAIEF,QAAAA,OAAO,EAAGrB,KAAD,IAAWvC,GAAG;AAJzB,OAdO,EAoBP;AACE0D,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,OAAO,EAAE,aAFX;AAGEC,QAAAA,OAAO,EAAE,CAACrB,KAAD,EAAQV,OAAR,KAAoB;AAC3BC,UAAAA,cAAc,CAACD,OAAD,CAAd;AACD;AALH,OApBO;AApBX;AAAA;AAAA;AAAA;AAAA,YADF,eAkDE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEkC,IADR;AAEE,MAAA,OAAO,EAAEV,WAFX;AAGE,yBAAgB,oBAHlB;AAIE,0BAAiB,0BAJnB;AAAA,gBAMGP;AANH;AAAA;AAAA;AAAA;AAAA,YAlDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD,CA5LD;;GAAMhD,K;UAUYJ,U;;;KAVZI,K;;AA8LN,MAAMkE,eAAe,GAAIC,KAAD,KAAY;AAClC/D,EAAAA,QAAQ,EAAE+D,KAAK,CAACC,IAAN,CAAWhE,QADa;AAElCC,EAAAA,SAAS,EAAE8D,KAAK,CAACC,IAAN,CAAW/D;AAFY,CAAZ,CAAxB;;AAIA,MAAMgE,kBAAkB,GAAIC,QAAD,KAAe;AACxC7E,EAAAA,4BAA4B,EAAE,MAAM6E,QAAQ,CAAC7E,4BAA4B,EAA7B,CADJ;AAExCC,EAAAA,6BAA6B,EAAE,CAACU,QAAD,EAAWC,SAAX,EAAsBC,OAAtB,KAC7BgE,QAAQ,CAAC5E,6BAA6B,CAACU,QAAD,EAAWC,SAAX,EAAsBC,OAAtB,CAA9B;AAH8B,CAAf,CAA3B;;AAMA,eAAeX,OAAO,CAACuE,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrE,KAA7C,CAAf","sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable react/display-name */\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Grid, Avatar } from \"@material-ui/core\";\nimport {\n  fetchAllProfilesAndDocuments,\n  deleteAllProfilesAndDocuments,\n} from \"apiRequests/user\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst relationship = [\n  { id: 1, title: \"Self\" },\n  { id: 2, title: \"Spouse\" },\n  { id: 3, title: \"Father\" },\n  { id: 4, title: \"Mother\" },\n  { id: 5, title: \"Brother\" },\n  { id: 6, title: \"Sister\" },\n  { id: 7, title: \"Child\" },\n  { id: 8, title: \"Others\" },\n];\n\nconst Table = (props) => {\n  // eslint-disable-next-line react/prop-types\n  const {\n    add,\n    edit,\n    fetchAllProfilesAndDocuments,\n    profiles,\n    documents,\n    deleteAllProfilesAndDocuments,\n  } = props;\n  const history = useHistory();\n  const [rows, setRows] = useState([]);\n  const [isMultipleSelection, setIsMultipleSelection] = React.useState(false);\n\n  useEffect(() => {\n    fetchAllProfilesAndDocuments();\n  }, []);\n\n  useEffect(() => {\n    setRows(modifyProfiles());\n  }, [documents, profiles]);\n\n  const modifyProfiles = () => {\n    const modified = profiles.map((profile) => {\n      const filteredDocuments = documents.filter(\n        (document) => document.profileId === profile.profileId\n      );\n      profile.uploadedDoc = filteredDocuments.length;\n      let shared = 0;\n      filteredDocuments.map((filtered) => {\n        shared = shared + filtered.sharedList.length;\n        return filtered;\n      });\n      return {\n        name: profile.profileName,\n        relationshipId: relationship[profile.relationshipId - 1].title,\n        uploadedDoc: profile.uploadedDoc,\n        sharedDoc: shared,\n        profileId: profile.profileId,\n      };\n    });\n    return modified;\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      field: \"name\",\n      render: (rowData) => (\n        <Grid container alignItems=\"center\">\n          <Grid item md={4} xs={6}>\n            <Avatar>{rowData.name[0]}</Avatar>\n          </Grid>\n          <Grid item xs={6} md={8}>\n            {rowData.name}\n          </Grid>\n        </Grid>\n      ),\n    },\n    {\n      title: \"Relationship\",\n      field: \"relationshipId\",\n    },\n    {\n      title: \"Uploaded Doc\",\n      field: \"uploadedDoc\",\n    },\n    {\n      title: \"Shared Doc\",\n      field: \"sharedDoc\",\n    },\n  ];\n\n  const deleteProfiles = (rowData) => {\n    const profileIds = rowData.map((row) => row.profileId);\n    const docIds = profileIds\n      .map((id) => {\n        const filteredArray = documents.filter((doc) => id === doc.profileId);\n        return filteredArray;\n      })\n      .flat(1)\n      .map((doc) => doc.documentId);\n    deleteAllProfilesAndDocuments(profileIds, docIds, history);\n  };\n\n  // const handlADDClick () => {\n\n  // }\n  // const handlDeleteClick () => {\n\n  // }\n  const handlEditClick = (event, rowsData) => {\n    console.log(event.target.value);\n    if (rowsData.length > 1) {\n      return alert(\"You can't edit more than one\");\n    }\n\n    // Handle Edit click call back\n    edit();\n  };\n\n  // const handlNameClick () => {\n\n  // }\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <p id=\"simple-modal-title\">\n        Are you sure, you want to delete this health topic?\n      </p>\n      <div>\n        <Button\n          variant=\"contained\"\n          className={classes.button_yes}\n          onClick={clickedYes}\n        >\n          Yes\n        </Button>\n        <Button\n          variant=\"contained\"\n          className={classes.button_no}\n          onClick={handleClose}\n        >\n          No\n        </Button>\n      </div>\n    </div>\n  );\n  return (\n    <div>\n      <MaterialTable\n        title=\"Profiles Table\"\n        data={rows}\n        onSelectionChange={(rows) => {\n          rows.length > 1\n            ? setIsMultipleSelection(true)\n            : setIsMultipleSelection(false);\n          console.log(rows.length);\n        }}\n        columns={columns}\n        // editable={\n        //   onRowUpdate:()=>(newData)=>null,\n        // }\n        options={{\n          search: false,\n          paging: false,\n          filtering: true,\n          // exportButton: true,\n          selection: true,\n        }}\n        actions={[\n          {\n            icon: \"share\",\n            tooltip: \"Share Profile\",\n            onClick: (event, rowData) => alert(\"You saved \"),\n          },\n          {\n            icon: \"edit\",\n            tooltip: isMultipleSelection\n              ? \"You can edit only one profile\"\n              : \"Edit Profile\",\n            onClick: (event, rowsData) => handlEditClick(event, rowsData),\n            disabled: isMultipleSelection,\n          },\n          {\n            icon: \"add\",\n            tooltip: \"Add Profile\",\n            isFreeAction: true,\n            onClick: (event) => add(),\n          },\n          {\n            icon: \"delete\",\n            tooltip: \"Delete User\",\n            onClick: (event, rowData) => {\n              deleteProfiles(rowData);\n            },\n          },\n        ]}\n      />\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  profiles: state.user.profiles,\n  documents: state.user.documents,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllProfilesAndDocuments: () => dispatch(fetchAllProfilesAndDocuments()),\n  deleteAllProfilesAndDocuments: (profiles, documents, history) =>\n    dispatch(deleteAllProfilesAndDocuments(profiles, documents, history)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}