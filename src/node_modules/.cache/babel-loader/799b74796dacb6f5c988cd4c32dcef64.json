{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/adminHealthTopic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"components/shared/spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminHealthTopic = () => {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Select your file first\"); // Handling file selection from input\n\n  const onFileSelected = e => {\n    if (e.target.files[0]) {\n      setSelectedFile(e.target.files[0]);\n      setFileName(e.target.files[0].name);\n      setIsDisabled(false); // Enabling upload button\n\n      setButtonText(\"Let's upload this!\");\n    }\n  }; // Setting image preview\n\n\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n\n      reader.onloadend = () => setPreview(reader.result);\n\n      reader.readAsDataURL(selectedFile);\n    }\n  }, [selectedFile]); // Uploading image to Cloud Storage\n\n  const handleFileUpload = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setIsDisabled(true);\n    setButtonText(\"Wait we're uploading your file...\");\n\n    try {\n      if (selectedFile !== \"\") {\n        // Creating a FormData object\n        const fileData = new FormData(); // Adding the 'image' field and the selected file as value to our FormData object\n        // Changing file name to make it unique and avoid potential later overrides\n\n        fileData.set(\"image\", selectedFile, `${Date.now()}-${selectedFile.name}`);\n        await axios({\n          method: \"post\",\n          url: process.env.REACT_APP_UPLOAD_API_URL,\n          data: fileData,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        setIsLoading(false);\n        setIsSuccess(true); // Reset to default values after 3 seconds\n\n        setTimeout(() => {\n          setSelectedFile(null);\n          setPreview(null);\n          setIsSuccess(false);\n          setFileName(null);\n          setButtonText(\"Select your file first\");\n        }, 3000);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setIsError(true);\n      setFileName(null);\n      setTimeout(() => {\n        setIsError(false);\n        setButtonText(\"Select your file first\");\n      }, 3000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleFileUpload(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"uploader\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-space\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: isError || isSuccess ? /*#__PURE__*/_jsxDEV(\"i\", {\n                className: `icon-${isSuccess ? \"success\" : \"error\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [preview ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: preview,\n                    alt: \"Preview of the file to be uploaded\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon-upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  onChange: onFileSelected,\n                  accept: \"image/*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), isError || isSuccess ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: isSuccess ? \"success\" : \"error\",\n            children: isSuccess ? \"Upload successful!\" : \"Something went wrong ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"filename\",\n            children: fileName || \"No file selected yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          disabled: isDisabled,\n          tabIndex: 0,\n          children: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminHealthTopic, \"xxWp/cryUYxsuBjw7vNZpkO0zm0=\");\n\n_c = AdminHealthTopic;\nexport default AdminHealthTopic;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminHealthTopic\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/adminHealthTopic.js"],"names":["React","useState","useEffect","axios","Spinner","AdminHealthTopic","selectedFile","setSelectedFile","fileName","setFileName","preview","setPreview","isDisabled","setIsDisabled","isLoading","setIsLoading","isError","setIsError","isSuccess","setIsSuccess","buttonText","setButtonText","onFileSelected","e","target","files","name","reader","FileReader","onloadend","result","readAsDataURL","handleFileUpload","preventDefault","fileData","FormData","set","Date","now","method","url","process","env","REACT_APP_UPLOAD_API_URL","data","headers","setTimeout","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"components/shared/spinner\";\n\nconst AdminHealthTopic = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Select your file first\");\n\n  // Handling file selection from input\n  const onFileSelected = (e) => {\n    if (e.target.files[0]) {\n      setSelectedFile(e.target.files[0]);\n      setFileName(e.target.files[0].name);\n      setIsDisabled(false); // Enabling upload button\n      setButtonText(\"Let's upload this!\");\n    }\n  };\n\n  // Setting image preview\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onloadend = () => setPreview(reader.result);\n      reader.readAsDataURL(selectedFile);\n    }\n  }, [selectedFile]);\n\n  // Uploading image to Cloud Storage\n  const handleFileUpload = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setIsDisabled(true);\n    setButtonText(\"Wait we're uploading your file...\");\n\n    try {\n      if (selectedFile !== \"\") {\n        // Creating a FormData object\n        const fileData = new FormData();\n\n        // Adding the 'image' field and the selected file as value to our FormData object\n        // Changing file name to make it unique and avoid potential later overrides\n        fileData.set(\n          \"image\",\n          selectedFile,\n          `${Date.now()}-${selectedFile.name}`\n        );\n\n        await axios({\n          method: \"post\",\n          url: process.env.REACT_APP_UPLOAD_API_URL,\n          data: fileData,\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n\n        setIsLoading(false);\n        setIsSuccess(true);\n\n        // Reset to default values after 3 seconds\n        setTimeout(() => {\n          setSelectedFile(null);\n          setPreview(null);\n          setIsSuccess(false);\n          setFileName(null);\n          setButtonText(\"Select your file first\");\n        }, 3000);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setIsError(true);\n      setFileName(null);\n\n      setTimeout(() => {\n        setIsError(false);\n        setButtonText(\"Select your file first\");\n      }, 3000);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"title\"></header>\n      <main>\n        <form onSubmit={(e) => handleFileUpload(e)}>\n          <label className=\"uploader\">\n            <div className=\"upload-space\">\n              {isLoading ? (\n                <Spinner />\n              ) : (\n                <>\n                  {isError || isSuccess ? (\n                    <i\n                      className={`icon-${isSuccess ? \"success\" : \"error\"}`}\n                    ></i>\n                  ) : (\n                    <>\n                      {preview ? (\n                        <div className=\"preview\">\n                          <img\n                            src={preview}\n                            alt=\"Preview of the file to be uploaded\"\n                          />\n                        </div>\n                      ) : (\n                        <i className=\"icon-upload\"></i>\n                      )}\n                      <input\n                        type=\"file\"\n                        onChange={onFileSelected}\n                        accept=\"image/*\"\n                      />\n                    </>\n                  )}\n                </>\n              )}\n            </div>\n            {isError || isSuccess ? (\n              <p className={isSuccess ? \"success\" : \"error\"}>\n                {isSuccess ? \"Upload successful!\" : \"Something went wrong ...\"}\n              </p>\n            ) : (\n              <p className=\"filename\">{fileName || \"No file selected yet\"}</p>\n            )}\n          </label>\n\n          <button\n            type=\"submit\"\n            className=\"btn\"\n            disabled={isDisabled}\n            tabIndex={0}\n          >\n            {buttonText}\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n};\n\nexport default AdminHealthTopic;\n"]},"metadata":{},"sourceType":"module"}