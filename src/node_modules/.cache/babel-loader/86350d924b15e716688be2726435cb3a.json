{"ast":null,"code":"import * as types from \"redux/types/articlesType\";\nconst initialState = {\n  pending: false,\n  articles: [],\n  error: null\n};\nexport const articlesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_ALL_ARTICLES_SUCCESS:\n      return { ...state,\n        articles: action.payload,\n        pending: false\n      };\n\n    case types.FETCH_ALL_ARTICLES_PENDING:\n      return { ...state,\n        pending: true\n      };\n\n    case types.FETCH_ALL_ARTICLES_ERROR:\n      return { ...state,\n        error: action.payload,\n        pending: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/redux/reducers/articlesReducer.js"],"names":["types","initialState","pending","articles","error","articlesReducer","state","action","type","FETCH_ALL_ARTICLES_SUCCESS","payload","FETCH_ALL_ARTICLES_PENDING","FETCH_ALL_ARTICLES_ERROR"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACS,0BAAX;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,QAAQ,EAAEI,MAAM,CAACG,OAFZ;AAGLR,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKF,KAAK,CAACW,0BAAX;AACE,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKF,KAAK,CAACY,wBAAX;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACG,OAFT;AAGLR,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOI,KAAP;AAnBJ;AAqBD,CAtBM","sourcesContent":["import * as types from \"redux/types/articlesType\";\n\nconst initialState = {\n  pending: false,\n  articles: [],\n  error: null,\n};\n\nexport const articlesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_ALL_ARTICLES_SUCCESS:\n      return {\n        ...state,\n        articles: action.payload,\n        pending: false,\n      };\n    case types.FETCH_ALL_ARTICLES_PENDING:\n      return {\n        ...state,\n        pending: true,\n      };\n    case types.FETCH_ALL_ARTICLES_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}