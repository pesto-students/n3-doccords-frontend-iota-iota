{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/adminHealthTopic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"components/shared/spinner\";\nimport { Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { setUploadedImageURL } from \"redux/actions/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminHealthTopic = () => {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Select your file first\");\n  const dispatch = useDispatch(); // Handling file selection from input\n\n  const onFileSelected = e => {\n    if (e.target.files[0]) {\n      setSelectedFile(e.target.files[0]);\n      setFileName(e.target.files[0].name);\n      setIsDisabled(false); // Enabling upload button\n\n      setButtonText(\"Let's upload this!\");\n    }\n  }; // Setting image preview\n\n\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n\n      reader.onloadend = () => setPreview(reader.result);\n\n      reader.readAsDataURL(selectedFile);\n    }\n  }, [selectedFile]); // Uploading image to Cloud Storage\n\n  const handleFileUpload = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setIsDisabled(true);\n    setButtonText(\"Wait we're uploading your file...\");\n\n    try {\n      if (selectedFile !== \"\") {\n        // Creating a FormData object\n        const fileData = new FormData(); // Adding the 'image' field and the selected file as value to our FormData object\n        // Changing file name to make it unique and avoid potential later overrides\n\n        fileData.set(\"image\", selectedFile, `${Date.now()}-${selectedFile.name}`);\n        const token = JSON.parse(localStorage.getItem(\"doccords_user\")).accessToken;\n        const res = await axios({\n          method: \"post\",\n          url: \"http://localhost:5001/api/v1/admin/upload/image\",\n          data: fileData,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: \"Bearer \" + token\n          }\n        });\n        dispatch(setUploadedImageURL(res.data.fileLocation));\n        console.log(res);\n        setIsLoading(false);\n        setIsSuccess(true); // Reset to default values after 3 seconds\n        // setTimeout(() => {\n        //   setSelectedFile(null);\n        //   setPreview(null);\n        //   setIsSuccess(false);\n        //   setFileName(null);\n        //   setButtonText(\"Select your file first\");\n        // }, 3000);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setIsError(true);\n      setFileName(null); // setTimeout(() => {\n      //   setIsError(false);\n      //   setButtonText(\"Select your file first\");\n      // }, 3000);\n    }\n  };\n\n  if (uploadedLink) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo_upload\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: \"Create new article\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleFileUpload(e),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"uploader\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-space\",\n              children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: isError || isSuccess ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `icon-${isSuccess ? \"success\" : \"error\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [preview ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"preview\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: preview,\n                      alt: \"Preview of the file to be uploaded\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"icon-upload\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    onChange: onFileSelected,\n                    accept: \"image/*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), isError || isSuccess ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: isSuccess ? \"success\" : \"error\",\n              children: isSuccess ? \"Upload successful!\" : \"Something went wrong ...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filename\",\n              children: fileName || \"No file selected yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            disabled: isDisabled,\n            tabIndex: 0,\n            children: buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(AdminHealthTopic, \"RduuAI/RgYBEUynrGghrxVDK190=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AdminHealthTopic;\nexport default AdminHealthTopic;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminHealthTopic\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/adminHealthTopic.js"],"names":["React","useState","useEffect","axios","Spinner","Typography","useDispatch","setUploadedImageURL","AdminHealthTopic","selectedFile","setSelectedFile","fileName","setFileName","preview","setPreview","isDisabled","setIsDisabled","isLoading","setIsLoading","isError","setIsError","isSuccess","setIsSuccess","buttonText","setButtonText","dispatch","onFileSelected","e","target","files","name","reader","FileReader","onloadend","result","readAsDataURL","handleFileUpload","preventDefault","fileData","FormData","set","Date","now","token","JSON","parse","localStorage","getItem","accessToken","res","method","url","data","headers","Authorization","fileLocation","console","log","error","uploadedLink","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"components/shared/spinner\";\nimport { Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { setUploadedImageURL } from \"redux/actions/common\";\n\nconst AdminHealthTopic = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Select your file first\");\n  const dispatch = useDispatch();\n\n  // Handling file selection from input\n  const onFileSelected = (e) => {\n    if (e.target.files[0]) {\n      setSelectedFile(e.target.files[0]);\n      setFileName(e.target.files[0].name);\n      setIsDisabled(false); // Enabling upload button\n      setButtonText(\"Let's upload this!\");\n    }\n  };\n\n  // Setting image preview\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onloadend = () => setPreview(reader.result);\n      reader.readAsDataURL(selectedFile);\n    }\n  }, [selectedFile]);\n\n  // Uploading image to Cloud Storage\n  const handleFileUpload = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setIsDisabled(true);\n    setButtonText(\"Wait we're uploading your file...\");\n\n    try {\n      if (selectedFile !== \"\") {\n        // Creating a FormData object\n        const fileData = new FormData();\n\n        // Adding the 'image' field and the selected file as value to our FormData object\n        // Changing file name to make it unique and avoid potential later overrides\n        fileData.set(\n          \"image\",\n          selectedFile,\n          `${Date.now()}-${selectedFile.name}`\n        );\n        const token = JSON.parse(\n          localStorage.getItem(\"doccords_user\")\n        ).accessToken;\n        const res = await axios({\n          method: \"post\",\n          url: \"http://localhost:5001/api/v1/admin/upload/image\",\n          data: fileData,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: \"Bearer \" + token,\n          },\n        });\n        dispatch(setUploadedImageURL(res.data.fileLocation));\n        console.log(res);\n        setIsLoading(false);\n        setIsSuccess(true);\n\n        // Reset to default values after 3 seconds\n        // setTimeout(() => {\n        //   setSelectedFile(null);\n        //   setPreview(null);\n        //   setIsSuccess(false);\n        //   setFileName(null);\n        //   setButtonText(\"Select your file first\");\n        // }, 3000);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setIsError(true);\n      setFileName(null);\n\n      // setTimeout(() => {\n      //   setIsError(false);\n      //   setButtonText(\"Select your file first\");\n      // }, 3000);\n    }\n  };\n\n  if (uploadedLink) {\n    return (\n      <div className=\"photo_upload\">\n        <Typography variant=\"h5\" style={{ marginTop: \"1rem\" }}>\n          Create new article\n        </Typography>\n        <main style={{ marginTop: \"1rem\" }}>\n          <form onSubmit={(e) => handleFileUpload(e)}>\n            <label className=\"uploader\">\n              <div className=\"upload-space\">\n                {isLoading ? (\n                  <Spinner />\n                ) : (\n                  <>\n                    {isError || isSuccess ? (\n                      <i\n                        className={`icon-${isSuccess ? \"success\" : \"error\"}`}\n                      ></i>\n                    ) : (\n                      <>\n                        {preview ? (\n                          <div className=\"preview\">\n                            <img\n                              src={preview}\n                              alt=\"Preview of the file to be uploaded\"\n                            />\n                          </div>\n                        ) : (\n                          <i className=\"icon-upload\"></i>\n                        )}\n                        <input\n                          type=\"file\"\n                          onChange={onFileSelected}\n                          accept=\"image/*\"\n                        />\n                      </>\n                    )}\n                  </>\n                )}\n              </div>\n              {isError || isSuccess ? (\n                <p className={isSuccess ? \"success\" : \"error\"}>\n                  {isSuccess\n                    ? \"Upload successful!\"\n                    : \"Something went wrong ...\"}\n                </p>\n              ) : (\n                <p className=\"filename\">{fileName || \"No file selected yet\"}</p>\n              )}\n            </label>\n\n            <button\n              type=\"submit\"\n              className=\"btn\"\n              disabled={isDisabled}\n              tabIndex={0}\n            >\n              {buttonText}\n            </button>\n          </form>\n        </main>\n      </div>\n    );\n  } else {\n    return <img src=\"\" />;\n  }\n};\n\nexport default AdminHealthTopic;\n"]},"metadata":{},"sourceType":"module"}