{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminHealthTopics = ({\n  fetchAllHealthTopics,\n  healthTopics\n}) => {\n  _s();\n\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  useEffect(() => {\n    fetchAllHealthTopics();\n    setRows(healthTopics);\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n  }, [healthTopics]);\n\n  const getColumnData = () => [{\n    field: \"healthTopicId\",\n    hide: true\n  }, {\n    field: \"picture\",\n    headerName: \"Picture\",\n    width: 150\n  }, {\n    field: \"title\",\n    headerName: \"First name\",\n    width: 130\n  }];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      getRowId: row => row.healthTopicId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminHealthTopics, \"tmgGlGb+YHqZQAa/5zT9xncKH+E=\");\n\n_c = AdminHealthTopics;\nAdminHealthTopics.propTypes = {\n  fetchAllHealthTopics: PropTypes.func.isRequired,\n  healthTopics: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    healthTopics: state.common.healthTopics\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHealthTopics);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminHealthTopics\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/index.js"],"names":["React","useEffect","useState","PropTypes","connect","fetchAllHealthTopics","DataGrid","AdminHealthTopics","healthTopics","rows","setRows","columns","setColumns","getColumnData","field","hide","headerName","width","height","row","healthTopicId","propTypes","func","isRequired","array","mapStateToProps","state","common","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,oBAArC;AACA,SAASC,QAAT,QAAyB,wBAAzB;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEF,EAAAA,oBAAF;AAAwBG,EAAAA;AAAxB,CAAD,KAA4C;AAAA;;AACpE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,oBAAoB;AACpBK,IAAAA,OAAO,CAACF,YAAD,CAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAACC,aAAa,EAAd,CAAV;AACD,GAFQ,EAEN,CAACL,YAAD,CAFM,CAAT;;AAIA,QAAMK,aAAa,GAAG,MAAM,CAC1B;AAAEC,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GAD0B,EAE1B;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBE,IAAAA,UAAU,EAAE,SAAhC;AAA2CC,IAAAA,KAAK,EAAE;AAAlD,GAF0B,EAG1B;AAAEH,IAAAA,KAAK,EAAE,OAAT;AAAkBE,IAAAA,UAAU,EAAE,YAA9B;AAA4CC,IAAAA,KAAK,EAAE;AAAnD,GAH0B,CAA5B;;AAMA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeD,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,IAAI,EAAER,IADR;AAEE,MAAA,OAAO,EAAEE,OAFX;AAGE,MAAA,QAAQ,EAAE,CAHZ;AAIE,MAAA,QAAQ,EAAGQ,GAAD,IAASA,GAAG,CAACC;AAJzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA5BD;;GAAMb,iB;;KAAAA,iB;AA8BNA,iBAAiB,CAACc,SAAlB,GAA8B;AAC5BhB,EAAAA,oBAAoB,EAAEF,SAAS,CAACmB,IAAV,CAAeC,UADT;AAE5Bf,EAAAA,YAAY,EAAEL,SAAS,CAACqB;AAFI,CAA9B;;AAKA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLlB,IAAAA,YAAY,EAAEkB,KAAK,CAACC,MAAN,CAAanB;AADtB,GAAP;AAGD,CAJD;;AAMA,MAAMoB,kBAAkB,GAAIC,QAAD,KAAe;AACxCxB,EAAAA,oBAAoB,EAAE,MAAMwB,QAAQ,CAACxB,oBAAoB,EAArB;AADI,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACqB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,iBAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nconst AdminHealthTopics = ({ fetchAllHealthTopics, healthTopics }) => {\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n\n  useEffect(() => {\n    fetchAllHealthTopics();\n    setRows(healthTopics);\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n  }, [healthTopics]);\n\n  const getColumnData = () => [\n    { field: \"healthTopicId\", hide: true },\n    { field: \"picture\", headerName: \"Picture\", width: 150 },\n    { field: \"title\", headerName: \"First name\", width: 130 },\n  ];\n\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={5}\n        getRowId={(row) => row.healthTopicId}\n      />\n    </div>\n  );\n};\n\nAdminHealthTopics.propTypes = {\n  fetchAllHealthTopics: PropTypes.func.isRequired,\n  healthTopics: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    healthTopics: state.common.healthTopics,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHealthTopics);\n"]},"metadata":{},"sourceType":"module"}