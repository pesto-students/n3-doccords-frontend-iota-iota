{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport CustomTable from \"components/shared/customTable\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminHealthTopics = ({\n  fetchAllHealthTopics,\n  healthTopics\n}) => {\n  _s();\n\n  const [rows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  useEffect(() => {\n    fetchAllHealthTopics();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData(columns));\n  }, [healthTopics]);\n\n  const getColumnData = columns => [{\n    field: \"picture\",\n    headerName: \"Picture\",\n    width: 150\n  }, {\n    field: \"title\",\n    headerName: \"First name\",\n    width: 130\n  }];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CustomTable, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminHealthTopics, \"Bso9Pi6Rre835X4eQ19maNfsiKI=\");\n\n_c = AdminHealthTopics;\nAdminHealthTopics.propTypes = {\n  fetchAllHealthTopics: PropTypes.func.isRequired,\n  healthTopics: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    healthTopics: state.common.healthTopics\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHealthTopics);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminHealthTopics\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/index.js"],"names":["React","useEffect","useState","PropTypes","connect","CustomTable","fetchAllHealthTopics","AdminHealthTopics","healthTopics","rows","columns","setColumns","getColumnData","field","headerName","width","propTypes","func","isRequired","array","mapStateToProps","state","common","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,oBAAT,QAAqC,oBAArC;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAED,EAAAA,oBAAF;AAAwBE,EAAAA;AAAxB,CAAD,KAA4C;AAAA;;AACpE,QAAM,CAACC,IAAD,IAASP,QAAQ,CAAC,EAAD,CAAvB;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,oBAAoB;AACrB,GAFQ,EAEN,EAFM,CAAT;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU,CAACC,aAAa,CAACF,OAAD,CAAd,CAAV;AACD,GAFQ,EAEN,CAACF,YAAD,CAFM,CAAT;;AAIA,QAAMI,aAAa,GAAIF,OAAD,IAAa,CACjC;AAAEG,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,UAAU,EAAE,SAAhC;AAA2CC,IAAAA,KAAK,EAAE;AAAlD,GADiC,EAEjC;AAAEF,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,UAAU,EAAE,YAA9B;AAA4CC,IAAAA,KAAK,EAAE;AAAnD,GAFiC,CAAnC;;AAKA,sBACE;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEN,IAAnB;AAAyB,MAAA,OAAO,EAAEC,OAAlC;AAA2C,MAAA,QAAQ,EAAE;AAArD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CArBD;;GAAMH,iB;;KAAAA,iB;AAuBNA,iBAAiB,CAACS,SAAlB,GAA8B;AAC5BV,EAAAA,oBAAoB,EAAEH,SAAS,CAACc,IAAV,CAAeC,UADT;AAE5BV,EAAAA,YAAY,EAAEL,SAAS,CAACgB;AAFI,CAA9B;;AAKA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLb,IAAAA,YAAY,EAAEa,KAAK,CAACC,MAAN,CAAad;AADtB,GAAP;AAGD,CAJD;;AAMA,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,oBAAoB,EAAE,MAAMkB,QAAQ,CAAClB,oBAAoB,EAArB;AADI,CAAf,CAA3B;;AAIA,eAAeF,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,iBAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport CustomTable from \"components/shared/customTable\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\n\nconst AdminHealthTopics = ({ fetchAllHealthTopics, healthTopics }) => {\n  const [rows] = useState([]);\n  const [columns, setColumns] = useState([]);\n\n  useEffect(() => {\n    fetchAllHealthTopics();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData(columns));\n  }, [healthTopics]);\n\n  const getColumnData = (columns) => [\n    { field: \"picture\", headerName: \"Picture\", width: 150 },\n    { field: \"title\", headerName: \"First name\", width: 130 },\n  ];\n\n  return (\n    <div>\n      <CustomTable rows={rows} columns={columns} pageSize={5} />\n    </div>\n  );\n};\n\nAdminHealthTopics.propTypes = {\n  fetchAllHealthTopics: PropTypes.func.isRequired,\n  healthTopics: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    healthTopics: state.common.healthTopics,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHealthTopics);\n"]},"metadata":{},"sourceType":"module"}