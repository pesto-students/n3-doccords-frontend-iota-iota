{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/login/index.js\",\n    _s = $RefreshSig$();\n\n// Import FirebaseAuth and firebase.\nimport React, { useEffect, useState } from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport { SETUP_PROFILE } from \"navigation/constants\"; // Configure FirebaseUI.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n      firebase.auth().currentUser.getIdToken(\n      /* forceRefresh */\n      true).then(function (idToken) {\n        // Send token to your backend via HTTPS\n        // ...\n        console.log(\"tokennnnnnnnnn\", idToken);\n      }).catch(function (error) {\n        console.error(error);\n      }); // localStorage.setItem(\"doccords_user\", JSON.stringify(user));\n      // console.log(authResult);\n\n      return false;\n    },\n    signInFailure: function (error) {\n      return console.log(error);\n    }\n  },\n  signInFlow: \"popup\",\n  signInSuccessUrl: SETUP_PROFILE,\n  signInOptions: [{\n    provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    fullLabel: \"Login or Register with Google\"\n  }, {\n    provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    fullLabel: \"Login or Register with Facebook\"\n  }, {\n    provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n    recaptchaParameters: {\n      type: \"image\",\n      // 'audio'\n      size: \"invisible\",\n      // 'invisible' or 'compact'\n      badge: \"bottomleft\" // 'bottomright' or 'inline' applies to invisible.\n\n    },\n    fullLabel: \"Login or Register with Phone\",\n    defaultCountry: \"IN\"\n  }]\n};\n\nconst signOut = () => {\n  firebase.auth().signOut().then(function () {\n    console.log(\"Successufully Signed out\");\n  }).catch(function () {\n    console.log(\"Error Signed out\");\n  });\n};\n\nconst LoginView = () => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // const user = firebase.auth().currentUser;\n    const authObserver = firebase.auth().onAuthStateChanged(user => {\n      setUser(user);\n    });\n    return authObserver;\n  }, []);\n  console.log(\"user\", user);\n\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome,\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: signOut,\n          children: \"Sign out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Doccords\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Login or Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledFirebaseAuth, {\n        uiConfig: uiConfig,\n        firebaseAuth: firebase.auth()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(LoginView, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n\n_c = LoginView;\nexport default LoginView; // const [user, setUser] = useState(null);\n// useEffect(() => {\n//   const user = firebase.auth().currentUser;\n//   const authObserver = firebase.auth().onAuthStateChanged((user) => {\n//     setUser(user);\n//   });\n//   return authObserver;\n// });\n// console.log(\"user\", user);\n// if (user) {\n//   return (\n//     <>\n//       <p>\n//         Welcome, {user.displayName} <br />\n//         <small>{user.email}</small> <br />\n//         <button onClick={signOut}>Sign out</button>\n//       </p>\n//     </>\n//   );\n// } else {\n//   return (\n//     <>\n//       <div>Sign up / Register</div>\n//       <StyleFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n//     </>\n//   );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginView\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/login/index.js"],"names":["React","useEffect","useState","StyledFirebaseAuth","firebase","SETUP_PROFILE","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","auth","currentUser","getIdToken","then","idToken","console","log","catch","error","signInFailure","signInFlow","signInSuccessUrl","signInOptions","provider","GoogleAuthProvider","PROVIDER_ID","fullLabel","FacebookAuthProvider","PhoneAuthProvider","recaptchaParameters","type","size","badge","defaultCountry","signOut","LoginView","user","setUser","authObserver","onAuthStateChanged"],"mappings":"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","sourcesContent":["// Import FirebaseAuth and firebase.\nimport React, { useEffect, useState } from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport { SETUP_PROFILE } from \"navigation/constants\";\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n      firebase\n        .auth()\n        .currentUser.getIdToken(/* forceRefresh */ true)\n        .then(function (idToken) {\n          // Send token to your backend via HTTPS\n          // ...\n          console.log(\"tokennnnnnnnnn\", idToken);\n        })\n        .catch(function (error) {\n          console.error(error);\n        });\n      // localStorage.setItem(\"doccords_user\", JSON.stringify(user));\n      // console.log(authResult);\n      return false;\n    },\n    signInFailure: function (error) {\n      return console.log(error);\n    },\n  },\n  signInFlow: \"popup\",\n  signInSuccessUrl: SETUP_PROFILE,\n  signInOptions: [\n    {\n      provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      fullLabel: \"Login or Register with Google\",\n    },\n    {\n      provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      fullLabel: \"Login or Register with Facebook\",\n    },\n    {\n      provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n      recaptchaParameters: {\n        type: \"image\", // 'audio'\n        size: \"invisible\", // 'invisible' or 'compact'\n        badge: \"bottomleft\", // 'bottomright' or 'inline' applies to invisible.\n      },\n      fullLabel: \"Login or Register with Phone\",\n\n      defaultCountry: \"IN\",\n    },\n  ],\n};\nconst signOut = () => {\n  firebase\n    .auth()\n    .signOut()\n    .then(function () {\n      console.log(\"Successufully Signed out\");\n    })\n    .catch(function () {\n      console.log(\"Error Signed out\");\n    });\n};\nconst LoginView = () => {\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // const user = firebase.auth().currentUser;\n    const authObserver = firebase.auth().onAuthStateChanged((user) => {\n      setUser(user);\n    });\n    return authObserver;\n  }, []);\n  console.log(\"user\", user);\n  if (user) {\n    return (\n      <>\n        <p>\n          Welcome,\n          <button onClick={signOut}>Sign out</button>\n        </p>\n      </>\n    );\n  } else {\n    return (\n      <div>\n        <h1>Doccords</h1>\n        <p>Login or Signup</p>\n        <StyledFirebaseAuth\n          uiConfig={uiConfig}\n          firebaseAuth={firebase.auth()}\n        />\n      </div>\n    );\n  }\n};\n\nexport default LoginView;\n\n// const [user, setUser] = useState(null);\n\n// useEffect(() => {\n//   const user = firebase.auth().currentUser;\n//   const authObserver = firebase.auth().onAuthStateChanged((user) => {\n//     setUser(user);\n//   });\n//   return authObserver;\n// });\n\n// console.log(\"user\", user);\n\n// if (user) {\n//   return (\n//     <>\n//       <p>\n//         Welcome, {user.displayName} <br />\n//         <small>{user.email}</small> <br />\n//         <button onClick={signOut}>Sign out</button>\n//       </p>\n//     </>\n//   );\n// } else {\n//   return (\n//     <>\n//       <div>Sign up / Register</div>\n//       <StyleFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n//     </>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}