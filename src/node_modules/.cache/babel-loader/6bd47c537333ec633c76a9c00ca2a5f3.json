{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/shared/customTable/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DataGrid } from \"@material-ui/data-grid\"; // const columns = [\n//   { field: \"id\", headerName: \"ID\", width: 70 },\n//   { field: \"firstName\", headerName: \"First name\", width: 130 },\n//   { field: \"lastName\", headerName: \"Last name\", width: 130 },\n//   {\n//     field: \"age\",\n//     headerName: \"Age\",\n//     type: \"number\",\n//     width: 90,\n//   },\n//   {\n//     field: \"fullName\",\n//     headerName: \"Full name\",\n//     description: \"This column has a value getter and is not sortable.\",\n//     sortable: false,\n//     width: 160,\n//     valueGetter: (params) => params.firstName,\n//   },\n// ];\n// const rows = [\n//   { id: 1, lastName: \"Snow\", firstName: \"Jon\", age: 35 },\n//   { id: 2, lastName: \"Lannister\", firstName: \"Cersei\", age: 42 },\n//   { id: 3, lastName: \"Lannister\", firstName: \"Jaime\", age: 45 },\n//   { id: 4, lastName: \"Stark\", firstName: \"Arya\", age: 16 },\n//   { id: 5, lastName: \"Targaryen\", firstName: \"Daenerys\", age: null },\n//   { id: 6, lastName: \"Melisandre\", firstName: null, age: 150 },\n//   { id: 7, lastName: \"Clifford\", firstName: \"Ferrara\", age: 44 },\n//   { id: 8, lastName: \"Frances\", firstName: \"Rossini\", age: 36 },\n//   { id: 9, lastName: \"Roxie\", firstName: \"Harvey\", age: 65 },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomTable({\n  rows,\n  columns,\n  pageSize\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: pageSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = CustomTable;\nCustomTable.propTypes = {\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  pageSize: PropTypes.number\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTable\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/shared/customTable/index.js"],"names":["React","PropTypes","DataGrid","CustomTable","rows","columns","pageSize","height","width","propTypes","array","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,wBAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAArB,EAAkD;AAC/D,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEJ,IAAhB;AAAsB,MAAA,OAAO,EAAEC,OAA/B;AAAwC,MAAA,QAAQ,EAAEC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KANuBH,W;AAQxBA,WAAW,CAACM,SAAZ,GAAwB;AACtBL,EAAAA,IAAI,EAAEH,SAAS,CAACS,KAAV,CAAgBC,UADA;AAEtBN,EAAAA,OAAO,EAAEJ,SAAS,CAACS,KAAV,CAAgBC,UAFH;AAGtBL,EAAAA,QAAQ,EAAEL,SAAS,CAACW;AAHE,CAAxB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\n// const columns = [\n//   { field: \"id\", headerName: \"ID\", width: 70 },\n//   { field: \"firstName\", headerName: \"First name\", width: 130 },\n//   { field: \"lastName\", headerName: \"Last name\", width: 130 },\n//   {\n//     field: \"age\",\n//     headerName: \"Age\",\n//     type: \"number\",\n//     width: 90,\n//   },\n//   {\n//     field: \"fullName\",\n//     headerName: \"Full name\",\n//     description: \"This column has a value getter and is not sortable.\",\n//     sortable: false,\n//     width: 160,\n//     valueGetter: (params) => params.firstName,\n//   },\n// ];\n\n// const rows = [\n//   { id: 1, lastName: \"Snow\", firstName: \"Jon\", age: 35 },\n//   { id: 2, lastName: \"Lannister\", firstName: \"Cersei\", age: 42 },\n//   { id: 3, lastName: \"Lannister\", firstName: \"Jaime\", age: 45 },\n//   { id: 4, lastName: \"Stark\", firstName: \"Arya\", age: 16 },\n//   { id: 5, lastName: \"Targaryen\", firstName: \"Daenerys\", age: null },\n//   { id: 6, lastName: \"Melisandre\", firstName: null, age: 150 },\n//   { id: 7, lastName: \"Clifford\", firstName: \"Ferrara\", age: 44 },\n//   { id: 8, lastName: \"Frances\", firstName: \"Rossini\", age: 36 },\n//   { id: 9, lastName: \"Roxie\", firstName: \"Harvey\", age: 65 },\n// ];\n\nexport default function CustomTable({ rows, columns, pageSize }) {\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <DataGrid rows={rows} columns={columns} pageSize={pageSize} />\n    </div>\n  );\n}\n\nCustomTable.propTypes = {\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  pageSize: PropTypes.number,\n};\n"]},"metadata":{},"sourceType":"module"}