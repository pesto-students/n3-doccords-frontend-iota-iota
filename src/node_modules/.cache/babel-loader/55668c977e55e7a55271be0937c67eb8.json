{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/users/profiles/createProfile.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Paper, makeStyles, Grid, Typography } from \"@material-ui/core\";\nimport Controls from \"../../../components/Form/controls/Controls\";\nimport { useForm, Form } from \"../../../components/Form/useForm\";\nimport UploadFile from \"components/shared/upload/uploadFile\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst genderItems = [{\n  id: \"male\",\n  title: \"Male\"\n}, {\n  id: \"female\",\n  title: \"Female\"\n}, {\n  id: \"other\",\n  title: \"Other\"\n}];\n\nconst getRelationshipCollection = () => [{\n  id: \"1\",\n  title: \"Self\"\n}, {\n  id: \"2\",\n  title: \"Spouse\"\n}, {\n  id: \"3\",\n  title: \"Father\"\n}, {\n  id: \"4\",\n  title: \"Mother\"\n}, {\n  id: \"5\",\n  title: \"Brother\"\n}, {\n  id: \"6\",\n  title: \"Sister\"\n}, {\n  id: \"7\",\n  title: \"Child\"\n}];\n\nconst initialFValues = {\n  id: 0,\n  profileName: \"\",\n  email: \"\",\n  mobile: \"\",\n  age: \"\",\n  gender: \"male\",\n  relationship: 1,\n  // creationDate: new Date(),\n  cancer: false,\n  bloodPressure: false,\n  sugar: false,\n  covid: false\n};\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    marginTop: \"3rem\",\n    margin: theme.spacing(3),\n    padding: theme.spacing(3)\n  }\n}));\n\nconst CreateProfile = ({\n  fetchAllHealthTopics\n}) => {\n  _s();\n\n  const [documentData, setDocumentData] = useState({});\n  const [profileName, setProfileName] = useState(\"\");\n  const [relationshipId, setRelationshipId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [healthIssues, setHealthIssues] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const uploadedLink = useSelector(state => state.common.uploadedLink);\n  const classes = useStyles();\n  useEffect(() => {\n    console.log(fetchAllHealthTopics);\n    fetchAllHealthTopics();\n    setRelationshipId(getRelationshipCollection()[0].id);\n  }, []);\n  useEffect(() => {\n    setDocumentData({\n      link: uploadedLink\n    });\n  }, [uploadedLink]);\n\n  const createNewProfile = () => {\n    console.log(\"---------DocumentData------\", documentData);\n  }; // const validate = (fieldValues = values) => {\n  //   const temp = { ...errors };\n  //   if (\"fullName\" in fieldValues)\n  //     temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\n  //   if (\"email\" in fieldValues)\n  //     temp.email = /$^|.+@.+..+/.test(fieldValues.email)\n  //       ? \"\"\n  //       : \"Email is not valid.\";\n  //   // if (\"mobile\" in fieldValues)\n  //   //   temp.mobile =\n  //   //     fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\";\n  //   if (\"relationship\" in fieldValues)\n  //     temp.relationship =\n  //       fieldValues.relationship !== null ? \"\" : \"This field is required.\";\n  //   setErrors({\n  //     ...temp,\n  //   });\n  //   if (fieldValues === values)\n  //     return Object.values(temp).every((x) => x === \"\");\n  // };\n  // const { values, setValues, errors, setErrors, handleInputChange, resetForm }\n  // const { values, errors, setErrors, handleInputChange } = useForm(\n  //   initialFValues,\n  //   true,\n  //   validate\n  // );\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   if (validate()) {\n  //     // Save data to backend and in local storge also\n  //     console.log(values);\n  //     resetForm();\n  //   }\n  // };\n\n\n  const handleInputChange = e => {\n    if (e.target.name === \"document\") {\n      setDocumentData({ ...documentData,\n        name: e.target.value\n      });\n    }\n\n    console.log(documentData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          xl: 3,\n          children: /*#__PURE__*/_jsxDEV(UploadFile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), uploadedLink && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 9,\n          xl: 9,\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"document\",\n            label: \"Document name\",\n            value: documentData.name,\n            onChange: handleInputChange,\n            error: errors.document\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n            name: \"topic\",\n            label: \"Health topic\",\n            value: relationshipId,\n            onChange: handleInputChange,\n            options: getRelationshipCollection(),\n            error: errors.relationship\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: createNewProfile,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"fullName\",\n              label: \"Full Name\",\n              value: profileName,\n              onChange: handleInputChange,\n              error: errors.profileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n              name: \"relationship\",\n              label: \"Relationship\",\n              value: relationshipId,\n              onChange: handleInputChange,\n              options: getRelationshipCollection(),\n              error: errors.relationship\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              label: \"Email\",\n              name: \"email\",\n              value: email,\n              onChange: handleInputChange,\n              error: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              label: \"Mobile\",\n              name: \"mobile\",\n              value: mobile,\n              onChange: handleInputChange,\n              error: errors.mobile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"age\",\n              label: \"Age\",\n              value: age,\n              onChange: handleInputChange,\n              error: errors.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Controls.RadioGroup, {\n              name: \"gender\",\n              label: \"Gender\",\n              value: gender,\n              onChange: handleInputChange,\n              items: genderItems\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: \"Any Health Issues\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 3,\n                children: [/*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n                  name: \"cancer\",\n                  label: \"Cancer\",\n                  value: false,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n                  name: \"sugar\",\n                  label: \"Sugar\",\n                  value: true,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 3,\n                children: [/*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n                  name: \"bloodPressure\",\n                  label: \"BloodPressure\",\n                  value: true,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n                  name: \"covid\",\n                  label: \"Covid\",\n                  value: false,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controls.Button, {\n                type: \"submit\",\n                text: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateProfile, \"Nz/edH3X2NzgDZoYwC8RKmKQUk4=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = CreateProfile;\nCreateProfile.propTypes = {\n  fetchAllHealthTopics: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  healthTopics: state.common.healthTopics\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProfile);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProfile\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/users/profiles/createProfile.js"],"names":["React","useEffect","useState","PropTypes","connect","useSelector","Paper","makeStyles","Grid","Typography","Controls","useForm","Form","UploadFile","fetchAllHealthTopics","genderItems","id","title","getRelationshipCollection","initialFValues","profileName","email","mobile","age","gender","relationship","cancer","bloodPressure","sugar","covid","useStyles","theme","pageContent","marginTop","margin","spacing","padding","CreateProfile","documentData","setDocumentData","setProfileName","relationshipId","setRelationshipId","setEmail","setMobile","setAge","setGender","healthIssues","setHealthIssues","errors","setErrors","uploadedLink","state","common","classes","console","log","link","createNewProfile","handleInputChange","e","target","name","value","display","flexDirection","justifyContent","document","propTypes","func","mapStateToProps","healthTopics","mapDispatchToProps","dispatch"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,IAA5B,EAAkCC,UAAlC,QAAoD,mBAApD;AACA,OAAOC,QAAP,MAAqB,4CAArB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,kCAA9B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,oBAAT,QAAqC,oBAArC;;;AAEA,MAAMC,WAAW,GAAG,CAClB;AAAEC,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE;AAArB,CADkB,EAElB;AAAED,EAAAA,EAAE,EAAE,QAAN;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFkB,EAGlB;AAAED,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAHkB,CAApB;;AAMA,MAAMC,yBAAyB,GAAG,MAAM,CACtC;AAAEF,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CADsC,EAEtC;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CAFsC,EAGtC;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CAHsC,EAItC;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CAJsC,EAKtC;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CALsC,EAMtC;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CANsC,EAOtC;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CAPsC,CAAxC;;AAUA,MAAME,cAAc,GAAG;AACrBH,EAAAA,EAAE,EAAE,CADiB;AAErBI,EAAAA,WAAW,EAAE,EAFQ;AAGrBC,EAAAA,KAAK,EAAE,EAHc;AAIrBC,EAAAA,MAAM,EAAE,EAJa;AAKrBC,EAAAA,GAAG,EAAE,EALgB;AAMrBC,EAAAA,MAAM,EAAE,MANa;AAOrBC,EAAAA,YAAY,EAAE,CAPO;AAQrB;AACAC,EAAAA,MAAM,EAAE,KATa;AAUrBC,EAAAA,aAAa,EAAE,KAVM;AAWrBC,EAAAA,KAAK,EAAE,KAXc;AAYrBC,EAAAA,KAAK,EAAE;AAZc,CAAvB;AAeA,MAAMC,SAAS,GAAGvB,UAAU,CAAEwB,KAAD,KAAY;AACvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAE,MADA;AAEXC,IAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFG;AAGXC,IAAAA,OAAO,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd;AAHE;AAD0B,CAAZ,CAAD,CAA5B;;AAQA,MAAME,aAAa,GAAG,CAAC;AAAEvB,EAAAA;AAAF,CAAD,KAA8B;AAAA;;AAClD,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCrC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACkB,WAAD,EAAcoB,cAAd,IAAgCtC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACuC,cAAD,EAAiBC,iBAAjB,IAAsCxC,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACmB,KAAD,EAAQsB,QAAR,IAAoBzC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,MAAD,EAASsB,SAAT,IAAsB1C,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACqB,GAAD,EAAMsB,MAAN,IAAgB3C,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACsB,MAAD,EAASsB,SAAT,IAAsB5C,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC6C,YAAD,EAAeC,eAAf,IAAkC9C,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC+C,MAAD,EAASC,SAAT,IAAsBhD,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMiD,YAAY,GAAG9C,WAAW,CAAE+C,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,YAAzB,CAAhC;AACA,QAAMG,OAAO,GAAGxB,SAAS,EAAzB;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AACdsD,IAAAA,OAAO,CAACC,GAAR,CAAY1C,oBAAZ;AACAA,IAAAA,oBAAoB;AACpB4B,IAAAA,iBAAiB,CAACxB,yBAAyB,GAAG,CAAH,CAAzB,CAA+BF,EAAhC,CAAjB;AACD,GAJQ,EAIN,EAJM,CAAT;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACdsC,IAAAA,eAAe,CAAC;AACdkB,MAAAA,IAAI,EAAEN;AADQ,KAAD,CAAf;AAGD,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;;AAKA,QAAMO,gBAAgB,GAAG,MAAM;AAC7BH,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2ClB,YAA3C;AACD,GAFD,CAxBkD,CA4BlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMqB,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,QAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,UAAtB,EAAkC;AAChCvB,MAAAA,eAAe,CAAC,EACd,GAAGD,YADW;AAEdwB,QAAAA,IAAI,EAAEF,CAAC,CAACC,MAAF,CAASE;AAFD,OAAD,CAAf;AAID;;AACDR,IAAAA,OAAO,CAACC,GAAR,CAAYlB,YAAZ;AACD,GARD;;AAUA,sBACE;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEgB,OAAO,CAACtB,WAA1B;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAiC,UAAA,EAAE,EAAE,CAArC;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGmB,YAAY,iBACX,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,EAAE,EAAE,EAFN;AAGE,UAAA,EAAE,EAAE,CAHN;AAIE,UAAA,EAAE,EAAE,CAJN;AAKE,UAAA,EAAE,EAAE,CALN;AAME,UAAA,KAAK,EAAE;AACLa,YAAAA,OAAO,EAAE,MADJ;AAELC,YAAAA,aAAa,EAAE,QAFV;AAGLC,YAAAA,cAAc,EAAE;AAHX,WANT;AAAA,kCAYE,QAAC,QAAD,CAAU,KAAV;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,KAAK,EAAC,eAFR;AAGE,YAAA,KAAK,EAAE5B,YAAY,CAACwB,IAHtB;AAIE,YAAA,QAAQ,EAAEH,iBAJZ;AAKE,YAAA,KAAK,EAAEV,MAAM,CAACkB;AALhB;AAAA;AAAA;AAAA;AAAA,kBAZF,eAmBE,QAAC,QAAD,CAAU,MAAV;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,KAAK,EAAC,cAFR;AAGE,YAAA,KAAK,EAAE1B,cAHT;AAIE,YAAA,QAAQ,EAAEkB,iBAJZ;AAKE,YAAA,OAAO,EAAEzC,yBAAyB,EALpC;AAME,YAAA,KAAK,EAAE+B,MAAM,CAACxB;AANhB;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAuCE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE6B,OAAO,CAACtB,WAA1B;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE0B,gBAAhB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,oCACE,QAAC,QAAD,CAAU,KAAV;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,KAAK,EAAC,WAFR;AAGE,cAAA,KAAK,EAAEtC,WAHT;AAIE,cAAA,QAAQ,EAAEuC,iBAJZ;AAKE,cAAA,KAAK,EAAEV,MAAM,CAAC7B;AALhB;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,QAAD,CAAU,MAAV;AACE,cAAA,IAAI,EAAC,cADP;AAEE,cAAA,KAAK,EAAC,cAFR;AAGE,cAAA,KAAK,EAAEqB,cAHT;AAIE,cAAA,QAAQ,EAAEkB,iBAJZ;AAKE,cAAA,OAAO,EAAEzC,yBAAyB,EALpC;AAME,cAAA,KAAK,EAAE+B,MAAM,CAACxB;AANhB;AAAA;AAAA;AAAA;AAAA,oBARF,eAgBE,QAAC,QAAD,CAAU,KAAV;AACE,cAAA,KAAK,EAAC,OADR;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,KAAK,EAAEJ,KAHT;AAIE,cAAA,QAAQ,EAAEsC,iBAJZ;AAKE,cAAA,KAAK,EAAEV,MAAM,CAAC5B;AALhB;AAAA;AAAA;AAAA;AAAA,oBAhBF,eAuBE,QAAC,QAAD,CAAU,KAAV;AACE,cAAA,KAAK,EAAC,QADR;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,KAAK,EAAEC,MAHT;AAIE,cAAA,QAAQ,EAAEqC,iBAJZ;AAKE,cAAA,KAAK,EAAEV,MAAM,CAAC3B;AALhB;AAAA;AAAA;AAAA;AAAA,oBAvBF,eA8BE,QAAC,QAAD,CAAU,KAAV;AACE,cAAA,IAAI,EAAC,KADP;AAEE,cAAA,KAAK,EAAC,KAFR;AAGE,cAAA,KAAK,EAAEC,GAHT;AAIE,cAAA,QAAQ,EAAEoC,iBAJZ;AAKE,cAAA,KAAK,EAAEV,MAAM,CAAC1B;AALhB;AAAA;AAAA;AAAA;AAAA,oBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAuCE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,oCACE,QAAC,QAAD,CAAU,UAAV;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,KAAK,EAAC,QAFR;AAGE,cAAA,KAAK,EAAEC,MAHT;AAIE,cAAA,QAAQ,EAAEmC,iBAJZ;AAKE,cAAA,KAAK,EAAE5C;AALT;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eASE,QAAC,IAAD;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,CAAtB;AAAA,wCACE,QAAC,QAAD,CAAU,QAAV;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,KAAK,EAAC,QAFR;AAGE,kBAAA,KAAK,EAAE,KAHT;AAIE,kBAAA,QAAQ,EAAE4C;AAJZ;AAAA;AAAA;AAAA;AAAA,wBADF,eAOE,QAAC,QAAD,CAAU,QAAV;AACE,kBAAA,IAAI,EAAC,OADP;AAEE,kBAAA,KAAK,EAAC,OAFR;AAGE,kBAAA,KAAK,EAAE,IAHT;AAIE,kBAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAeE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,CAAtB;AAAA,wCACE,QAAC,QAAD,CAAU,QAAV;AACE,kBAAA,IAAI,EAAC,eADP;AAEE,kBAAA,KAAK,EAAC,eAFR;AAGE,kBAAA,KAAK,EAAE,IAHT;AAIE,kBAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA,wBADF,eAOE,QAAC,QAAD,CAAU,QAAV;AACE,kBAAA,IAAI,EAAC,OADP;AAEE,kBAAA,KAAK,EAAC,OAFR;AAGE,kBAAA,KAAK,EAAE,KAHT;AAIE,kBAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,eAwCE;AAAA,qCACE,QAAC,QAAD,CAAU,MAAV;AAAiB,gBAAA,IAAI,EAAC,QAAtB;AAA+B,gBAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvCF;AAAA,kBADF;AAuID,CAlND;;GAAMtB,a;UAUiBhC,W,EACLyB,S;;;KAXZO,a;AAoNNA,aAAa,CAAC+B,SAAd,GAA0B;AACxBtD,EAAAA,oBAAoB,EAAEX,SAAS,CAACkE;AADR,CAA1B;;AAIA,MAAMC,eAAe,GAAIlB,KAAD,KAAY;AAClCmB,EAAAA,YAAY,EAAEnB,KAAK,CAACC,MAAN,CAAakB;AADO,CAAZ,CAAxB;;AAGA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxC3D,EAAAA,oBAAoB,EAAE,MAAM2D,QAAQ,CAAC3D,oBAAoB,EAArB;AADI,CAAf,CAA3B;;AAGA,eAAeV,OAAO,CAACkE,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnC,aAA7C,CAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Paper, makeStyles, Grid, Typography } from \"@material-ui/core\";\nimport Controls from \"../../../components/Form/controls/Controls\";\nimport { useForm, Form } from \"../../../components/Form/useForm\";\nimport UploadFile from \"components/shared/upload/uploadFile\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\n\nconst genderItems = [\n  { id: \"male\", title: \"Male\" },\n  { id: \"female\", title: \"Female\" },\n  { id: \"other\", title: \"Other\" },\n];\n\nconst getRelationshipCollection = () => [\n  { id: \"1\", title: \"Self\" },\n  { id: \"2\", title: \"Spouse\" },\n  { id: \"3\", title: \"Father\" },\n  { id: \"4\", title: \"Mother\" },\n  { id: \"5\", title: \"Brother\" },\n  { id: \"6\", title: \"Sister\" },\n  { id: \"7\", title: \"Child\" },\n];\n\nconst initialFValues = {\n  id: 0,\n  profileName: \"\",\n  email: \"\",\n  mobile: \"\",\n  age: \"\",\n  gender: \"male\",\n  relationship: 1,\n  // creationDate: new Date(),\n  cancer: false,\n  bloodPressure: false,\n  sugar: false,\n  covid: false,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginTop: \"3rem\",\n    margin: theme.spacing(3),\n    padding: theme.spacing(3),\n  },\n}));\n\nconst CreateProfile = ({ fetchAllHealthTopics }) => {\n  const [documentData, setDocumentData] = useState({});\n  const [profileName, setProfileName] = useState(\"\");\n  const [relationshipId, setRelationshipId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [healthIssues, setHealthIssues] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const uploadedLink = useSelector((state) => state.common.uploadedLink);\n  const classes = useStyles();\n\n  useEffect(() => {\n    console.log(fetchAllHealthTopics);\n    fetchAllHealthTopics();\n    setRelationshipId(getRelationshipCollection()[0].id);\n  }, []);\n\n  useEffect(() => {\n    setDocumentData({\n      link: uploadedLink,\n    });\n  }, [uploadedLink]);\n  const createNewProfile = () => {\n    console.log(\"---------DocumentData------\", documentData);\n  };\n\n  // const validate = (fieldValues = values) => {\n  //   const temp = { ...errors };\n  //   if (\"fullName\" in fieldValues)\n  //     temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\n  //   if (\"email\" in fieldValues)\n  //     temp.email = /$^|.+@.+..+/.test(fieldValues.email)\n  //       ? \"\"\n  //       : \"Email is not valid.\";\n  //   // if (\"mobile\" in fieldValues)\n  //   //   temp.mobile =\n  //   //     fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\";\n  //   if (\"relationship\" in fieldValues)\n  //     temp.relationship =\n  //       fieldValues.relationship !== null ? \"\" : \"This field is required.\";\n  //   setErrors({\n  //     ...temp,\n  //   });\n\n  //   if (fieldValues === values)\n  //     return Object.values(temp).every((x) => x === \"\");\n  // };\n\n  // const { values, setValues, errors, setErrors, handleInputChange, resetForm }\n  // const { values, errors, setErrors, handleInputChange } = useForm(\n  //   initialFValues,\n  //   true,\n  //   validate\n  // );\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   if (validate()) {\n  //     // Save data to backend and in local storge also\n  //     console.log(values);\n  //     resetForm();\n  //   }\n  // };\n  const handleInputChange = (e) => {\n    if (e.target.name === \"document\") {\n      setDocumentData({\n        ...documentData,\n        name: e.target.value,\n      });\n    }\n    console.log(documentData);\n  };\n\n  return (\n    <>\n      <Paper className={classes.pageContent}>\n        <Grid container>\n          <Grid item xs={12} md={6} lg={3} xl={3}>\n            <UploadFile />\n          </Grid>\n          {uploadedLink && (\n            <Grid\n              item\n              xs={12}\n              md={6}\n              lg={9}\n              xl={9}\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Controls.Input\n                name=\"document\"\n                label=\"Document name\"\n                value={documentData.name}\n                onChange={handleInputChange}\n                error={errors.document}\n              />\n              <Controls.Select\n                name=\"topic\"\n                label=\"Health topic\"\n                value={relationshipId}\n                onChange={handleInputChange}\n                options={getRelationshipCollection()}\n                error={errors.relationship}\n              />\n            </Grid>\n          )}\n        </Grid>\n      </Paper>\n\n      <Paper className={classes.pageContent}>\n        <Form onSubmit={createNewProfile}>\n          <Grid container>\n            <Grid item xs={12} md={6}>\n              <Controls.Input\n                name=\"fullName\"\n                label=\"Full Name\"\n                value={profileName}\n                onChange={handleInputChange}\n                error={errors.profileName}\n              />\n              <Controls.Select\n                name=\"relationship\"\n                label=\"Relationship\"\n                value={relationshipId}\n                onChange={handleInputChange}\n                options={getRelationshipCollection()}\n                error={errors.relationship}\n              />\n              <Controls.Input\n                label=\"Email\"\n                name=\"email\"\n                value={email}\n                onChange={handleInputChange}\n                error={errors.email}\n              />\n              <Controls.Input\n                label=\"Mobile\"\n                name=\"mobile\"\n                value={mobile}\n                onChange={handleInputChange}\n                error={errors.mobile}\n              />\n              <Controls.Input\n                name=\"age\"\n                label=\"Age\"\n                value={age}\n                onChange={handleInputChange}\n                error={errors.age}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Controls.RadioGroup\n                name=\"gender\"\n                label=\"Gender\"\n                value={gender}\n                onChange={handleInputChange}\n                items={genderItems}\n              />\n              <Typography variant=\"subtitle1\">Any Health Issues</Typography>\n              <Grid>\n                <Grid item xs={6} sm={3}>\n                  <Controls.Checkbox\n                    name=\"cancer\"\n                    label=\"Cancer\"\n                    value={false}\n                    onChange={handleInputChange}\n                  />\n                  <Controls.Checkbox\n                    name=\"sugar\"\n                    label=\"Sugar\"\n                    value={true}\n                    onChange={handleInputChange}\n                  />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                  <Controls.Checkbox\n                    name=\"bloodPressure\"\n                    label=\"BloodPressure\"\n                    value={true}\n                    onChange={handleInputChange}\n                  />\n                  <Controls.Checkbox\n                    name=\"covid\"\n                    label=\"Covid\"\n                    value={false}\n                    onChange={handleInputChange}\n                  />\n                </Grid>\n              </Grid>\n\n              <div>\n                <Controls.Button type=\"submit\" text=\"Submit\" />\n                {/* <Controls.Button\n                  text=\"Reset\"\n                  color=\"default\"\n                  onClick={resetForm}\n                /> */}\n              </div>\n            </Grid>\n          </Grid>\n        </Form>\n      </Paper>\n    </>\n  );\n};\n\nCreateProfile.propTypes = {\n  fetchAllHealthTopics: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  healthTopics: state.common.healthTopics,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProfile);\n"]},"metadata":{},"sourceType":"module"}