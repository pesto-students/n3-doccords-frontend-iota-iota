{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/Form/useForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n  _s();\n\n  const [values, setValues] = useState(initialFValues);\n  const [errors, setErrors] = useState({});\n  console.log(values);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n    if (validateOnChange) validate({\n      [name]: value\n    });\n  };\n\n  const resetForm = () => {\n    setValues(initialFValues);\n    setErrors({});\n  };\n\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  };\n}\n\n_s(useForm, \"eRFbKdGQbiaa9HoEdb7CtqsAoqM=\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiFormControl-root\": {\n      width: \"80%\",\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport function Form(props) {\n  _s2();\n\n  const classes = useStyles(); // eslint-disable-next-line react/prop-types\n\n  const {\n    children,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    autoComplete: \"off\",\n    ...other,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Form, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/Form/useForm.js"],"names":["React","useState","makeStyles","useForm","initialFValues","validateOnChange","validate","values","setValues","errors","setErrors","console","log","handleInputChange","e","name","value","target","resetForm","useStyles","theme","root","width","margin","spacing","Form","props","classes","children","other"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,OAAO,SAASC,OAAT,CAAiBC,cAAjB,EAAiCC,gBAAgB,GAAG,KAApD,EAA2DC,QAA3D,EAAqE;AAAA;;AAC1E,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACG,cAAD,CAApC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AACA,QAAMM,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAT,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACQ,IAAD,GAAQC;AAFA,KAAD,CAAT;AAIA,QAAIX,gBAAJ,EAAsBC,QAAQ,CAAC;AAAE,OAACS,IAAD,GAAQC;AAAV,KAAD,CAAR;AACvB,GAPD;;AASA,QAAME,SAAS,GAAG,MAAM;AACtBV,IAAAA,SAAS,CAACJ,cAAD,CAAT;AACAM,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAHD;;AAKA,SAAO;AACLH,IAAAA,MADK;AAELC,IAAAA,SAFK;AAGLC,IAAAA,MAHK;AAILC,IAAAA,SAJK;AAKLG,IAAAA,iBALK;AAMLK,IAAAA;AANK,GAAP;AAQD;;GA1Bef,O;;AA4BhB,MAAMgB,SAAS,GAAGjB,UAAU,CAAEkB,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,8BAA0B;AACxBC,MAAAA,KAAK,EAAE,KADiB;AAExBC,MAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFgB;AADtB;AADiC,CAAZ,CAAD,CAA5B;AASA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAC1B,QAAMC,OAAO,GAAGR,SAAS,EAAzB,CAD0B,CAE1B;;AACA,QAAM;AAAES,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAyBH,KAA/B;AACA,sBACE;AAAM,IAAA,SAAS,EAAEC,OAAO,CAACN,IAAzB;AAA+B,IAAA,YAAY,EAAC,KAA5C;AAAA,OAAsDQ,KAAtD;AAAA,cACGH,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IATeH,I;UACEN,S;;;KADFM,I","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n  const [values, setValues] = useState(initialFValues);\n  const [errors, setErrors] = useState({});\n  console.log(values);\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n    if (validateOnChange) validate({ [name]: value });\n  };\n\n  const resetForm = () => {\n    setValues(initialFValues);\n    setErrors({});\n  };\n\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiFormControl-root\": {\n      width: \"80%\",\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport function Form(props) {\n  const classes = useStyles();\n  // eslint-disable-next-line react/prop-types\n  const { children, ...other } = props;\n  return (\n    <form className={classes.root} autoComplete=\"off\" {...other}>\n      {props.children}\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}