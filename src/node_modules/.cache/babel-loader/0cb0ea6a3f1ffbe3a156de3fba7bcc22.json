{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, Provider } from \"react-redux\"; // Router\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { AuthProvider, currentUser } from \"context/AuthContext\";\nimport { RouterConfig } from \"navigation/RouterConfig\"; // MUI Theme\n\nimport { ThemeProvider } from \"@material-ui/core\"; // import { ThemeSwitch } from \"components/ThemeSwitch\";\n\nimport { dark, light } from \"styles/muiTheme\";\nimport { store } from \"redux/store\"; // menubar\n\nimport Nav from \"components/shared/menuBar/nav\"; // styles\n\nimport \"./App.css\";\nimport { fetchUserDetail } from \"apiRequests/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [darkState] = useState(false);\n  const user = currentUser();\n  const dispatch = useDispatch(); // const handleThemeChange = () => {\n  //   setDarkState(!darkState);\n  //   console.log(\"theme=\", darkState ? \"dark\" : \"light\");\n  // };\n\n  useEffect(() => {\n    if (currentUser) {\n      fetchUserDetail(dispatch);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Provider, {\n        store: store,\n        children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: darkState ? dark() : light(),\n          children: /*#__PURE__*/_jsxDEV(Router, {\n            children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n              children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RouterConfig, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"VGJ3t8wASgT6jF0bJC8rSYEhtJI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/App.js"],"names":["React","useState","useEffect","useDispatch","Provider","BrowserRouter","Router","AuthProvider","currentUser","RouterConfig","ThemeProvider","dark","light","store","Nav","fetchUserDetail","App","darkState","user","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,aAAtC,C,CACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,qBAA1C;AACA,SAASC,YAAT,QAA6B,yBAA7B,C,CACA;;AACA,SAASC,aAAT,QAA8B,mBAA9B,C,CACA;;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,iBAA5B;AACA,SAASC,KAAT,QAAsB,aAAtB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,+BAAhB,C,CACA;;AACA,OAAO,WAAP;AACA,SAASC,eAAT,QAAgC,kBAAhC;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,IAAchB,QAAQ,CAAC,KAAD,CAA5B;AACA,QAAMiB,IAAI,GAAGV,WAAW,EAAxB;AACA,QAAMW,QAAQ,GAAGhB,WAAW,EAA5B,CAHa,CAIb;AACA;AACA;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,WAAJ,EAAiB;AACfO,MAAAA,eAAe,CAACI,QAAD,CAAf;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAKA,sBACE;AAAA,2BACE;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEN,KAAjB;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAEI,SAAS,GAAGN,IAAI,EAAP,GAAYC,KAAK,EAAhD;AAAA,iCAKE,QAAC,MAAD;AAAA,mCACE,QAAC,YAAD;AAAA,sCACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD;;GAjCQI,G;UAGUb,W;;;KAHVa,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, Provider } from \"react-redux\";\n// Router\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { AuthProvider, currentUser } from \"context/AuthContext\";\nimport { RouterConfig } from \"navigation/RouterConfig\";\n// MUI Theme\nimport { ThemeProvider } from \"@material-ui/core\";\n// import { ThemeSwitch } from \"components/ThemeSwitch\";\nimport { dark, light } from \"styles/muiTheme\";\nimport { store } from \"redux/store\";\n// menubar\nimport Nav from \"components/shared/menuBar/nav\";\n// styles\nimport \"./App.css\";\nimport { fetchUserDetail } from \"apiRequests/user\";\n\nfunction App() {\n  const [darkState] = useState(false);\n  const user = currentUser();\n  const dispatch = useDispatch();\n  // const handleThemeChange = () => {\n  //   setDarkState(!darkState);\n  //   console.log(\"theme=\", darkState ? \"dark\" : \"light\");\n  // };\n  useEffect(() => {\n    if (currentUser) {\n      fetchUserDetail(dispatch);\n    }\n  }, []);\n  return (\n    <>\n      <div>\n        <Provider store={store}>\n          <ThemeProvider theme={darkState ? dark() : light()}>\n            {/* <ThemeSwitch\n              darkState={darkState}\n              handleThemeChange={handleThemeChange}\n            /> */}\n            <Router>\n              <AuthProvider>\n                <Nav />\n                <RouterConfig />\n              </AuthProvider>\n            </Router>\n          </ThemeProvider>\n        </Provider>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}