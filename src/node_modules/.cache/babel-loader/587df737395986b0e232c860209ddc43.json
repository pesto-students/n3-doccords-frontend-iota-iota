{"ast":null,"code":"import * as types from \"redux/types/home\";\nconst initialState = {\n  pending: false,\n  healthTopics: [],\n  // articles: [],\n  selectedHealthTopic: \"all\",\n  error: null\n};\nexport const home = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_ALL_HEALTH_TOPICS_SUCCESS:\n      return { ...state,\n        healthTopics: action.payload,\n        pending: false\n      };\n\n    case types.FETCH_ALL_HEALTH_TOPICS_PENDING:\n      return { ...state,\n        pending: true\n      };\n\n    case types.FETCH_ALL_HEALTH_TOPICS_ERROR:\n      return { ...state,\n        error: action.payload,\n        pending: false\n      };\n    // case types.FETCH_ALL_ARTICLES_SUCCESS:\n    //   return {\n    //     ...state,\n    //     articles: action.payload,\n    //     pending: false,\n    //   };\n    // case types.FETCH_ALL_ARTICLES_PENDING:\n    //   return {\n    //     ...state,\n    //     pending: true,\n    //   };\n    // case types.FETCH_ALL_ARTICLES_ERROR:\n    //   return {\n    //     ...state,\n    //     error: action.payload,\n    //     pending: false,\n    //   };\n    // case types.FETCH_ARTICLES_UNDER_HEALTH_TOPIC_SUCCESS:\n    //   return {\n    //     ...state,\n    //   };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/redux/reducers/home.js"],"names":["types","initialState","pending","healthTopics","selectedHealthTopic","error","home","state","action","type","FETCH_ALL_HEALTH_TOPICS_SUCCESS","payload","FETCH_ALL_HEALTH_TOPICS_PENDING","FETCH_ALL_HEALTH_TOPICS_ERROR"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,kBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,YAAY,EAAE,EAFK;AAGnB;AACAC,EAAAA,mBAAmB,EAAE,KAJF;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB;AAQA,OAAO,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,KAAK,CAACU,+BAAX;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,YAAY,EAAEK,MAAM,CAACG,OAFhB;AAGLT,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKF,KAAK,CAACY,+BAAX;AACE,aAAO,EACL,GAAGL,KADE;AAELL,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKF,KAAK,CAACa,6BAAX;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACG,OAFT;AAGLT,QAAAA,OAAO,EAAE;AAHJ,OAAP;AAKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACE,aAAOK,KAAP;AAzCJ;AA2CD,CA5CM","sourcesContent":["import * as types from \"redux/types/home\";\n\nconst initialState = {\n  pending: false,\n  healthTopics: [],\n  // articles: [],\n  selectedHealthTopic: \"all\",\n  error: null,\n};\n\nexport const home = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_ALL_HEALTH_TOPICS_SUCCESS:\n      return {\n        ...state,\n        healthTopics: action.payload,\n        pending: false,\n      };\n    case types.FETCH_ALL_HEALTH_TOPICS_PENDING:\n      return {\n        ...state,\n        pending: true,\n      };\n    case types.FETCH_ALL_HEALTH_TOPICS_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n      };\n    // case types.FETCH_ALL_ARTICLES_SUCCESS:\n    //   return {\n    //     ...state,\n    //     articles: action.payload,\n    //     pending: false,\n    //   };\n    // case types.FETCH_ALL_ARTICLES_PENDING:\n    //   return {\n    //     ...state,\n    //     pending: true,\n    //   };\n    // case types.FETCH_ALL_ARTICLES_ERROR:\n    //   return {\n    //     ...state,\n    //     error: action.payload,\n    //     pending: false,\n    //   };\n\n    // case types.FETCH_ARTICLES_UNDER_HEALTH_TOPIC_SUCCESS:\n    //   return {\n    //     ...state,\n    //   };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}