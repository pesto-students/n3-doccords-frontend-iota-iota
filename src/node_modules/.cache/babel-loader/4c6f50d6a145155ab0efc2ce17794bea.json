{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport MaterialTable from \"material-table\"; // import { Avatar } from \"@material-ui/core\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    padding: \"1rem\",\n    height: \"140px\",\n    width: \"150px\"\n  }\n});\n\nconst AdminHealthTopics = ({\n  fetchAllHealthTopics,\n  healthTopics\n}) => {\n  _s();\n\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    fetchAllHealthTopics();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setRows(healthTopics);\n  }, [healthTopics]);\n\n  const getColumnData = () => [// { field: \"healthTopicId\", hide: true },\n  {\n    field: \"title\",\n    title: \"Title\",\n    width: 300\n  }, {\n    field: \"picture\",\n    title: \"Picture\",\n    sorting: false,\n    render: function renderImage(rowData) {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          children: /*#__PURE__*/_jsxDEV(CardMedia, {\n            className: classes.media,\n            image: rowData.picture,\n            title: \"Contemplative Reptile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n\n  console.log(rows, columns);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"10rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Health topics list\",\n      columns: columns,\n      data: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminHealthTopics, \"321BTa0LdAQ9jvMeyhiULAdCUU4=\", false, function () {\n  return [useStyles];\n});\n\n_c = AdminHealthTopics;\nAdminHealthTopics.propTypes = {\n  fetchAllHealthTopics: PropTypes.func.isRequired,\n  healthTopics: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    healthTopics: state.common.healthTopics\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHealthTopics);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminHealthTopics\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/index.js"],"names":["React","useEffect","useState","PropTypes","connect","fetchAllHealthTopics","makeStyles","Card","CardActionArea","CardMedia","MaterialTable","useStyles","root","maxWidth","media","padding","height","width","AdminHealthTopics","healthTopics","rows","setRows","columns","setColumns","classes","getColumnData","field","title","sorting","render","renderImage","rowData","picture","console","log","marginTop","propTypes","func","isRequired","array","mapStateToProps","state","common","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport MaterialTable from \"material-table\";\n// import { Avatar } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    padding: \"1rem\",\n    height: \"140px\",\n    width: \"150px\",\n  },\n});\n\nconst AdminHealthTopics = ({ fetchAllHealthTopics, healthTopics }) => {\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchAllHealthTopics();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setRows(healthTopics);\n  }, [healthTopics]);\n\n  const getColumnData = () => [\n    // { field: \"healthTopicId\", hide: true },\n    { field: \"title\", title: \"Title\", width: 300 },\n    {\n      field: \"picture\",\n      title: \"Picture\",\n      sorting: false,\n      render: function renderImage(rowData) {\n        return (\n          <Card className={classes.root}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.media}\n                image={rowData.picture}\n                title=\"Contemplative Reptile\"\n              />\n            </CardActionArea>\n          </Card>\n        );\n      },\n    },\n  ];\n  console.log(rows, columns);\n  return (\n    <div style={{ marginTop: \"10rem\" }}>\n      <MaterialTable title=\"Health topics list\" columns={columns} data={rows} />\n    </div>\n  );\n};\n\nAdminHealthTopics.propTypes = {\n  fetchAllHealthTopics: PropTypes.func.isRequired,\n  healthTopics: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    healthTopics: state.common.healthTopics,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHealthTopics);\n"]},"metadata":{},"sourceType":"module"}