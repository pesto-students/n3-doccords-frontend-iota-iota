{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/articleList/index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useEffect } from \"react\";\nimport VerticalGridList from \"../../components/verticalGridList\";\nimport HorizontalGridList from \"../../components/HorizontalGridList\"; // import DropDown from \"components/DropDown/DropDown\";\n\nimport Container from \"@material-ui/core/Container\";\nimport MyAutoComplete from \"../../components/autoComplete/AutoComplete\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { setUpSearchBarLocation } from \"../../redux/actions/common\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(4)\n  }\n})); // const optionList = [\n//   { title: \"Cancer\" },\n//   { title: \"Sugar\" },\n//   { title: \"Blood Pressure\" },\n//   { title: \"Covid-19\" },\n//   { title: \"ENT\" },\n// ];\n\nconst Articles = ({\n  location,\n  healthTopics,\n  articles,\n  searchedString\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory(); // const isSearchBarAtHomeScreen = useSelector((state) => state);\n\n  const dispatch = useDispatch(); // let relatedArticles = articles;\n\n  const [relatedArticles, setRelatedArticles] = React.useState(articles); // Redux functions\n  // const selectedHealthTopic = useSelector((state) => state.selectedTopic);\n  // console.log(selectedHealthTopic);\n\n  const handleHealthSelection = selectedItem => {\n    // eslint-disable-next-line no-constant-condition\n    if (selectedItem === \"All\") {\n      console.log(\"item not found Error\");\n      setRelatedArticles(articles);\n      return;\n    }\n\n    const filteredArticles = articles.filter(article => article.healthTopic === selectedItem.healthTopicId);\n\n    if (filteredArticles.length === 0) {\n      console.log(\"No Relatied articles found\");\n      setRelatedArticles(filteredArticles);\n    } else {\n      console.log(filteredArticles);\n      setRelatedArticles(filteredArticles);\n    }\n  };\n\n  const fileterArticlesBySearch = () => {\n    const filteredAR = articles.filter(article => article.title.toLowerCase().includes(searchedString.toLowerCase()));\n    setRelatedArticles(filteredAR);\n  };\n\n  const handleClickOnHV = article => {\n    console.log(\"handleClickOnHV is working\");\n    history.push({\n      pathname: `/article/${article.articleId}`,\n      state: article\n    });\n  }; // const optionList = healthTopics.map((topic) => {\n  //   return topic.title;\n  // });\n  // console.log(optionList);\n\n\n  useEffect(() => {\n    dispatch(setUpSearchBarLocation(false)); // fileterArticlesBySearch();\n\n    return () => {};\n  }, []);\n  useEffect(() => {\n    fileterArticlesBySearch(); // fileterArticlesBySearch();\n\n    return () => {};\n  }, [searchedString]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recently added articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HorizontalGridList, {\n      articles: articles,\n      handleClick: handleClickOnHV\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyAutoComplete, {\n      list: healthTopics,\n      handleHealthSelection: handleHealthSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Health Articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), relatedArticles.length !== 0 ? /*#__PURE__*/_jsxDEV(VerticalGridList, {\n      healthTopics: relatedArticles,\n      handleClick: handleClickOnHV\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Sorry currently we dont have articles under selected category.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Articles, \"OZCoA088uP7Jw/EYghzcF/bBVIw=\", false, function () {\n  return [useStyles, useHistory, useDispatch];\n});\n\n_c = Articles;\n\nconst mapStateToProps = state => {\n  return {\n    healthTopics: state.common.healthTopics,\n    articles: state.common.articles,\n    searchedString: state.common.searchedString\n  };\n};\n\nexport default connect(mapStateToProps)(Articles);\n\nvar _c;\n\n$RefreshReg$(_c, \"Articles\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/articleList/index.js"],"names":["React","useEffect","VerticalGridList","HorizontalGridList","Container","MyAutoComplete","connect","useDispatch","useHistory","setUpSearchBarLocation","makeStyles","useStyles","theme","root","marginTop","spacing","Articles","location","healthTopics","articles","searchedString","classes","history","dispatch","relatedArticles","setRelatedArticles","useState","handleHealthSelection","selectedItem","console","log","filteredArticles","filter","article","healthTopic","healthTopicId","length","fileterArticlesBySearch","filteredAR","title","toLowerCase","includes","handleClickOnHV","push","pathname","articleId","state","mapStateToProps","common"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useEffect } from \"react\";\nimport VerticalGridList from \"../../components/verticalGridList\";\nimport HorizontalGridList from \"../../components/HorizontalGridList\";\n// import DropDown from \"components/DropDown/DropDown\";\nimport Container from \"@material-ui/core/Container\";\nimport MyAutoComplete from \"../../components/autoComplete/AutoComplete\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { setUpSearchBarLocation } from \"../../redux/actions/common\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\n// const optionList = [\n//   { title: \"Cancer\" },\n//   { title: \"Sugar\" },\n//   { title: \"Blood Pressure\" },\n//   { title: \"Covid-19\" },\n//   { title: \"ENT\" },\n// ];\n\nconst Articles = ({ location, healthTopics, articles, searchedString }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  // const isSearchBarAtHomeScreen = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  // let relatedArticles = articles;\n  const [relatedArticles, setRelatedArticles] = React.useState(articles);\n\n  // Redux functions\n  // const selectedHealthTopic = useSelector((state) => state.selectedTopic);\n  // console.log(selectedHealthTopic);\n\n  const handleHealthSelection = (selectedItem) => {\n    // eslint-disable-next-line no-constant-condition\n    if (selectedItem === \"All\") {\n      console.log(\"item not found Error\");\n      setRelatedArticles(articles);\n      return;\n    }\n\n    const filteredArticles = articles.filter(\n      (article) => article.healthTopic === selectedItem.healthTopicId\n    );\n    if (filteredArticles.length === 0) {\n      console.log(\"No Relatied articles found\");\n      setRelatedArticles(filteredArticles);\n    } else {\n      console.log(filteredArticles);\n      setRelatedArticles(filteredArticles);\n    }\n  };\n\n  const fileterArticlesBySearch = () => {\n    const filteredAR = articles.filter((article) =>\n      article.title.toLowerCase().includes(searchedString.toLowerCase())\n    );\n    setRelatedArticles(filteredAR);\n  };\n\n  const handleClickOnHV = (article) => {\n    console.log(\"handleClickOnHV is working\");\n    history.push({\n      pathname: `/article/${article.articleId}`,\n      state: article,\n    });\n  };\n  // const optionList = healthTopics.map((topic) => {\n  //   return topic.title;\n  // });\n  // console.log(optionList);\n\n  useEffect(() => {\n    dispatch(setUpSearchBarLocation(false));\n    // fileterArticlesBySearch();\n    return () => {};\n  }, []);\n\n  useEffect(() => {\n    fileterArticlesBySearch();\n    // fileterArticlesBySearch();\n    return () => {};\n  }, [searchedString]);\n\n  return (\n    <Container className={classes.root}>\n      <h3>Recently added articles</h3>\n      <HorizontalGridList articles={articles} handleClick={handleClickOnHV} />\n      <MyAutoComplete\n        list={healthTopics}\n        handleHealthSelection={handleHealthSelection}\n      />\n      <h2>Health Articles</h2>\n\n      {relatedArticles.length !== 0 ? (\n        <VerticalGridList\n          healthTopics={relatedArticles}\n          handleClick={handleClickOnHV}\n        />\n      ) : (\n        <h4>Sorry currently we dont have articles under selected category.</h4>\n      )}\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    healthTopics: state.common.healthTopics,\n    articles: state.common.articles,\n    searchedString: state.common.searchedString,\n  };\n};\n\nexport default connect(mapStateToProps)(Articles);\n"]},"metadata":{},"sourceType":"module"}