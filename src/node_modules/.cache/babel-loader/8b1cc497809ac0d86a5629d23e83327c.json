{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminArticles/adminArticle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { Typography, Button, TextField } from \"@material-ui/core\";\nimport { setUploadedImageURL } from \"redux/actions/common\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Spinner from \"components/shared/spinner\";\nimport { createNewArticle } from \"apiRequests/admin\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { fetchAllArticles } from \"apiRequests/common\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      width: \"80%\"\n    },\n    \"& MuiFormControl-root\": {\n      width: \"80%\"\n    }\n  }\n}));\n\nconst AdminArticle = ({\n  createNewArticle,\n  healthTopics,\n  fetchAllArticles\n}) => {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Select your file first\");\n  const dispatch = useDispatch();\n  const uploadedLink = useSelector(state => state.common.uploadedLink);\n  const classes = useStyles();\n  const [title, setTitle] = useState(\"\"); // eslint-disable-next-line no-unused-vars\n\n  const [picture, setPicture] = useState(\"\");\n  const [articleId] = useState(\"\");\n  const [healthTopicId, setHealthTopicId] = useState(\"\");\n  const [description, setDescription] = useState(\"Please enter your description here\");\n  const [error, setError] = useState({\n    title: {\n      status: false,\n      text: \"\"\n    },\n    description: {\n      status: false,\n      text: \"\"\n    }\n  });\n  const history = useHistory(); // Handling file selection from input\n\n  const onFileSelected = e => {\n    if (e.target.files[0]) {\n      setSelectedFile(e.target.files[0]);\n      setFileName(e.target.files[0].name);\n      setIsDisabled(false); // Enabling upload button\n\n      setButtonText(\"Let's upload this!\");\n    }\n  };\n\n  useEffect(() => {\n    fetchAllArticles();\n\n    if (location.state) {\n      const {\n        title,\n        healthTopicId,\n        picture\n      } = location.state;\n      setTitle(title);\n      setHealthTopicId(healthTopicId);\n      setPicture(picture);\n      dispatch(setUploadedImageURL(picture));\n    }\n  }, []);\n  useEffect(() => {\n    if (healthTopics.length > 0) {\n      setHealthTopicId(healthTopics[0].healthTopicId);\n    }\n  }, [healthTopics]); // Setting image preview\n\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n\n      reader.onloadend = () => setPreview(reader.result);\n\n      reader.readAsDataURL(selectedFile);\n    }\n  }, [selectedFile]); // Uploading image to Cloud Storage\n\n  const handleFileUpload = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setIsDisabled(true);\n    setButtonText(\"Wait we're uploading your file...\");\n\n    try {\n      if (selectedFile !== \"\") {\n        // Creating a FormData object\n        const fileData = new FormData(); // Adding the 'image' field and the selected file as value to our FormData object\n        // Changing file name to make it unique and avoid potential later overrides\n\n        fileData.set(\"image\", selectedFile, `${Date.now()}-${selectedFile.name}`);\n        const token = JSON.parse(localStorage.getItem(\"doccords_user\")).accessToken;\n        const res = await axios({\n          method: \"post\",\n          url: \"http://localhost:5001/api/v1/admin/upload/image\",\n          data: fileData,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: \"Bearer \" + token\n          }\n        });\n        await setIsLoading(false);\n        await setIsSuccess(true);\n        dispatch(setUploadedImageURL(res.data.fileLocation));\n        console.log(res);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setIsError(true);\n      setFileName(null);\n    }\n  };\n\n  const deleteUploadedUrl = () => {\n    dispatch(setUploadedImageURL(\"\"));\n    setSelectedFile(null);\n    setPreview(null);\n    setIsSuccess(false);\n    setFileName(null);\n    setButtonText(\"Select your file first\");\n  };\n\n  const onCreate = () => {\n    if (error.title.status && error.description.status) {\n      // eslint-disable-next-line no-useless-return\n      return;\n    } else {\n      if (title.length < 1) {\n        console.log(\"came inside\", error);\n        setError({ ...error,\n          title: {\n            status: true,\n            text: \"Should not be empty\"\n          }\n        });\n      } else if (description.length < 1) {\n        setError({ ...error,\n          description: {\n            status: true,\n            text: \"Should not be empty\"\n          }\n        });\n      } else {\n        console.log(error);\n        createNewArticle(title, description, uploadedLink, healthTopicId, history);\n      }\n    }\n  };\n\n  const onUpdate = () => {};\n\n  const handleChange = e => {\n    if (e.target.id === \"title\") {\n      setError({ ...error,\n        title: {\n          status: false,\n          text: \"\"\n        }\n      });\n      setTitle(e.target.value);\n    }\n\n    if (e.target.name === \"topic\") {\n      setHealthTopicId(e.target.value);\n    }\n  };\n\n  const renderUpload = () => {\n    if (!uploadedLink.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photo_upload\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          style: {\n            marginTop: \"1rem\"\n          },\n          children: \"Create new article\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          style: {\n            marginTop: \"1rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => handleFileUpload(e),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"uploader\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-space\",\n                children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: isError || isSuccess ? /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: `icon-${isSuccess ? \"success\" : \"error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [preview ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"preview\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: preview,\n                        alt: \"Preview of the file to be uploaded\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"icon-upload\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      onChange: onFileSelected,\n                      accept: \"image/*\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this), isError || isSuccess ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: isSuccess ? \"success\" : \"error\",\n                children: isSuccess ? \"Upload successful!\" : \"Something went wrong ...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filename\",\n                children: fileName || \"No file selected yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              disabled: isDisabled,\n              style: {\n                textTransform: \"none\",\n                marginTop: \"1rem\"\n              },\n              children: buttonText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploadedLink,\n          style: {\n            maxWidth: \"15rem\",\n            height: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          style: {\n            color: \"#ffffff\",\n            textTransform: \"none\",\n            width: \"fit-content\",\n            marginTop: \"1rem\"\n          },\n          onClick: deleteUploadedUrl,\n          width: \"auto\",\n          children: \"Delete uploaded image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      style: {\n        color: \"#ffffff\",\n        textTransform: \"none\",\n        width: \"fit-content\",\n        margin: \"1rem 0\"\n      },\n      onClick: () => {\n        history.goBack();\n        dispatch(setUploadedImageURL(\"\"));\n      },\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), renderUpload(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          error: error.title.status,\n          id: \"title\",\n          label: \"Please enter title here\",\n          variant: \"outlined\",\n          width: \"10rem\",\n          size: \"medium\",\n          helperText: error.title.text,\n          onChange: handleChange,\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: healthTopics.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"1rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              style: {\n                width: \"80%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"simple-select-outlined-label\",\n                children: \"Health topic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"simple-select-outlined-label\" // id=\"topic\"\n                ,\n                inputProps: {\n                  name: \"topic\",\n                  id: \"topic\"\n                },\n                value: healthTopicId,\n                onChange: handleChange,\n                label: \"Health topic\",\n                children: healthTopics.map(topic => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: topic.healthTopicId,\n                  children: topic.title\n                }, topic.healthTopicId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"2rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CKEditor, {\n            editor: ClassicEditor,\n            data: description,\n            onReady: editor => {\n              // You can store the \"editor\" and use when it is needed.\n              console.log(\"Editor is ready to use!\", editor);\n            },\n            onChange: (event, editor) => {\n              const data = editor.getData();\n              setDescription(data);\n            },\n            onBlur: (event, editor) => {\n              console.log(\"Blur.\", editor);\n            },\n            onFocus: (event, editor) => {\n              console.log(\"Focus.\", editor);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), !articleId && /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !uploadedLink,\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            textTransform: \"none\",\n            width: \"fit-content\",\n            marginTop: \"2rem\",\n            display: \"block\"\n          },\n          onClick: onCreate,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this), articleId && /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !uploadedLink,\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            textTransform: \"none\",\n            width: \"fit-content\",\n            marginTop: \"2rem\",\n            display: \"block\"\n          },\n          onClick: onUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminArticle, \"rnuz3SgCxxhUxV9Nqn2PuJARP5g=\", false, function () {\n  return [useDispatch, useSelector, useStyles, useHistory];\n});\n\n_c = AdminArticle;\nAdminArticle.propTypes = {\n  title: PropTypes.string,\n  healthTopics: PropTypes.array,\n  // location: PropTypes.shape({}),\n  createNewArticle: PropTypes.func.isRequired,\n  fetchAllArticles: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    uploadedLink: state.common.uploadedLink,\n    healthTopics: state.common.healthTopics,\n    articles: state.common.articles\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllArticles: () => dispatch(fetchAllArticles()),\n  createNewArticle: (title, description, uploadedLink, healthTopicId, history) => dispatch(createNewArticle(title, description, uploadedLink, healthTopicId, history)) // updateHealthTopic: (healthTopicId, title, picture, history) =>\n  //   dispatch(updateHealthTopic(healthTopicId, title, picture, history)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminArticle);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminArticle\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminArticles/adminArticle.js"],"names":["React","useEffect","useState","PropTypes","axios","Typography","Button","TextField","setUploadedImageURL","useDispatch","useSelector","connect","useHistory","Spinner","createNewArticle","makeStyles","CKEditor","ClassicEditor","InputLabel","MenuItem","Select","fetchAllArticles","FormControl","useStyles","root","width","AdminArticle","healthTopics","selectedFile","setSelectedFile","fileName","setFileName","preview","setPreview","isDisabled","setIsDisabled","isLoading","setIsLoading","isError","setIsError","isSuccess","setIsSuccess","buttonText","setButtonText","dispatch","uploadedLink","state","common","classes","title","setTitle","picture","setPicture","articleId","healthTopicId","setHealthTopicId","description","setDescription","error","setError","status","text","history","onFileSelected","e","target","files","name","location","length","reader","FileReader","onloadend","result","readAsDataURL","handleFileUpload","preventDefault","fileData","FormData","set","Date","now","token","JSON","parse","localStorage","getItem","accessToken","res","method","url","data","headers","Authorization","fileLocation","console","log","deleteUploadedUrl","onCreate","onUpdate","handleChange","id","value","renderUpload","marginTop","textTransform","display","flexDirection","maxWidth","height","color","margin","goBack","map","topic","editor","event","getData","propTypes","string","array","func","isRequired","mapStateToProps","articles","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { Typography, Button, TextField } from \"@material-ui/core\";\nimport { setUploadedImageURL } from \"redux/actions/common\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Spinner from \"components/shared/spinner\";\nimport { createNewArticle } from \"apiRequests/admin\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { fetchAllArticles } from \"apiRequests/common\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      width: \"80%\",\n    },\n    \"& MuiFormControl-root\": {\n      width: \"80%\",\n    },\n  },\n}));\nconst AdminArticle = ({ createNewArticle, healthTopics, fetchAllArticles }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Select your file first\");\n  const dispatch = useDispatch();\n  const uploadedLink = useSelector((state) => state.common.uploadedLink);\n  const classes = useStyles();\n  const [title, setTitle] = useState(\"\");\n\n  // eslint-disable-next-line no-unused-vars\n  const [picture, setPicture] = useState(\"\");\n  const [articleId] = useState(\"\");\n  const [healthTopicId, setHealthTopicId] = useState(\"\");\n  const [description, setDescription] = useState(\n    \"Please enter your description here\"\n  );\n  const [error, setError] = useState({\n    title: {\n      status: false,\n      text: \"\",\n    },\n    description: {\n      status: false,\n      text: \"\",\n    },\n  });\n  const history = useHistory();\n  // Handling file selection from input\n  const onFileSelected = (e) => {\n    if (e.target.files[0]) {\n      setSelectedFile(e.target.files[0]);\n      setFileName(e.target.files[0].name);\n      setIsDisabled(false); // Enabling upload button\n      setButtonText(\"Let's upload this!\");\n    }\n  };\n  useEffect(() => {\n    fetchAllArticles();\n    if (location.state) {\n      const { title, healthTopicId, picture } = location.state;\n      setTitle(title);\n      setHealthTopicId(healthTopicId);\n      setPicture(picture);\n      dispatch(setUploadedImageURL(picture));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (healthTopics.length > 0) {\n      setHealthTopicId(healthTopics[0].healthTopicId);\n    }\n  }, [healthTopics]);\n\n  // Setting image preview\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onloadend = () => setPreview(reader.result);\n      reader.readAsDataURL(selectedFile);\n    }\n  }, [selectedFile]);\n\n  // Uploading image to Cloud Storage\n  const handleFileUpload = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setIsDisabled(true);\n    setButtonText(\"Wait we're uploading your file...\");\n\n    try {\n      if (selectedFile !== \"\") {\n        // Creating a FormData object\n        const fileData = new FormData();\n\n        // Adding the 'image' field and the selected file as value to our FormData object\n        // Changing file name to make it unique and avoid potential later overrides\n        fileData.set(\n          \"image\",\n          selectedFile,\n          `${Date.now()}-${selectedFile.name}`\n        );\n        const token = JSON.parse(\n          localStorage.getItem(\"doccords_user\")\n        ).accessToken;\n        const res = await axios({\n          method: \"post\",\n          url: \"http://localhost:5001/api/v1/admin/upload/image\",\n          data: fileData,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: \"Bearer \" + token,\n          },\n        });\n        await setIsLoading(false);\n        await setIsSuccess(true);\n        dispatch(setUploadedImageURL(res.data.fileLocation));\n        console.log(res);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setIsError(true);\n      setFileName(null);\n    }\n  };\n  const deleteUploadedUrl = () => {\n    dispatch(setUploadedImageURL(\"\"));\n    setSelectedFile(null);\n    setPreview(null);\n    setIsSuccess(false);\n    setFileName(null);\n    setButtonText(\"Select your file first\");\n  };\n\n  const onCreate = () => {\n    if (error.title.status && error.description.status) {\n      // eslint-disable-next-line no-useless-return\n      return;\n    } else {\n      if (title.length < 1) {\n        console.log(\"came inside\", error);\n        setError({\n          ...error,\n          title: {\n            status: true,\n            text: \"Should not be empty\",\n          },\n        });\n      } else if (description.length < 1) {\n        setError({\n          ...error,\n          description: {\n            status: true,\n            text: \"Should not be empty\",\n          },\n        });\n      } else {\n        console.log(error);\n        createNewArticle(\n          title,\n          description,\n          uploadedLink,\n          healthTopicId,\n          history\n        );\n      }\n    }\n  };\n  const onUpdate = () => {};\n  const handleChange = (e) => {\n    if (e.target.id === \"title\") {\n      setError({\n        ...error,\n        title: {\n          status: false,\n          text: \"\",\n        },\n      });\n      setTitle(e.target.value);\n    }\n    if (e.target.name === \"topic\") {\n      setHealthTopicId(e.target.value);\n    }\n  };\n\n  const renderUpload = () => {\n    if (!uploadedLink.length > 0) {\n      return (\n        <div className=\"photo_upload\">\n          <Typography variant=\"h5\" style={{ marginTop: \"1rem\" }}>\n            Create new article\n          </Typography>\n          <main style={{ marginTop: \"1rem\" }}>\n            <form onSubmit={(e) => handleFileUpload(e)}>\n              <label className=\"uploader\">\n                <div className=\"upload-space\">\n                  {isLoading ? (\n                    <Spinner />\n                  ) : (\n                    <>\n                      {isError || isSuccess ? (\n                        <i\n                          className={`icon-${isSuccess ? \"success\" : \"error\"}`}\n                        ></i>\n                      ) : (\n                        <>\n                          {preview ? (\n                            <div className=\"preview\">\n                              <img\n                                src={preview}\n                                alt=\"Preview of the file to be uploaded\"\n                              />\n                            </div>\n                          ) : (\n                            <i className=\"icon-upload\"></i>\n                          )}\n                          <input\n                            type=\"file\"\n                            onChange={onFileSelected}\n                            accept=\"image/*\"\n                          />\n                        </>\n                      )}\n                    </>\n                  )}\n                </div>\n                {isError || isSuccess ? (\n                  <p className={isSuccess ? \"success\" : \"error\"}>\n                    {isSuccess\n                      ? \"Upload successful!\"\n                      : \"Something went wrong ...\"}\n                  </p>\n                ) : (\n                  <p className=\"filename\">\n                    {fileName || \"No file selected yet\"}\n                  </p>\n                )}\n              </label>\n\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isDisabled}\n                style={{\n                  textTransform: \"none\",\n                  marginTop: \"1rem\",\n                }}\n              >\n                {buttonText}\n              </Button>\n            </form>\n          </main>\n        </div>\n      );\n    } else {\n      return (\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <img\n            src={uploadedLink}\n            style={{ maxWidth: \"15rem\", height: \"auto\" }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{\n              color: \"#ffffff\",\n              textTransform: \"none\",\n              width: \"fit-content\",\n              marginTop: \"1rem\",\n            }}\n            onClick={deleteUploadedUrl}\n            width=\"auto\"\n          >\n            Delete uploaded image\n          </Button>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        style={{\n          color: \"#ffffff\",\n          textTransform: \"none\",\n          width: \"fit-content\",\n          margin: \"1rem 0\",\n        }}\n        onClick={() => {\n          history.goBack();\n          dispatch(setUploadedImageURL(\"\"));\n        }}\n      >\n        Go back\n      </Button>\n      {renderUpload()}\n      <div style={{ marginTop: \"2rem\" }}>\n        <form className={classes.root} autoComplete=\"off\">\n          <TextField\n            error={error.title.status}\n            id=\"title\"\n            label=\"Please enter title here\"\n            variant=\"outlined\"\n            width=\"10rem\"\n            size=\"medium\"\n            helperText={error.title.text}\n            onChange={handleChange}\n            value={title}\n          />\n          <div>\n            {healthTopics.length > 0 && (\n              <div style={{ marginTop: \"1rem\" }}>\n                <FormControl variant=\"outlined\" style={{ width: \"80%\" }}>\n                  <InputLabel id=\"simple-select-outlined-label\">\n                    Health topic\n                  </InputLabel>\n                  <Select\n                    labelId=\"simple-select-outlined-label\"\n                    // id=\"topic\"\n                    inputProps={{\n                      name: \"topic\",\n                      id: \"topic\",\n                    }}\n                    value={healthTopicId}\n                    onChange={handleChange}\n                    label=\"Health topic\"\n                  >\n                    {healthTopics.map((topic) => (\n                      <MenuItem\n                        key={topic.healthTopicId}\n                        value={topic.healthTopicId}\n                      >\n                        {topic.title}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </div>\n            )}\n          </div>\n          <div style={{ marginTop: \"2rem\" }}>\n            <CKEditor\n              editor={ClassicEditor}\n              data={description}\n              onReady={(editor) => {\n                // You can store the \"editor\" and use when it is needed.\n                console.log(\"Editor is ready to use!\", editor);\n              }}\n              onChange={(event, editor) => {\n                const data = editor.getData();\n                setDescription(data);\n              }}\n              onBlur={(event, editor) => {\n                console.log(\"Blur.\", editor);\n              }}\n              onFocus={(event, editor) => {\n                console.log(\"Focus.\", editor);\n              }}\n            />\n          </div>\n\n          {!articleId && (\n            <Button\n              disabled={!uploadedLink}\n              variant=\"contained\"\n              color=\"primary\"\n              style={{\n                textTransform: \"none\",\n                width: \"fit-content\",\n                marginTop: \"2rem\",\n                display: \"block\",\n              }}\n              onClick={onCreate}\n            >\n              Create\n            </Button>\n          )}\n          {articleId && (\n            <Button\n              disabled={!uploadedLink}\n              variant=\"contained\"\n              color=\"primary\"\n              style={{\n                textTransform: \"none\",\n                width: \"fit-content\",\n                marginTop: \"2rem\",\n                display: \"block\",\n              }}\n              onClick={onUpdate}\n            >\n              Update\n            </Button>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nAdminArticle.propTypes = {\n  title: PropTypes.string,\n  healthTopics: PropTypes.array,\n  // location: PropTypes.shape({}),\n  createNewArticle: PropTypes.func.isRequired,\n  fetchAllArticles: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    uploadedLink: state.common.uploadedLink,\n    healthTopics: state.common.healthTopics,\n    articles: state.common.articles,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllArticles: () => dispatch(fetchAllArticles()),\n  createNewArticle: (\n    title,\n    description,\n    uploadedLink,\n    healthTopicId,\n    history\n  ) =>\n    dispatch(\n      createNewArticle(title, description, uploadedLink, healthTopicId, history)\n    ),\n  // updateHealthTopic: (healthTopicId, title, picture, history) =>\n  //   dispatch(updateHealthTopic(healthTopicId, title, picture, history)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminArticle);\n"]},"metadata":{},"sourceType":"module"}