{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/Appbar/SwipeableDrawer.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\"; // import Divider from \"@material-ui/core/Divider\";\n\nimport ListItem from \"@material-ui/core/ListItem\"; // import ListItemIcon from \"@material-ui/core/ListItemIcon\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport menuData from \"../Menu/menuData\";\nimport { Link } from \"react-router-dom\"; // import HomeIcon from \"@material-ui/icons/Home\";\n// import DashboardIcon from \"@material-ui/icons/Poll\";\n// import CategoryIcon from \"@material-ui/icons/Category\";\n// import ArticleIcon from \"@material-ui/icons/Create\";\n// import LogoutIcon from \"@material-ui/icons/ExitToApp\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  }\n});\nexport default function swipeableDrawer() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: menuData.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        component: Link,\n        to: `${item.link}`,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, item.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"right\"].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        size: \"small\",\n        color: \"inherit\",\n        onClick: toggleDrawer(anchor, true),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n        anchor: anchor,\n        open: state[anchor],\n        onClose: toggleDrawer(anchor, false),\n        onOpen: toggleDrawer(anchor, true),\n        children: list(anchor)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, anchor, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(swipeableDrawer, \"uTy8EQlIcsRdyD0oX481Py/w3j4=\", false, function () {\n  return [useStyles];\n});","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/Appbar/SwipeableDrawer.js"],"names":["React","makeStyles","SwipeableDrawer","Button","List","ListItem","ListItemText","menuData","Link","useStyles","list","width","swipeableDrawer","classes","state","setState","useState","right","toggleDrawer","anchor","open","event","type","key","map","item","index","link","title"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\n// import Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\n// import ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport menuData from \"../Menu/menuData\";\nimport { Link } from \"react-router-dom\";\n// import HomeIcon from \"@material-ui/icons/Home\";\n// import DashboardIcon from \"@material-ui/icons/Poll\";\n// import CategoryIcon from \"@material-ui/icons/Category\";\n// import ArticleIcon from \"@material-ui/icons/Create\";\n// import LogoutIcon from \"@material-ui/icons/ExitToApp\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n});\n\nexport default function swipeableDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {menuData.map((item, index) => (\n          <ListItem\n            button\n            key={item.title}\n            component={Link}\n            to={`${item.link}`}\n          >\n            {/* <ListItemIcon>{item.icon}</ListItemIcon> */}\n            <ListItemText primary={item.title} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      {[\"right\"].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            color=\"inherit\"\n            onClick={toggleDrawer(anchor, true)}\n          >\n            Login\n          </Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}