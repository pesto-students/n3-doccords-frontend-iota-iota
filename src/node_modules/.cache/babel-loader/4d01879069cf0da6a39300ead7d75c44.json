{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/shared/upload/uploadFile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport Spinner from \"components/shared/spinner\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport { setUploadedImageURL } from \"redux/actions/common\";\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UploadAvatar = () => {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState(null); // const [fileName, setFileName] = useState(null);\n\n  const [preview, setPreview] = useState(null);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Select your file first\");\n  const dispatch = useDispatch();\n  const uploadedLink = useSelector(state => state.common.uploadedLink);\n\n  const onFileSelected = e => {\n    if (e.target.files[0]) {\n      console.log(URL.createObjectURL(event.target.files[0]));\n      setSelectedFile(e.target.files[0]); // setFileName(e.target.files[0].name);\n\n      setPreview(URL.createObjectURL(event.target.files[0]));\n      setIsDisabled(false); // Enabling upload button\n\n      setButtonText(\"Let's upload this!\");\n    }\n  };\n\n  const handleFileUpload = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setIsDisabled(true);\n    setButtonText(\"Wait we're uploading your file...\");\n\n    try {\n      if (selectedFile !== \"\") {\n        // Creating a FormData object\n        const fileData = new FormData();\n        fileData.set(\"image\", selectedFile, `${Date.now()}-${selectedFile.name}`);\n        const token = JSON.parse(localStorage.getItem(\"doccords_user\")).accessToken;\n        const res = await axios({\n          method: \"post\",\n          url: \"http://localhost:5001/api/v1/users/upload/file\",\n          data: fileData,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: \"Bearer \" + token\n          }\n        });\n        await setIsLoading(false);\n        await setIsSuccess(true);\n        dispatch(setUploadedImageURL(res.data.fileLocation));\n        console.log(res);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setIsError(true); // setFileName(null);\n    }\n  };\n\n  const deleteUploadedUrl = () => {\n    dispatch(setUploadedImageURL(\"\"));\n    setSelectedFile(null);\n    setPreview(null);\n    setIsSuccess(false); // setFileName(null);\n\n    setButtonText(\"Select your file first\");\n  };\n\n  if (!uploadedLink.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo_upload\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: \"Add a Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleFileUpload(e),\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"uploader\",\n            style: {\n              width: \"15rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-space\",\n              children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: isError || isSuccess ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `icon-${isSuccess ? \"success\" : \"error\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [preview ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"preview\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: preview,\n                      alt: \"Preview of the file to be uploaded\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 27\n                  }, this) :\n                  /*#__PURE__*/\n                  // <i className=\"icon-upload\"></i>\n                  _jsxDEV(CameraAltIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    onChange: onFileSelected,\n                    accept: \"image/*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), isError || isSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: isSuccess ? \"success\" : \"error\",\n              children: isSuccess ? \"Upload successful!\" : \"Something went wrong ...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: isDisabled,\n            style: {\n              textTransform: \"none\",\n              marginTop: \"1rem\"\n            },\n            children: buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"8rem\",\n          height: \"8rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploadedLink,\n          alt: \"avatar\",\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            borderRadius: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        style: {\n          color: \"#ffffff\",\n          textTransform: \"none\",\n          width: \"fit-content\",\n          marginTop: \"1rem\"\n        },\n        onClick: deleteUploadedUrl,\n        width: \"auto\",\n        children: \"Delete uploaded file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(UploadAvatar, \"o0VJpXarSWlkLFwgkSt30LS2IG4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UploadAvatar;\nexport default UploadAvatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadAvatar\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/shared/upload/uploadFile.js"],"names":["React","useState","useDispatch","useSelector","axios","Spinner","Typography","Button","setUploadedImageURL","CameraAltIcon","UploadAvatar","selectedFile","setSelectedFile","preview","setPreview","isDisabled","setIsDisabled","isLoading","setIsLoading","isError","setIsError","isSuccess","setIsSuccess","buttonText","setButtonText","dispatch","uploadedLink","state","common","onFileSelected","e","target","files","console","log","URL","createObjectURL","event","handleFileUpload","preventDefault","fileData","FormData","set","Date","now","name","token","JSON","parse","localStorage","getItem","accessToken","res","method","url","data","headers","Authorization","fileLocation","error","deleteUploadedUrl","length","marginTop","display","flexDirection","justifyContent","alignItems","width","textTransform","height","borderRadius","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport Spinner from \"components/shared/spinner\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport { setUploadedImageURL } from \"redux/actions/common\";\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\n\nconst UploadAvatar = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  // const [fileName, setFileName] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Select your file first\");\n  const dispatch = useDispatch();\n  const uploadedLink = useSelector((state) => state.common.uploadedLink);\n\n  const onFileSelected = (e) => {\n    if (e.target.files[0]) {\n      console.log(URL.createObjectURL(event.target.files[0]));\n      setSelectedFile(e.target.files[0]);\n      // setFileName(e.target.files[0].name);\n      setPreview(URL.createObjectURL(event.target.files[0]));\n      setIsDisabled(false); // Enabling upload button\n      setButtonText(\"Let's upload this!\");\n    }\n  };\n  const handleFileUpload = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setIsDisabled(true);\n    setButtonText(\"Wait we're uploading your file...\");\n\n    try {\n      if (selectedFile !== \"\") {\n        // Creating a FormData object\n        const fileData = new FormData();\n\n        fileData.set(\n          \"image\",\n          selectedFile,\n          `${Date.now()}-${selectedFile.name}`\n        );\n        const token = JSON.parse(\n          localStorage.getItem(\"doccords_user\")\n        ).accessToken;\n        const res = await axios({\n          method: \"post\",\n          url: \"http://localhost:5001/api/v1/users/upload/file\",\n          data: fileData,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: \"Bearer \" + token,\n          },\n        });\n        await setIsLoading(false);\n        await setIsSuccess(true);\n        dispatch(setUploadedImageURL(res.data.fileLocation));\n        console.log(res);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setIsError(true);\n      // setFileName(null);\n    }\n  };\n  const deleteUploadedUrl = () => {\n    dispatch(setUploadedImageURL(\"\"));\n    setSelectedFile(null);\n    setPreview(null);\n    setIsSuccess(false);\n    // setFileName(null);\n    setButtonText(\"Select your file first\");\n  };\n\n  if (!uploadedLink.length > 0) {\n    return (\n      <div className=\"photo_upload\">\n        <Typography variant=\"h5\" style={{ marginTop: \"1rem\" }}>\n          Add a Document\n        </Typography>\n        <main style={{ marginTop: \"1rem\" }}>\n          <form\n            onSubmit={(e) => handleFileUpload(e)}\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <label className=\"uploader\" style={{ width: \"15rem\" }}>\n              <div className=\"upload-space\">\n                {isLoading ? (\n                  <Spinner />\n                ) : (\n                  <>\n                    {isError || isSuccess ? (\n                      <i\n                        className={`icon-${isSuccess ? \"success\" : \"error\"}`}\n                      ></i>\n                    ) : (\n                      <>\n                        {preview ? (\n                          <div className=\"preview\">\n                            <img\n                              src={preview}\n                              alt=\"Preview of the file to be uploaded\"\n                            />\n                          </div>\n                        ) : (\n                          // <i className=\"icon-upload\"></i>\n                          <CameraAltIcon />\n                        )}\n                        <input\n                          type=\"file\"\n                          onChange={onFileSelected}\n                          accept=\"image/*\"\n                        />\n                      </>\n                    )}\n                  </>\n                )}\n              </div>\n              {isError ||\n                (isSuccess && (\n                  <p className={isSuccess ? \"success\" : \"error\"}>\n                    {isSuccess\n                      ? \"Upload successful!\"\n                      : \"Something went wrong ...\"}\n                  </p>\n                ))}\n            </label>\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={isDisabled}\n              style={{\n                textTransform: \"none\",\n                marginTop: \"1rem\",\n              }}\n            >\n              {buttonText}\n            </Button>\n          </form>\n        </main>\n      </div>\n    );\n  } else {\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div style={{ width: \"8rem\", height: \"8rem\" }}>\n          <img\n            src={uploadedLink}\n            alt=\"avatar\"\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              borderRadius: \"100%\",\n            }}\n          />\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          style={{\n            color: \"#ffffff\",\n            textTransform: \"none\",\n            width: \"fit-content\",\n            marginTop: \"1rem\",\n          }}\n          onClick={deleteUploadedUrl}\n          width=\"auto\"\n        >\n          Delete uploaded file\n        </Button>\n      </div>\n    );\n  }\n};\n\nexport default UploadAvatar;\n"]},"metadata":{},"sourceType":"module"}