{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/login/index.js\";\n// Import FirebaseAuth and firebase.\nimport React from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport { SETUP_PROFILE } from \"navigation/constants\"; // Configure FirebaseUI.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n      const user = {\n        accessToken: authResult.credential ? authResult.credential.accessToken : \"\",\n        displayName: authResult.user.displayName ? authResult.user.displayName : \"\"\n      };\n      firebase.auth().currentUser.getIdToken(\n      /* forceRefresh */\n      true).then(function (idToken) {// Send token to your backend via HTTPS\n        // ...\n      }).catch(function (error) {// Handle error\n      }); // localStorage.setItem(\"doccords_user\", JSON.stringify(user));\n      // console.log(authResult);\n\n      return false;\n    },\n    signInFailure: function (error) {\n      return console.log(error);\n    }\n  },\n  signInFlow: \"popup\",\n  signInSuccessUrl: SETUP_PROFILE,\n  signInOptions: [{\n    provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    fullLabel: \"Login or Register with Google\"\n  }, {\n    provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    fullLabel: \"Login or Register with Facebook\"\n  }, {\n    provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n    recaptchaParameters: {\n      type: \"image\",\n      // 'audio'\n      size: \"invisible\",\n      // 'invisible' or 'compact'\n      badge: \"bottomleft\" // 'bottomright' or 'inline' applies to invisible.\n\n    },\n    fullLabel: \"Login or Register with Phone\",\n    defaultCountry: \"IN\"\n  }]\n};\n\nconst LoginView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Doccords\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Login or Signup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(StyledFirebaseAuth, {\n    uiConfig: uiConfig,\n    firebaseAuth: firebase.auth()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 3\n}, this);\n\n_c = LoginView;\nexport default LoginView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginView\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/login/index.js"],"names":["React","StyledFirebaseAuth","firebase","SETUP_PROFILE","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","user","accessToken","credential","displayName","auth","currentUser","getIdToken","then","idToken","catch","error","signInFailure","console","log","signInFlow","signInSuccessUrl","signInOptions","provider","GoogleAuthProvider","PROVIDER_ID","fullLabel","FacebookAuthProvider","PhoneAuthProvider","recaptchaParameters","type","size","badge","defaultCountry","LoginView"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,aAAT,QAA8B,sBAA9B,C,CAEA;;;AACA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,SAAS,EAAE;AACTC,IAAAA,2BAA2B,EAAE,UAAUC,UAAV,EAAsBC,WAAtB,EAAmC;AAC9D,YAAMC,IAAI,GAAG;AACXC,QAAAA,WAAW,EAAEH,UAAU,CAACI,UAAX,GACTJ,UAAU,CAACI,UAAX,CAAsBD,WADb,GAET,EAHO;AAIXE,QAAAA,WAAW,EAAEL,UAAU,CAACE,IAAX,CAAgBG,WAAhB,GACTL,UAAU,CAACE,IAAX,CAAgBG,WADP,GAET;AANO,OAAb;AAQAV,MAAAA,QAAQ,CACLW,IADH,GAEGC,WAFH,CAEeC,UAFf;AAE0B;AAAmB,UAF7C,EAGGC,IAHH,CAGQ,UAAUC,OAAV,EAAmB,CACvB;AACA;AACD,OANH,EAOGC,KAPH,CAOS,UAAUC,KAAV,EAAiB,CACtB;AACD,OATH,EAT8D,CAmB9D;AACA;;AACA,aAAO,KAAP;AACD,KAvBQ;AAwBTC,IAAAA,aAAa,EAAE,UAAUD,KAAV,EAAiB;AAC9B,aAAOE,OAAO,CAACC,GAAR,CAAYH,KAAZ,CAAP;AACD;AA1BQ,GADI;AA6BfI,EAAAA,UAAU,EAAE,OA7BG;AA8BfC,EAAAA,gBAAgB,EAAErB,aA9BH;AA+BfsB,EAAAA,aAAa,EAAE,CACb;AACEC,IAAAA,QAAQ,EAAExB,QAAQ,CAACW,IAAT,CAAcc,kBAAd,CAAiCC,WAD7C;AAEEC,IAAAA,SAAS,EAAE;AAFb,GADa,EAKb;AACEH,IAAAA,QAAQ,EAAExB,QAAQ,CAACW,IAAT,CAAciB,oBAAd,CAAmCF,WAD/C;AAEEC,IAAAA,SAAS,EAAE;AAFb,GALa,EASb;AACEH,IAAAA,QAAQ,EAAExB,QAAQ,CAACW,IAAT,CAAckB,iBAAd,CAAgCH,WAD5C;AAEEI,IAAAA,mBAAmB,EAAE;AACnBC,MAAAA,IAAI,EAAE,OADa;AACJ;AACfC,MAAAA,IAAI,EAAE,WAFa;AAEA;AACnBC,MAAAA,KAAK,EAAE,YAHY,CAGE;;AAHF,KAFvB;AAOEN,IAAAA,SAAS,EAAE,8BAPb;AASEO,IAAAA,cAAc,EAAE;AATlB,GATa;AA/BA,CAAjB;;AAsDA,MAAMC,SAAS,GAAG,mBAChB;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEjC,QAA9B;AAAwC,IAAA,YAAY,EAAEF,QAAQ,CAACW,IAAT;AAAtD;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMwB,S;AAQN,eAAeA,SAAf","sourcesContent":["// Import FirebaseAuth and firebase.\nimport React from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport { SETUP_PROFILE } from \"navigation/constants\";\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n      const user = {\n        accessToken: authResult.credential\n          ? authResult.credential.accessToken\n          : \"\",\n        displayName: authResult.user.displayName\n          ? authResult.user.displayName\n          : \"\",\n      };\n      firebase\n        .auth()\n        .currentUser.getIdToken(/* forceRefresh */ true)\n        .then(function (idToken) {\n          // Send token to your backend via HTTPS\n          // ...\n        })\n        .catch(function (error) {\n          // Handle error\n        });\n      // localStorage.setItem(\"doccords_user\", JSON.stringify(user));\n      // console.log(authResult);\n      return false;\n    },\n    signInFailure: function (error) {\n      return console.log(error);\n    },\n  },\n  signInFlow: \"popup\",\n  signInSuccessUrl: SETUP_PROFILE,\n  signInOptions: [\n    {\n      provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      fullLabel: \"Login or Register with Google\",\n    },\n    {\n      provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      fullLabel: \"Login or Register with Facebook\",\n    },\n    {\n      provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n      recaptchaParameters: {\n        type: \"image\", // 'audio'\n        size: \"invisible\", // 'invisible' or 'compact'\n        badge: \"bottomleft\", // 'bottomright' or 'inline' applies to invisible.\n      },\n      fullLabel: \"Login or Register with Phone\",\n\n      defaultCountry: \"IN\",\n    },\n  ],\n};\n\nconst LoginView = () => (\n  <div>\n    <h1>Doccords</h1>\n    <p>Login or Signup</p>\n    <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n  </div>\n);\n\nexport default LoginView;\n"]},"metadata":{},"sourceType":"module"}