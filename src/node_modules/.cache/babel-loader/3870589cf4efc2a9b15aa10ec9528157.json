{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport MaterialTable from \"material-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminHealthTopics = ({\n  fetchAllHealthTopics,\n  healthTopics\n}) => {\n  _s();\n\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  useEffect(() => {\n    fetchAllHealthTopics();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setRows(healthTopics);\n  }, [healthTopics]);\n\n  const getColumnData = () => [// { field: \"healthTopicId\", hide: true },\n  {\n    field: \"title\",\n    title: \"Title\",\n    width: 300\n  }, {\n    field: \"picture\",\n    title: \"Picture\",\n    sorting: false,\n    render: function renderImage(rowData) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: rowData.picture,\n        style: {\n          maxWidth: \"50%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n\n  console.log(rows, columns);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"40%\",\n      marginTop: \"3rem\",\n      padding: \"0 3rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      icons: tableIcons,\n      title: \"Health topics list\",\n      columns: columns,\n      data: rows,\n      options: {\n        search: true,\n        actionsColumnIndex: -1,\n        fixedColumns: {\n          left: 1,\n          right: 0\n        },\n        headerStyle: {\n          backgroundColor: \"#ff80ab\",\n          color: \"#FFF\"\n        }\n      },\n      actions: [{\n        icon: tableIcons.Edit,\n        tooltip: \"edit topic\",\n        onClick: (event, rowData) => confirm(\"You want to delete \" + rowData.name)\n      }, {\n        icon: tableIcons.Delete,\n        tooltip: \"save topic\",\n        onClick: (event, rowData) => alert(\"You saved \" + rowData.name)\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminHealthTopics, \"tmgGlGb+YHqZQAa/5zT9xncKH+E=\");\n\n_c = AdminHealthTopics;\nAdminHealthTopics.propTypes = {\n  fetchAllHealthTopics: PropTypes.func.isRequired,\n  healthTopics: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    healthTopics: state.common.healthTopics\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHealthTopics);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminHealthTopics\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/index.js"],"names":["React","useEffect","useState","PropTypes","connect","fetchAllHealthTopics","MaterialTable","AdminHealthTopics","healthTopics","rows","setRows","columns","setColumns","getColumnData","field","title","width","sorting","render","renderImage","rowData","picture","maxWidth","height","console","log","marginTop","padding","tableIcons","search","actionsColumnIndex","fixedColumns","left","right","headerStyle","backgroundColor","color","icon","Edit","tooltip","onClick","event","confirm","name","Delete","alert","propTypes","func","isRequired","array","mapStateToProps","state","common","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport MaterialTable from \"material-table\";\n\nconst AdminHealthTopics = ({ fetchAllHealthTopics, healthTopics }) => {\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n\n  useEffect(() => {\n    fetchAllHealthTopics();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setRows(healthTopics);\n  }, [healthTopics]);\n\n  const getColumnData = () => [\n    // { field: \"healthTopicId\", hide: true },\n    { field: \"title\", title: \"Title\", width: 300 },\n    {\n      field: \"picture\",\n      title: \"Picture\",\n      sorting: false,\n      render: function renderImage(rowData) {\n        return (\n          <img\n            src={rowData.picture}\n            style={{ maxWidth: \"50%\", height: \"auto\" }}\n          />\n        );\n      },\n    },\n  ];\n  console.log(rows, columns);\n  return (\n    <div style={{ width: \"40%\", marginTop: \"3rem\", padding: \"0 3rem\" }}>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"Health topics list\"\n        columns={columns}\n        data={rows}\n        options={{\n          search: true,\n          actionsColumnIndex: -1,\n          fixedColumns: {\n            left: 1,\n            right: 0,\n          },\n          headerStyle: {\n            backgroundColor: \"#ff80ab\",\n            color: \"#FFF\",\n          },\n        }}\n        actions={[\n          {\n            icon: tableIcons.Edit,\n            tooltip: \"edit topic\",\n            onClick: (event, rowData) =>\n              confirm(\"You want to delete \" + rowData.name),\n          },\n          {\n            icon: tableIcons.Delete,\n            tooltip: \"save topic\",\n            onClick: (event, rowData) => alert(\"You saved \" + rowData.name),\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nAdminHealthTopics.propTypes = {\n  fetchAllHealthTopics: PropTypes.func.isRequired,\n  healthTopics: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    healthTopics: state.common.healthTopics,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHealthTopics);\n"]},"metadata":{},"sourceType":"module"}