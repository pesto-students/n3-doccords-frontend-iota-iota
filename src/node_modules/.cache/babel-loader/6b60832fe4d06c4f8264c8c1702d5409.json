{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/shared/ckEditor/index.js\";\nimport React, { Component } from \"react\";\nimport { Global, css } from \"@emotion/core\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CustomCKEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    console.log(e.target.getContent());\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ckeditor-wrapper\",\n      css: css`\n          position: relative;\n          z-index: 1;\n          &::before {\n            color: rgba(192, 192, 192, 1);\n            content: attr(data-placeholder);\n            padding: 0 11px;\n            position: absolute;\n            margin: var(--ck-spacing-large) 0;\n            top: 0;\n            z-index: -1;\n          }\n        `,\n      children: [/*#__PURE__*/_jsxDEV(Global, {\n        styles: css`\n            :root {\n              --ck-border-radius: 4px;\n              --ck-color-focus-border: rgba(96, 103, 113, 0.8);\n              --ck-color-shadow-inner: rgba(69, 79, 99, 0.2);\n              --ck-inner-shadow: 0 0 0 2px var(--ck-color-shadow-inner);\n              --ck-spacing-large: var(--ck-spacing-standard);\n            }\n            .ck.ck-editor__editable_inline {\n              border: 1px solid rgba(217, 217, 217, 1);\n              transition: all 0.3s;\n              &:hover {\n                border-color: rgba(96, 102, 112, 1);\n                border-right-width: 1px !important;\n              }\n            }\n            .ck-editor__editable.ck-read-only {\n              background-color: rgba(245, 245, 245, 1);\n              opacity: 1;\n              cursor: not-allowed;\n              color: rgba(0, 0, 0, 0.25);\n              &:hover {\n                border-color: rgba(217, 217, 217, 1);\n              }\n            }\n          `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n        editor: ClassicEditor,\n        data: \"<p>Hello from CKEditor 5!</p>\",\n        config: {\n          toolbar: [\"heading\", \"|\", \"bold\", \"italic\", \"link\", \"bulletedList\", \"numberedList\", \"blockQuote\", \"ckfinder\", \"|\", \"imageTextAlternative\", \"imageUpload\", \"imageStyle:full\", \"imageStyle:side\", \"|\", \"mediaEmbed\", \"insertTable\", \"tableColumn\", \"tableRow\", \"mergeTableCells\", \"|\", \"undo\", \"redo\"]\n        },\n        onInit: editor => {\n          // You can store the \"editor\" and use when it is needed.\n          console.log(\"Editor is ready to use!\", editor);\n          console.log(\"toolbar: \", Array.from(editor.ui.componentFactory.names()));\n          console.log(\"plugins: \", ClassicEditor.builtinPlugins.map(plugin => plugin.pluginName));\n        },\n        onChange: (event, editor) => {\n          const data = editor.getData();\n          console.log({\n            event,\n            editor,\n            data\n          });\n        },\n        onBlur: editor => {\n          console.log(\"Blur.\", editor);\n        },\n        onFocus: editor => {\n          console.log(\"Focus.\", editor);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CustomCKEditor; // const App = () => (\n//   <div>\n//     <h2>CKEditor 5 with React</h2>\n//     <TinyMceEditor />\n//   </div>\n// );\n// render(<App />, document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/shared/ckEditor/index.js"],"names":["React","Component","Global","css","CKEditor","ClassicEditor","CustomCKEditor","constructor","props","onChange","bind","e","console","log","target","getContent","render","toolbar","editor","Array","from","ui","componentFactory","names","builtinPlugins","map","plugin","pluginName","event","data","getData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,eAA5B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AACrCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDD,EAAAA,QAAQ,CAACE,CAAD,EAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,UAAT,EAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,GAAG,EAAEb,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAdM;AAAA,8BAgBE,QAAC,MAAD;AACE,QAAA,MAAM,EAAEA,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BQ;AAAA;AAAA;AAAA;AAAA,cAhBF,eA4CE,QAAC,QAAD;AACE,QAAA,MAAM,EAAEE,aADV;AAEE,QAAA,IAAI,EAAC,+BAFP;AAGE,QAAA,MAAM,EAAE;AACNY,UAAAA,OAAO,EAAE,CACP,SADO,EAEP,GAFO,EAGP,MAHO,EAIP,QAJO,EAKP,MALO,EAMP,cANO,EAOP,cAPO,EAQP,YARO,EASP,UATO,EAUP,GAVO,EAWP,sBAXO,EAYP,aAZO,EAaP,iBAbO,EAcP,iBAdO,EAeP,GAfO,EAgBP,YAhBO,EAiBP,aAjBO,EAkBP,aAlBO,EAmBP,UAnBO,EAoBP,iBApBO,EAqBP,GArBO,EAsBP,MAtBO,EAuBP,MAvBO;AADH,SAHV;AA8BE,QAAA,MAAM,EAAGC,MAAD,IAAY;AAClB;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCK,MAAvC;AACAN,UAAAA,OAAO,CAACC,GAAR,CACE,WADF,EAEEM,KAAK,CAACC,IAAN,CAAWF,MAAM,CAACG,EAAP,CAAUC,gBAAV,CAA2BC,KAA3B,EAAX,CAFF;AAIAX,UAAAA,OAAO,CAACC,GAAR,CACE,WADF,EAEER,aAAa,CAACmB,cAAd,CAA6BC,GAA7B,CAAkCC,MAAD,IAAYA,MAAM,CAACC,UAApD,CAFF;AAID,SAzCH;AA0CE,QAAA,QAAQ,EAAE,CAACC,KAAD,EAAQV,MAAR,KAAmB;AAC3B,gBAAMW,IAAI,GAAGX,MAAM,CAACY,OAAP,EAAb;AACAlB,UAAAA,OAAO,CAACC,GAAR,CAAY;AAAEe,YAAAA,KAAF;AAASV,YAAAA,MAAT;AAAiBW,YAAAA;AAAjB,WAAZ;AACD,SA7CH;AA8CE,QAAA,MAAM,EAAGX,MAAD,IAAY;AAClBN,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBK,MAArB;AACD,SAhDH;AAiDE,QAAA,OAAO,EAAGA,MAAD,IAAY;AACnBN,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBK,MAAtB;AACD;AAnDH;AAAA;AAAA;AAAA;AAAA,cA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoGD;;AA/GoC;;AAkHvC,eAAeZ,cAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from \"react\";\nimport { Global, css } from \"@emotion/core\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nclass CustomCKEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    console.log(e.target.getContent());\n  }\n\n  render() {\n    return (\n      <div\n        className=\"ckeditor-wrapper\"\n        css={css`\n          position: relative;\n          z-index: 1;\n          &::before {\n            color: rgba(192, 192, 192, 1);\n            content: attr(data-placeholder);\n            padding: 0 11px;\n            position: absolute;\n            margin: var(--ck-spacing-large) 0;\n            top: 0;\n            z-index: -1;\n          }\n        `}\n      >\n        <Global\n          styles={css`\n            :root {\n              --ck-border-radius: 4px;\n              --ck-color-focus-border: rgba(96, 103, 113, 0.8);\n              --ck-color-shadow-inner: rgba(69, 79, 99, 0.2);\n              --ck-inner-shadow: 0 0 0 2px var(--ck-color-shadow-inner);\n              --ck-spacing-large: var(--ck-spacing-standard);\n            }\n            .ck.ck-editor__editable_inline {\n              border: 1px solid rgba(217, 217, 217, 1);\n              transition: all 0.3s;\n              &:hover {\n                border-color: rgba(96, 102, 112, 1);\n                border-right-width: 1px !important;\n              }\n            }\n            .ck-editor__editable.ck-read-only {\n              background-color: rgba(245, 245, 245, 1);\n              opacity: 1;\n              cursor: not-allowed;\n              color: rgba(0, 0, 0, 0.25);\n              &:hover {\n                border-color: rgba(217, 217, 217, 1);\n              }\n            }\n          `}\n        />\n        <CKEditor\n          editor={ClassicEditor}\n          data=\"<p>Hello from CKEditor 5!</p>\"\n          config={{\n            toolbar: [\n              \"heading\",\n              \"|\",\n              \"bold\",\n              \"italic\",\n              \"link\",\n              \"bulletedList\",\n              \"numberedList\",\n              \"blockQuote\",\n              \"ckfinder\",\n              \"|\",\n              \"imageTextAlternative\",\n              \"imageUpload\",\n              \"imageStyle:full\",\n              \"imageStyle:side\",\n              \"|\",\n              \"mediaEmbed\",\n              \"insertTable\",\n              \"tableColumn\",\n              \"tableRow\",\n              \"mergeTableCells\",\n              \"|\",\n              \"undo\",\n              \"redo\",\n            ],\n          }}\n          onInit={(editor) => {\n            // You can store the \"editor\" and use when it is needed.\n            console.log(\"Editor is ready to use!\", editor);\n            console.log(\n              \"toolbar: \",\n              Array.from(editor.ui.componentFactory.names())\n            );\n            console.log(\n              \"plugins: \",\n              ClassicEditor.builtinPlugins.map((plugin) => plugin.pluginName)\n            );\n          }}\n          onChange={(event, editor) => {\n            const data = editor.getData();\n            console.log({ event, editor, data });\n          }}\n          onBlur={(editor) => {\n            console.log(\"Blur.\", editor);\n          }}\n          onFocus={(editor) => {\n            console.log(\"Focus.\", editor);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CustomCKEditor;\n// const App = () => (\n//   <div>\n//     <h2>CKEditor 5 with React</h2>\n//     <TinyMceEditor />\n//   </div>\n// );\n\n// render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}