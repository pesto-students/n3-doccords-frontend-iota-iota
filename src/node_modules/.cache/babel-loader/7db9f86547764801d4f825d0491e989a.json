{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport MaterialTable from \"material-table\";\nimport tableIcons from \"components/shared/tableIcons\";\nimport { Box } from \"@material-ui/core\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport { deleteHealthTopic } from \"apiRequests/admin\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: \"2%\"\n  },\n  button_yes: {\n    backgroundColor: \"#ed5e68\",\n    color: \"#fff\"\n  },\n  button_no: {\n    backgroundColor: \"#8388a4\",\n    marginLeft: \"1rem\",\n    color: \"#fff\"\n  },\n  button_create: {\n    color: \"#fff\",\n    marginBottom: \"2rem\",\n    alignSelf: \"start\"\n  }\n}));\nconst modalStyle = {\n  top: \"50%\",\n  left: `50%`,\n  transform: `translate(-50%, -50%)`\n};\n\nconst AdminHealthTopics = ({\n  fetchAllHealthTopics,\n  healthTopics,\n  deleteHealthTopic\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [deleteHealthTopicId, setDeleteHealthTopicId] = useState(\"\");\n  const history = useHistory();\n  useEffect(() => {\n    fetchAllHealthTopics();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setRows(healthTopics);\n  }, [healthTopics]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const navigateToCreatePage = () => {\n    history.push(\"/admin/healthTopic\");\n  };\n\n  const navigateToEditPage = (title, healthTopicId, picture) => {\n    history.push({\n      pathname: \"/admin/healthTopic\",\n      state: {\n        title,\n        healthTopicId,\n        picture\n      }\n    });\n  };\n\n  const getColumnData = () => [{\n    field: \"title\",\n    title: \"Title\",\n    width: 300\n  }, {\n    field: \"picture\",\n    title: \"Picture\",\n    sorting: false,\n    render: function renderImage(rowData) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: rowData.picture,\n        style: {\n          maxWidth: \"20%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n\n  const clickedYes = () => {\n    deleteHealthTopic(deleteHealthTopicId);\n    handleClose();\n  };\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"simple-modal-title\",\n      children: \"Are you sure, you want to delete this health topic?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: classes.button_yes,\n        onClick: clickedYes,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: classes.button_no,\n        onClick: handleClose,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      // width: \"40%\",\n      margin: \"3rem 0\",\n      padding: \"0 3rem\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.button_create,\n      onClick: navigateToCreatePage,\n      children: \"Create New Topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MaterialTable, {\n      style: {\n        border: \"1px solid #999\"\n      },\n      icons: tableIcons,\n      title: \"Health topics list\",\n      columns: columns,\n      data: rows,\n      options: {\n        search: true,\n        actionsColumnIndex: -1,\n        fixedColumns: {\n          left: 1,\n          right: 0\n        },\n        headerStyle: {\n          backgroundColor: \"#4bffa5\",\n          color: \"#000\"\n        }\n      },\n      actions: [{\n        icon: tableIcons.Edit,\n        tooltip: \"edit topic\",\n        onClick: (event, rowData) => {\n          navigateToEditPage(rowData.title, rowData.healthTopicId, rowData.picture);\n        }\n      }, {\n        icon: tableIcons.Delete,\n        tooltip: \"delete topic\",\n        onClick: (event, rowData) => {\n          setOpen(true);\n          setDeleteHealthTopicId(rowData.healthTopicId);\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminHealthTopics, \"5XlGsudK2NaAoTZBlOgbFxVUhCU=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = AdminHealthTopics;\nAdminHealthTopics.propTypes = {\n  fetchAllHealthTopics: PropTypes.func.isRequired,\n  deleteHealthTopic: PropTypes.func,\n  healthTopics: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    healthTopics: state.common.healthTopics\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics()),\n  deleteHealthTopic: articleId => dispatch(deleteHealthTopic(articleId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHealthTopics);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminHealthTopics\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/index.js"],"names":["React","useEffect","useState","PropTypes","connect","makeStyles","fetchAllHealthTopics","MaterialTable","tableIcons","Box","Modal","Button","deleteHealthTopic","useHistory","useStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","borderRadius","button_yes","color","button_no","marginLeft","button_create","marginBottom","alignSelf","modalStyle","top","left","transform","AdminHealthTopics","healthTopics","classes","rows","setRows","columns","setColumns","open","setOpen","deleteHealthTopicId","setDeleteHealthTopicId","history","getColumnData","handleClose","navigateToCreatePage","push","navigateToEditPage","title","healthTopicId","picture","pathname","state","field","sorting","render","renderImage","rowData","maxWidth","height","clickedYes","body","margin","display","flexDirection","justifyContent","alignItems","border","search","actionsColumnIndex","fixedColumns","right","headerStyle","icon","Edit","tooltip","onClick","event","Delete","propTypes","func","isRequired","array","mapStateToProps","common","mapDispatchToProps","dispatch","articleId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport MaterialTable from \"material-table\";\nimport tableIcons from \"components/shared/tableIcons\";\nimport { Box } from \"@material-ui/core\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport { deleteHealthTopic } from \"apiRequests/admin\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: \"2%\",\n  },\n  button_yes: {\n    backgroundColor: \"#ed5e68\",\n    color: \"#fff\",\n  },\n  button_no: {\n    backgroundColor: \"#8388a4\",\n    marginLeft: \"1rem\",\n    color: \"#fff\",\n  },\n  button_create: {\n    color: \"#fff\",\n    marginBottom: \"2rem\",\n    alignSelf: \"start\",\n  },\n}));\nconst modalStyle = {\n  top: \"50%\",\n  left: `50%`,\n  transform: `translate(-50%, -50%)`,\n};\nconst AdminHealthTopics = ({\n  fetchAllHealthTopics,\n  healthTopics,\n  deleteHealthTopic,\n}) => {\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [deleteHealthTopicId, setDeleteHealthTopicId] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    fetchAllHealthTopics();\n  }, []);\n\n  useEffect(() => {\n    setColumns(getColumnData());\n    setRows(healthTopics);\n  }, [healthTopics]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const navigateToCreatePage = () => {\n    history.push(\"/admin/healthTopic\");\n  };\n  const navigateToEditPage = (title, healthTopicId, picture) => {\n    history.push({\n      pathname: \"/admin/healthTopic\",\n      state: {\n        title,\n        healthTopicId,\n        picture,\n      },\n    });\n  };\n\n  const getColumnData = () => [\n    { field: \"title\", title: \"Title\", width: 300 },\n    {\n      field: \"picture\",\n      title: \"Picture\",\n      sorting: false,\n      render: function renderImage(rowData) {\n        return (\n          <img\n            src={rowData.picture}\n            style={{ maxWidth: \"20%\", height: \"auto\" }}\n          />\n        );\n      },\n    },\n  ];\n\n  const clickedYes = () => {\n    deleteHealthTopic(deleteHealthTopicId);\n    handleClose();\n  };\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <p id=\"simple-modal-title\">\n        Are you sure, you want to delete this health topic?\n      </p>\n      <div>\n        <Button\n          variant=\"contained\"\n          className={classes.button_yes}\n          onClick={clickedYes}\n        >\n          Yes\n        </Button>\n        <Button\n          variant=\"contained\"\n          className={classes.button_no}\n          onClick={handleClose}\n        >\n          No\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <Box\n      style={{\n        // width: \"40%\",\n        margin: \"3rem 0\",\n        padding: \"0 3rem\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.button_create}\n        onClick={navigateToCreatePage}\n      >\n        Create New Topic\n      </Button>\n      <MaterialTable\n        style={{ border: \"1px solid #999\" }}\n        icons={tableIcons}\n        title=\"Health topics list\"\n        columns={columns}\n        data={rows}\n        options={{\n          search: true,\n          actionsColumnIndex: -1,\n          fixedColumns: {\n            left: 1,\n            right: 0,\n          },\n          headerStyle: {\n            backgroundColor: \"#4bffa5\",\n            color: \"#000\",\n          },\n        }}\n        actions={[\n          {\n            icon: tableIcons.Edit,\n            tooltip: \"edit topic\",\n            onClick: (event, rowData) => {\n              navigateToEditPage(\n                rowData.title,\n                rowData.healthTopicId,\n                rowData.picture\n              );\n            },\n          },\n          {\n            icon: tableIcons.Delete,\n            tooltip: \"delete topic\",\n            onClick: (event, rowData) => {\n              setOpen(true);\n              setDeleteHealthTopicId(rowData.healthTopicId);\n            },\n          },\n        ]}\n      />\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </Box>\n  );\n};\n\nAdminHealthTopics.propTypes = {\n  fetchAllHealthTopics: PropTypes.func.isRequired,\n  deleteHealthTopic: PropTypes.func,\n  healthTopics: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    healthTopics: state.common.healthTopics,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics()),\n  deleteHealthTopic: (articleId) => dispatch(deleteHealthTopic(articleId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHealthTopics);\n"]},"metadata":{},"sourceType":"module"}