{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/shared/menuBar/drawer.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useAuth } from \"context/AuthContext\";\nimport { List, ListItem, ListItemIcon, ListItemText, Divider } from \"@material-ui/core\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = () => ({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\n\nconst navList = {\n  registeredUser: [\"Home\", \"Health Topics\", \"Articles\", \"Profiles\", \"Documents\", \"Dashboard\"],\n  admin: [\"Dashboard\", \"Health Topics\", \"Articles\", \"Dashboard\"],\n  unRegisteredUser: [\"Home\", \"Health Topics\", \"Artiles\"]\n};\n\nconst DrawerComponent = ({\n  classes,\n  toggleDrawerHandler,\n  left\n}) => {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const userDetail = useSelector(state => state.user.userDetail);\n  const [list, setList] = useState([\"Home\", \"Health Topics\", \"Artiles\"]); // const [left] = useState(false);\n\n  useEffect(() => {\n    if (currentUser) {\n      if (userDetail.profileType === \"admin\") {\n        setList(navList.admin);\n      } else if (userDetail.profileType === \"free\") {\n        setList(navList.registeredUser);\n      }\n    } else {\n      setList(navList.unRegisteredUser);\n    }\n  }, [userDetail]);\n\n  const sideList = list => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: toggleDrawerHandler,\n    onKeyDown: toggleDrawerHandler,\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: list.map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    open: left,\n    onClose: toggleDrawerHandler,\n    children: sideList(list)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrawerComponent, \"1NVIpjrm6Bmiut4Fdp5UIGMQnMI=\", false, function () {\n  return [useAuth, useSelector];\n});\n\n_c = DrawerComponent;\nexport default withStyles(styles)(DrawerComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawerComponent\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/shared/menuBar/drawer.js"],"names":["React","useState","useEffect","Drawer","withStyles","useAuth","List","ListItem","ListItemIcon","ListItemText","Divider","InboxIcon","MailIcon","useSelector","styles","list","width","fullList","navList","registeredUser","admin","unRegisteredUser","DrawerComponent","classes","toggleDrawerHandler","left","currentUser","userDetail","state","user","setList","profileType","sideList","map","text","index"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useAuth } from \"context/AuthContext\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from \"@material-ui/core\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { useSelector } from \"react-redux\";\n\nconst styles = () => ({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\nconst navList = {\n  registeredUser: [\n    \"Home\",\n    \"Health Topics\",\n    \"Articles\",\n    \"Profiles\",\n    \"Documents\",\n    \"Dashboard\",\n  ],\n  admin: [\"Dashboard\", \"Health Topics\", \"Articles\", \"Dashboard\"],\n  unRegisteredUser: [\"Home\", \"Health Topics\", \"Artiles\"],\n};\n\nconst DrawerComponent = ({ classes, toggleDrawerHandler, left }) => {\n  const { currentUser } = useAuth();\n  const userDetail = useSelector((state) => state.user.userDetail);\n  const [list, setList] = useState([\"Home\", \"Health Topics\", \"Artiles\"]);\n  // const [left] = useState(false);\n  useEffect(() => {\n    if (currentUser) {\n      if (userDetail.profileType === \"admin\") {\n        setList(navList.admin);\n      } else if (userDetail.profileType === \"free\") {\n        setList(navList.registeredUser);\n      }\n    } else {\n      setList(navList.unRegisteredUser);\n    }\n  }, [userDetail]);\n\n  const sideList = (list) => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawerHandler}\n      onKeyDown={toggleDrawerHandler}\n    >\n      <List>\n        {list.map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      {/* <List>\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List> */}\n    </div>\n  );\n\n  return (\n    <Drawer open={left} onClose={toggleDrawerHandler}>\n      {sideList(list)}\n    </Drawer>\n  );\n};\n\nexport default withStyles(styles)(DrawerComponent);\n"]},"metadata":{},"sourceType":"module"}