{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/users/documents/index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Paper, makeStyles, Grid, Button, Typography } from \"@material-ui/core\";\nimport { useDispatch, connect } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport UploadFile from \"components/shared/upload/uploadFile\";\nimport { setUploadedImageURL } from \"redux/actions/common\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    marginTop: \"3rem\",\n    margin: theme.spacing(3),\n    padding: theme.spacing(3)\n  }\n}));\n\nconst Documents = ({\n  fetchAllHealthTopics,\n  healthTopics\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    fetchAllHealthTopics();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      style: {\n        color: \"#ffffff\",\n        textTransform: \"none\",\n        width: \"fit-content\",\n        margin: \"1rem 1.5rem\"\n      },\n      onClick: () => {\n        history.goBack();\n        dispatch(setUploadedImageURL(\"\"));\n      },\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Add a Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 6,\n          xl: 6 // style={{\n          //   display: \"flex\",\n          //   flexDirection: \"column\",\n          //   justifyContent: \"center\",\n          //   alignItems: \"center\",\n          // }}\n          ,\n          children: /*#__PURE__*/_jsxDEV(UploadFile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-evenly\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"document_name\",\n            label: \"Document name\",\n            error: false // helperText=\"Some important text\"\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"simple-select-outlined-label\",\n              children: \"Related health topic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"simple-select-outlined-label\" // id=\"topic\"\n              ,\n              inputProps: {\n                name: \"topic\",\n                id: \"topic\"\n              } // value={healthTopicId}\n              // onChange={handleChange}\n              ,\n              label: \"Health topic\",\n              children: [healthTopics.map(topic => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: topic.healthTopicId,\n                children: topic.title\n              }, topic.healthTopicId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"none\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"None of above\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"suggestion_name\",\n            label: \"Suggest health topic related to the above document\",\n            error: false // helperText=\"Some important text\"\n            ,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              color: \"#ffffff\",\n              textTransform: \"none\",\n              width: \"fit-content\",\n              margin: \"0 auto\"\n            } // onClick={() => {\n            //   history.goBack();\n            //   dispatch(setUploadedImageURL(\"\"));\n            // }}\n            ,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Documents, \"Y9tZvcqC0bKJ4LE1NdhuzeAtVFg=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Documents;\nDocuments.propTypes = {\n  fetchAllHealthTopics: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  healthTopics: state.common.healthTopics\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Documents);\n\nvar _c;\n\n$RefreshReg$(_c, \"Documents\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/users/documents/index.js"],"names":["React","useEffect","PropTypes","Paper","makeStyles","Grid","Button","Typography","useDispatch","connect","TextField","MenuItem","Select","InputLabel","FormControl","UploadFile","setUploadedImageURL","fetchAllHealthTopics","useStyles","theme","pageContent","marginTop","margin","spacing","padding","Documents","healthTopics","classes","dispatch","color","textTransform","width","history","goBack","display","flexDirection","justifyContent","name","id","map","topic","healthTopicId","title","propTypes","func","mapStateToProps","state","common","mapDispatchToProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Paper, makeStyles, Grid, Button, Typography } from \"@material-ui/core\";\nimport { useDispatch, connect } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport UploadFile from \"components/shared/upload/uploadFile\";\nimport { setUploadedImageURL } from \"redux/actions/common\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginTop: \"3rem\",\n    margin: theme.spacing(3),\n    padding: theme.spacing(3),\n  },\n}));\nconst Documents = ({ fetchAllHealthTopics, healthTopics }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetchAllHealthTopics();\n  }, []);\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        style={{\n          color: \"#ffffff\",\n          textTransform: \"none\",\n          width: \"fit-content\",\n          margin: \"1rem 1.5rem\",\n        }}\n        onClick={() => {\n          history.goBack();\n          dispatch(setUploadedImageURL(\"\"));\n        }}\n      >\n        Go back\n      </Button>\n      <Paper className={classes.pageContent}>\n        <Typography variant=\"h5\">Add a Document</Typography>\n        <Grid container>\n          <Grid\n            item\n            xs={12}\n            md={6}\n            lg={6}\n            xl={6}\n            // style={{\n            //   display: \"flex\",\n            //   flexDirection: \"column\",\n            //   justifyContent: \"center\",\n            //   alignItems: \"center\",\n            // }}\n          >\n            <UploadFile />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            md={6}\n            lg={6}\n            xl={6}\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-evenly\",\n            }}\n          >\n            <TextField\n              id=\"document_name\"\n              label=\"Document name\"\n              error={false}\n              // helperText=\"Some important text\"\n              variant=\"outlined\"\n            />\n            <FormControl variant=\"outlined\">\n              <InputLabel id=\"simple-select-outlined-label\">\n                Related health topic\n              </InputLabel>\n              <Select\n                labelId=\"simple-select-outlined-label\"\n                // id=\"topic\"\n                inputProps={{\n                  name: \"topic\",\n                  id: \"topic\",\n                }}\n                // value={healthTopicId}\n                // onChange={handleChange}\n                label=\"Health topic\"\n              >\n                {healthTopics.map((topic) => (\n                  <MenuItem\n                    key={topic.healthTopicId}\n                    value={topic.healthTopicId}\n                  >\n                    {topic.title}\n                  </MenuItem>\n                ))}\n                <MenuItem value=\"none\">\n                  <em>None of above</em>\n                </MenuItem>\n              </Select>\n            </FormControl>\n            <TextField\n              id=\"suggestion_name\"\n              label=\"Suggest health topic related to the above document\"\n              error={false}\n              // helperText=\"Some important text\"\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{\n                color: \"#ffffff\",\n                textTransform: \"none\",\n                width: \"fit-content\",\n                margin: \"0 auto\",\n              }}\n              // onClick={() => {\n              //   history.goBack();\n              //   dispatch(setUploadedImageURL(\"\"));\n              // }}\n            >\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n};\n\nDocuments.propTypes = {\n  fetchAllHealthTopics: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  healthTopics: state.common.healthTopics,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Documents);\n"]},"metadata":{},"sourceType":"module"}