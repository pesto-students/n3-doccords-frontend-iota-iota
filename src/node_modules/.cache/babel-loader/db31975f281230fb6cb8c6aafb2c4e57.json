{"ast":null,"code":"import * as types from \"redux/types/home\";\nconst initialState = {\n  pending: false,\n  home: [],\n  error: null\n};\nexport const homeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_ALL_HEALTH_TOPICS_SUCCESS:\n      return { ...state,\n        home: {\n          healthTopics: action.payload\n        },\n        pending: false\n      };\n\n    case types.FETCH_ALL_HEALTH_TOPICS_PENDING:\n      return { ...state,\n        pending: true\n      };\n\n    case types.FETCH_ALL_HEALTH_TOPICS_ERROR:\n      return { ...state,\n        error: action.payload,\n        pending: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/redux/reducers/home.js"],"names":["types","initialState","pending","home","error","homeReducer","state","action","type","FETCH_ALL_HEALTH_TOPICS_SUCCESS","healthTopics","payload","FETCH_ALL_HEALTH_TOPICS_PENDING","FETCH_ALL_HEALTH_TOPICS_ERROR"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,kBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACS,+BAAX;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,IAAI,EAAE;AACJO,UAAAA,YAAY,EAAEH,MAAM,CAACI;AADjB,SAFD;AAKLT,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKF,KAAK,CAACY,+BAAX;AACE,aAAO,EACL,GAAGN,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKF,KAAK,CAACa,6BAAX;AACE,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACI,OAFT;AAGLT,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOI,KAAP;AArBJ;AAuBD,CAxBM","sourcesContent":["import * as types from \"redux/types/home\";\n\nconst initialState = {\n  pending: false,\n  home: [],\n  error: null,\n};\n\nexport const homeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_ALL_HEALTH_TOPICS_SUCCESS:\n      return {\n        ...state,\n        home: {\n          healthTopics: action.payload,\n        },\n        pending: false,\n      };\n    case types.FETCH_ALL_HEALTH_TOPICS_PENDING:\n      return {\n        ...state,\n        pending: true,\n      };\n    case types.FETCH_ALL_HEALTH_TOPICS_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        pending: false,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}