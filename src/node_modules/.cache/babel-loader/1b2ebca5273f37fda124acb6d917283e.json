{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/adminHealthTopic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"components/shared/spinner\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUploadedImageURL } from \"redux/actions/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminHealthTopic = () => {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Select your file first\");\n  const dispatch = useDispatch();\n  const uploadedLink = useSelector(state => state.common.uploadedLink); // Handling file selection from input\n\n  const onFileSelected = e => {\n    if (e.target.files[0]) {\n      setSelectedFile(e.target.files[0]);\n      setFileName(e.target.files[0].name);\n      setIsDisabled(false); // Enabling upload button\n\n      setButtonText(\"Let's upload this!\");\n    }\n  }; // Setting image preview\n\n\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n\n      reader.onloadend = () => setPreview(reader.result);\n\n      reader.readAsDataURL(selectedFile);\n    }\n  }, [selectedFile]); // Uploading image to Cloud Storage\n\n  const handleFileUpload = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setIsDisabled(true);\n    setButtonText(\"Wait we're uploading your file...\");\n\n    try {\n      if (selectedFile !== \"\") {\n        // Creating a FormData object\n        const fileData = new FormData(); // Adding the 'image' field and the selected file as value to our FormData object\n        // Changing file name to make it unique and avoid potential later overrides\n\n        fileData.set(\"image\", selectedFile, `${Date.now()}-${selectedFile.name}`);\n        const token = JSON.parse(localStorage.getItem(\"doccords_user\")).accessToken;\n        const res = await axios({\n          method: \"post\",\n          url: \"http://localhost:5001/api/v1/admin/upload/image\",\n          data: fileData,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: \"Bearer \" + token\n          }\n        });\n        await setIsLoading(false);\n        await setIsSuccess(true);\n        dispatch(setUploadedImageURL(res.data.fileLocation));\n        console.log(res); // Reset to default values after 3 seconds\n        // setTimeout(() => {\n        //   setSelectedFile(null);\n        //   setPreview(null);\n        //   setIsSuccess(false);\n        //   setFileName(null);\n        //   setButtonText(\"Select your file first\");\n        // }, 3000);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setIsError(true);\n      setFileName(null); // setTimeout(() => {\n      //   setIsError(false);\n      //   setButtonText(\"Select your file first\");\n      // }, 3000);\n    }\n  };\n\n  if (!uploadedLink.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo_upload\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: \"Create new article\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleFileUpload(e),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"uploader\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-space\",\n              children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: isError || isSuccess ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `icon-${isSuccess ? \"success\" : \"error\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [preview ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"preview\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: preview,\n                      alt: \"Preview of the file to be uploaded\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"icon-upload\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    onChange: onFileSelected,\n                    accept: \"image/*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), isError || isSuccess ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: isSuccess ? \"success\" : \"error\",\n              children: isSuccess ? \"Upload successful!\" : \"Something went wrong ...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filename\",\n              children: fileName || \"No file selected yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"secondary\",\n            disabled: isDisabled,\n            style: {\n              textTransform: \"none\",\n              marginTop: \"1rem\"\n            },\n            children: buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        style: {\n          color: \"#ffffff\",\n          textTransform: \"none\"\n        },\n        onClick: () => {\n          dispatch(setUploadedImageURL(\"\"));\n        },\n        children: \"Delete uploaded image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: uploadedLink,\n        style: {\n          maxWidth: \"500px\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(AdminHealthTopic, \"ZqqbnsSPaixK4+hk9yzrVNC7Xok=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AdminHealthTopic;\nexport default AdminHealthTopic;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminHealthTopic\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/adminHealthTopic.js"],"names":["React","useState","useEffect","axios","Spinner","Typography","Button","useDispatch","useSelector","setUploadedImageURL","AdminHealthTopic","selectedFile","setSelectedFile","fileName","setFileName","preview","setPreview","isDisabled","setIsDisabled","isLoading","setIsLoading","isError","setIsError","isSuccess","setIsSuccess","buttonText","setButtonText","dispatch","uploadedLink","state","common","onFileSelected","e","target","files","name","reader","FileReader","onloadend","result","readAsDataURL","handleFileUpload","preventDefault","fileData","FormData","set","Date","now","token","JSON","parse","localStorage","getItem","accessToken","res","method","url","data","headers","Authorization","fileLocation","console","log","error","length","marginTop","textTransform","display","color","maxWidth","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"components/shared/spinner\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUploadedImageURL } from \"redux/actions/common\";\n\nconst AdminHealthTopic = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Select your file first\");\n  const dispatch = useDispatch();\n  const uploadedLink = useSelector((state) => state.common.uploadedLink);\n\n  // Handling file selection from input\n  const onFileSelected = (e) => {\n    if (e.target.files[0]) {\n      setSelectedFile(e.target.files[0]);\n      setFileName(e.target.files[0].name);\n      setIsDisabled(false); // Enabling upload button\n      setButtonText(\"Let's upload this!\");\n    }\n  };\n\n  // Setting image preview\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onloadend = () => setPreview(reader.result);\n      reader.readAsDataURL(selectedFile);\n    }\n  }, [selectedFile]);\n\n  // Uploading image to Cloud Storage\n  const handleFileUpload = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setIsDisabled(true);\n    setButtonText(\"Wait we're uploading your file...\");\n\n    try {\n      if (selectedFile !== \"\") {\n        // Creating a FormData object\n        const fileData = new FormData();\n\n        // Adding the 'image' field and the selected file as value to our FormData object\n        // Changing file name to make it unique and avoid potential later overrides\n        fileData.set(\n          \"image\",\n          selectedFile,\n          `${Date.now()}-${selectedFile.name}`\n        );\n        const token = JSON.parse(\n          localStorage.getItem(\"doccords_user\")\n        ).accessToken;\n        const res = await axios({\n          method: \"post\",\n          url: \"http://localhost:5001/api/v1/admin/upload/image\",\n          data: fileData,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: \"Bearer \" + token,\n          },\n        });\n        await setIsLoading(false);\n        await setIsSuccess(true);\n        dispatch(setUploadedImageURL(res.data.fileLocation));\n        console.log(res);\n\n        // Reset to default values after 3 seconds\n        // setTimeout(() => {\n        //   setSelectedFile(null);\n        //   setPreview(null);\n        //   setIsSuccess(false);\n        //   setFileName(null);\n        //   setButtonText(\"Select your file first\");\n        // }, 3000);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setIsError(true);\n      setFileName(null);\n\n      // setTimeout(() => {\n      //   setIsError(false);\n      //   setButtonText(\"Select your file first\");\n      // }, 3000);\n    }\n  };\n\n  if (!uploadedLink.length > 0) {\n    return (\n      <div className=\"photo_upload\">\n        <Typography variant=\"h5\" style={{ marginTop: \"1rem\" }}>\n          Create new article\n        </Typography>\n        <main style={{ marginTop: \"1rem\" }}>\n          <form onSubmit={(e) => handleFileUpload(e)}>\n            <label className=\"uploader\">\n              <div className=\"upload-space\">\n                {isLoading ? (\n                  <Spinner />\n                ) : (\n                  <>\n                    {isError || isSuccess ? (\n                      <i\n                        className={`icon-${isSuccess ? \"success\" : \"error\"}`}\n                      ></i>\n                    ) : (\n                      <>\n                        {preview ? (\n                          <div className=\"preview\">\n                            <img\n                              src={preview}\n                              alt=\"Preview of the file to be uploaded\"\n                            />\n                          </div>\n                        ) : (\n                          <i className=\"icon-upload\"></i>\n                        )}\n                        <input\n                          type=\"file\"\n                          onChange={onFileSelected}\n                          accept=\"image/*\"\n                        />\n                      </>\n                    )}\n                  </>\n                )}\n              </div>\n              {isError || isSuccess ? (\n                <p className={isSuccess ? \"success\" : \"error\"}>\n                  {isSuccess\n                    ? \"Upload successful!\"\n                    : \"Something went wrong ...\"}\n                </p>\n              ) : (\n                <p className=\"filename\">{fileName || \"No file selected yet\"}</p>\n              )}\n            </label>\n\n            {/* <button\n              type=\"submit\"\n              className=\"btn\"\n              disabled={isDisabled}\n              tabIndex={0}\n            >\n              {buttonText}\n            </button> */}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={isDisabled}\n              style={{\n                textTransform: \"none\",\n                marginTop: \"1rem\",\n              }}\n            >\n              {buttonText}\n            </Button>\n          </form>\n        </main>\n      </div>\n    );\n  } else {\n    return (\n      <div style={{ display: \"flex\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          style={{ color: \"#ffffff\", textTransform: \"none\" }}\n          onClick={() => {\n            dispatch(setUploadedImageURL(\"\"));\n          }}\n        >\n          Delete uploaded image\n        </Button>\n        <img src={uploadedLink} style={{ maxWidth: \"500px\", height: \"auto\" }} />\n      </div>\n    );\n  }\n};\n\nexport default AdminHealthTopic;\n"]},"metadata":{},"sourceType":"module"}