{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/login/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport { useAuth } from \"context/AuthContext\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { PROFILES } from \"navigation/constants\"; // Configure FirebaseUI.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uiConfig = {\n  callbacks: {\n    signInFailure: function (error) {\n      return console.log(error);\n    }\n  },\n  signInFlow: \"popup\",\n  signInSuccessUrl: PROFILES,\n  signInOptions: [{\n    provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    fullLabel: \"Login or Register with Google\"\n  }, {\n    provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    fullLabel: \"Login or Register with Facebook\"\n  }, {\n    provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n    recaptchaParameters: {\n      type: \"image\",\n      // 'audio'\n      size: \"invisible\",\n      // 'invisible' or 'compact'\n      badge: \"bottomleft\" // 'bottomright' or 'inline' applies to invisible.\n\n    },\n    fullLabel: \"Login or Register with Phone\",\n    defaultCountry: \"IN\"\n  }]\n};\n\nconst LoginView = () => {\n  _s();\n\n  const {\n    currentUser,\n    logout,\n    fetchToken\n  } = useAuth();\n  const [tokenView, setTokenView] = useState(\"Token\");\n\n  const tokenClick = async () => {\n    const idToken = await fetchToken();\n    console.log(idToken);\n    setTokenView(idToken);\n  }; // if (currentUser) {\n  //   return (\n  //     <div>\n  //       <p>Logged in</p>\n  //       <button onClick={logout}>signout</button>\n  //       <button onClick={tokenClick}>{tokenView}</button>\n  //     </div>\n  //   );\n  // } else {\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Doccords\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Login or Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledFirebaseAuth, {\n      uiConfig: uiConfig,\n      firebaseAuth: firebase.auth()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this); // }\n};\n\n_s(LoginView, \"7q+nc37DzL7+EIlA37eMgrO8xH0=\", false, function () {\n  return [useAuth];\n});\n\n_c = LoginView;\nexport default LoginView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginView\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/login/index.js"],"names":["React","useState","firebase","useAuth","StyledFirebaseAuth","PROFILES","uiConfig","callbacks","signInFailure","error","console","log","signInFlow","signInSuccessUrl","signInOptions","provider","auth","GoogleAuthProvider","PROVIDER_ID","fullLabel","FacebookAuthProvider","PhoneAuthProvider","recaptchaParameters","type","size","badge","defaultCountry","LoginView","currentUser","logout","fetchToken","tokenView","setTokenView","tokenClick","idToken"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,SAASC,QAAT,QAAyB,sBAAzB,C,CAEA;;;AACA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,EAAE,UAAUC,KAAV,EAAiB;AAC9B,aAAOC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAP;AACD;AAHQ,GADI;AAMfG,EAAAA,UAAU,EAAE,OANG;AAOfC,EAAAA,gBAAgB,EAAER,QAPH;AAQfS,EAAAA,aAAa,EAAE,CACb;AACEC,IAAAA,QAAQ,EAAEb,QAAQ,CAACc,IAAT,CAAcC,kBAAd,CAAiCC,WAD7C;AAEEC,IAAAA,SAAS,EAAE;AAFb,GADa,EAKb;AACEJ,IAAAA,QAAQ,EAAEb,QAAQ,CAACc,IAAT,CAAcI,oBAAd,CAAmCF,WAD/C;AAEEC,IAAAA,SAAS,EAAE;AAFb,GALa,EASb;AACEJ,IAAAA,QAAQ,EAAEb,QAAQ,CAACc,IAAT,CAAcK,iBAAd,CAAgCH,WAD5C;AAEEI,IAAAA,mBAAmB,EAAE;AACnBC,MAAAA,IAAI,EAAE,OADa;AACJ;AACfC,MAAAA,IAAI,EAAE,WAFa;AAEA;AACnBC,MAAAA,KAAK,EAAE,YAHY,CAGE;;AAHF,KAFvB;AAOEN,IAAAA,SAAS,EAAE,8BAPb;AASEO,IAAAA,cAAc,EAAE;AATlB,GATa;AARA,CAAjB;;AA8BA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,MAAsC3B,OAAO,EAAnD;AACA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAAC,OAAD,CAA1C;;AACA,QAAMgC,UAAU,GAAG,YAAY;AAC7B,UAAMC,OAAO,GAAG,MAAMJ,UAAU,EAAhC;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAYuB,OAAZ;AACAF,IAAAA,YAAY,CAACE,OAAD,CAAZ;AACD,GAJD,CAHsB,CAQtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAE5B,QAA9B;AAAwC,MAAA,YAAY,EAAEJ,QAAQ,CAACc,IAAT;AAAtD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAjBsB,CAwBtB;AACD,CAzBD;;GAAMW,S;UACwCxB,O;;;KADxCwB,S;AA2BN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport { useAuth } from \"context/AuthContext\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { PROFILES } from \"navigation/constants\";\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  callbacks: {\n    signInFailure: function (error) {\n      return console.log(error);\n    },\n  },\n  signInFlow: \"popup\",\n  signInSuccessUrl: PROFILES,\n  signInOptions: [\n    {\n      provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      fullLabel: \"Login or Register with Google\",\n    },\n    {\n      provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      fullLabel: \"Login or Register with Facebook\",\n    },\n    {\n      provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n      recaptchaParameters: {\n        type: \"image\", // 'audio'\n        size: \"invisible\", // 'invisible' or 'compact'\n        badge: \"bottomleft\", // 'bottomright' or 'inline' applies to invisible.\n      },\n      fullLabel: \"Login or Register with Phone\",\n\n      defaultCountry: \"IN\",\n    },\n  ],\n};\nconst LoginView = () => {\n  const { currentUser, logout, fetchToken } = useAuth();\n  const [tokenView, setTokenView] = useState(\"Token\");\n  const tokenClick = async () => {\n    const idToken = await fetchToken();\n    console.log(idToken);\n    setTokenView(idToken);\n  };\n  // if (currentUser) {\n  //   return (\n  //     <div>\n  //       <p>Logged in</p>\n  //       <button onClick={logout}>signout</button>\n  //       <button onClick={tokenClick}>{tokenView}</button>\n  //     </div>\n  //   );\n  // } else {\n  return (\n    <div>\n      <h1>Doccords</h1>\n      <p>Login or Signup</p>\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n    </div>\n  );\n  // }\n};\n\nexport default LoginView;\n"]},"metadata":{},"sourceType":"module"}