{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/login/index.js\",\n    _s = $RefreshSig$();\n\n// Import FirebaseAuth and firebase.\nimport React, { useState, useEffect } from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport { SETUP_PROFILE } from \"navigation/constants\"; // Configure FirebaseUI.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n      firebase.auth().currentUser.getIdToken(true).then(function (idToken) {\n        // Send token to your backend via HTTPS\n        // ...\n        console.log(\"tokennnnnnnnnn\", idToken);\n      }).catch(function (error) {\n        console.error(error);\n      }); // localStorage.setItem(\"doccords_user\", JSON.stringify(user));\n      // console.log(authResult);\n\n      return false;\n    },\n    signInFailure: function (error) {\n      return console.log(error);\n    }\n  },\n  signInFlow: \"popup\",\n  signInSuccessUrl: SETUP_PROFILE,\n  signInOptions: [{\n    provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    fullLabel: \"Login or Register with Google\"\n  }, {\n    provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    fullLabel: \"Login or Register with Facebook\"\n  }, {\n    provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n    recaptchaParameters: {\n      type: \"image\",\n      // 'audio'\n      size: \"invisible\",\n      // 'invisible' or 'compact'\n      badge: \"bottomleft\" // 'bottomright' or 'inline' applies to invisible.\n\n    },\n    fullLabel: \"Login or Register with Phone\",\n    defaultCountry: \"IN\"\n  }]\n};\n\nconst LoginView = () => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(userParams => {\n      // detaching the listener\n      if (userParams) {\n        // ...your code to handle authenticated users.\n        setUser(userParams);\n      } else {// No user is signed in...code to handle unauthenticated users.\n      }\n    });\n    return () => unsubscribe(); // unsubscribing from the listener when the component is unmounting.\n  }, []);\n  console.log(\"user\", user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Doccords\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Login or Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledFirebaseAuth, {\n      uiConfig: uiConfig,\n      firebaseAuth: firebase.auth()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginView, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n\n_c = LoginView;\nexport default LoginView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginView\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/login/index.js"],"names":["React","useState","useEffect","StyledFirebaseAuth","firebase","SETUP_PROFILE","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","auth","currentUser","getIdToken","then","idToken","console","log","catch","error","signInFailure","signInFlow","signInSuccessUrl","signInOptions","provider","GoogleAuthProvider","PROVIDER_ID","fullLabel","FacebookAuthProvider","PhoneAuthProvider","recaptchaParameters","type","size","badge","defaultCountry","LoginView","user","setUser","unsubscribe","onAuthStateChanged","userParams"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,aAAT,QAA8B,sBAA9B,C,CAEA;;;AACA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,SAAS,EAAE;AACTC,IAAAA,2BAA2B,EAAE,UAAUC,UAAV,EAAsBC,WAAtB,EAAmC;AAC9DN,MAAAA,QAAQ,CACLO,IADH,GAEGC,WAFH,CAEeC,UAFf,CAE0B,IAF1B,EAGGC,IAHH,CAGQ,UAAUC,OAAV,EAAmB;AACvB;AACA;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,OAA9B;AACD,OAPH,EAQGG,KARH,CAQS,UAAUC,KAAV,EAAiB;AACtBH,QAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD,OAVH,EAD8D,CAY9D;AACA;;AACA,aAAO,KAAP;AACD,KAhBQ;AAiBTC,IAAAA,aAAa,EAAE,UAAUD,KAAV,EAAiB;AAC9B,aAAOH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAAP;AACD;AAnBQ,GADI;AAsBfE,EAAAA,UAAU,EAAE,OAtBG;AAuBfC,EAAAA,gBAAgB,EAAEjB,aAvBH;AAwBfkB,EAAAA,aAAa,EAAE,CACb;AACEC,IAAAA,QAAQ,EAAEpB,QAAQ,CAACO,IAAT,CAAcc,kBAAd,CAAiCC,WAD7C;AAEEC,IAAAA,SAAS,EAAE;AAFb,GADa,EAKb;AACEH,IAAAA,QAAQ,EAAEpB,QAAQ,CAACO,IAAT,CAAciB,oBAAd,CAAmCF,WAD/C;AAEEC,IAAAA,SAAS,EAAE;AAFb,GALa,EASb;AACEH,IAAAA,QAAQ,EAAEpB,QAAQ,CAACO,IAAT,CAAckB,iBAAd,CAAgCH,WAD5C;AAEEI,IAAAA,mBAAmB,EAAE;AACnBC,MAAAA,IAAI,EAAE,OADa;AACJ;AACfC,MAAAA,IAAI,EAAE,WAFa;AAEA;AACnBC,MAAAA,KAAK,EAAE,YAHY,CAGE;;AAHF,KAFvB;AAOEN,IAAAA,SAAS,EAAE,8BAPb;AASEO,IAAAA,cAAc,EAAE;AATlB,GATa;AAxBA,CAAjB;;AA+CA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBpC,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoC,WAAW,GAAGlC,QAAQ,CAACO,IAAT,GAAgB4B,kBAAhB,CAAoCC,UAAD,IAAgB;AACrE;AACA,UAAIA,UAAJ,EAAgB;AACd;AACAH,QAAAA,OAAO,CAACG,UAAD,CAAP;AACD,OAHD,MAGO,CACL;AACD;AACF,KARmB,CAApB;AASA,WAAO,MAAMF,WAAW,EAAxB,CAVc,CAUc;AAC7B,GAXQ,EAWN,EAXM,CAAT;AAaAtB,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBmB,IAApB;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAE9B,QAA9B;AAAwC,MAAA,YAAY,EAAEF,QAAQ,CAACO,IAAT;AAAtD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAxBD;;GAAMwB,S;;KAAAA,S;AA0BN,eAAeA,SAAf","sourcesContent":["// Import FirebaseAuth and firebase.\nimport React, { useState, useEffect } from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport { SETUP_PROFILE } from \"navigation/constants\";\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n      firebase\n        .auth()\n        .currentUser.getIdToken(true)\n        .then(function (idToken) {\n          // Send token to your backend via HTTPS\n          // ...\n          console.log(\"tokennnnnnnnnn\", idToken);\n        })\n        .catch(function (error) {\n          console.error(error);\n        });\n      // localStorage.setItem(\"doccords_user\", JSON.stringify(user));\n      // console.log(authResult);\n      return false;\n    },\n    signInFailure: function (error) {\n      return console.log(error);\n    },\n  },\n  signInFlow: \"popup\",\n  signInSuccessUrl: SETUP_PROFILE,\n  signInOptions: [\n    {\n      provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      fullLabel: \"Login or Register with Google\",\n    },\n    {\n      provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      fullLabel: \"Login or Register with Facebook\",\n    },\n    {\n      provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n      recaptchaParameters: {\n        type: \"image\", // 'audio'\n        size: \"invisible\", // 'invisible' or 'compact'\n        badge: \"bottomleft\", // 'bottomright' or 'inline' applies to invisible.\n      },\n      fullLabel: \"Login or Register with Phone\",\n\n      defaultCountry: \"IN\",\n    },\n  ],\n};\n\nconst LoginView = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged((userParams) => {\n      // detaching the listener\n      if (userParams) {\n        // ...your code to handle authenticated users.\n        setUser(userParams);\n      } else {\n        // No user is signed in...code to handle unauthenticated users.\n      }\n    });\n    return () => unsubscribe(); // unsubscribing from the listener when the component is unmounting.\n  }, []);\n\n  console.log(\"user\", user);\n  return (\n    <div>\n      <h1>Doccords</h1>\n      <p>Login or Signup</p>\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n    </div>\n  );\n};\n\nexport default LoginView;\n"]},"metadata":{},"sourceType":"module"}