{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminArticles/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport MaterialTable from \"material-table\";\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\"; // import Modal from \"@material-ui/core/Modal\";\n\nimport Button from \"@material-ui/core/Button\";\nimport tableIcons from \"components/shared/tableIcons\";\nimport { fetchAllArticles } from \"apiRequests/common\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: \"2%\"\n  },\n  button_yes: {\n    backgroundColor: \"#ed5e68\",\n    color: \"#fff\"\n  },\n  button_no: {\n    backgroundColor: \"#8388a4\",\n    marginLeft: \"1rem\",\n    color: \"#fff\"\n  },\n  button_create: {\n    color: \"#fff\",\n    marginBottom: \"2rem\",\n    alignSelf: \"start\"\n  }\n})); // const modalStyle = {\n//   top: \"50%\",\n//   left: `50%`,\n//   transform: `translate(-50%, -50%)`,\n// };\n\nconst AdminArticles = ({\n  articles,\n  healthTopics,\n  fetchAllArticles\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const history = useHistory();\n\n  const setArticlesWithTopics = () => {\n    console.log(articles);\n    const newArticles = articles.map(article => {\n      // eslint-disable-next-line react/prop-types\n      healthTopics.forEach(topic => {\n        if (article.healthTopicId === topic.healthTopicId) {\n          article.healthTopicTitle = topic.title;\n        }\n      });\n      return article;\n    });\n    setRows(newArticles);\n  };\n\n  useEffect(() => {\n    fetchAllArticles();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setArticlesWithTopics();\n  }, [articles]);\n\n  const getColumnData = () => [{\n    field: \"title\",\n    title: \"Title\"\n  }, {\n    field: \"description\",\n    title: \"Description\"\n  }, {\n    field: \"healthTopicTitle\",\n    title: \"Health Topic\"\n  }, {\n    field: \"picture\",\n    title: \"Picture\",\n    sorting: false,\n    render: function renderImage(rowData) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: rowData.picture,\n        style: {\n          maxWidth: \"50%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n\n  const navigateToCreatePage = () => {\n    history.push(\"/admin/article\");\n  };\n\n  const navigateToEditPage = (title, healthTopicId, picture, description) => {\n    history.push({\n      pathname: \"/admin/healthTopic\",\n      state: {\n        title,\n        healthTopicId,\n        picture,\n        description\n      }\n    });\n  };\n\n  const setOpen = () => {};\n\n  const setDeleteArticleId = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      // width: \"40%\",\n      margin: \"3rem 0\",\n      padding: \"0 3rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.button_create,\n      onClick: navigateToCreatePage,\n      children: \"Create New Topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MaterialTable, {\n      style: {\n        border: \"1px solid #999\"\n      },\n      icons: tableIcons,\n      title: \"Health topics list\",\n      columns: columns,\n      data: rows,\n      options: {\n        search: true,\n        actionsColumnIndex: -1,\n        // fixedColumns: {\n        //   left: 1,\n        //   right: 0,\n        // },\n        headerStyle: {\n          backgroundColor: \"#4bffa5\",\n          color: \"#000\"\n        }\n      },\n      actions: [{\n        icon: tableIcons.Edit,\n        tooltip: \"edit topic\",\n        onClick: (event, rowData) => {\n          navigateToEditPage(rowData.title, rowData.healthTopicId, rowData.picture);\n        }\n      }, {\n        icon: tableIcons.Delete,\n        tooltip: \"delete topic\",\n        onClick: (event, rowData) => {\n          setOpen(true);\n          setDeleteArticleId(rowData.healthTopicId);\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminArticles, \"/xDxKgr6Yjc3uEEKJ6KEPO6dh/s=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = AdminArticles;\nAdminArticles.propTypes = {\n  articles: PropTypes.array,\n  healthTopics: PropTypes.array,\n  fetchAllArticles: PropTypes.func\n}; // export default AdminArticles;\n\nconst mapStateToProps = state => ({\n  articles: state.common.articles,\n  healthTopics: state.common.healthTopics\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllArticles: () => dispatch(fetchAllArticles())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminArticles);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminArticles\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminArticles/index.js"],"names":["React","useState","useEffect","PropTypes","connect","MaterialTable","Box","makeStyles","Button","tableIcons","fetchAllArticles","useHistory","useStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","borderRadius","button_yes","color","button_no","marginLeft","button_create","marginBottom","alignSelf","AdminArticles","articles","healthTopics","classes","rows","setRows","columns","setColumns","history","setArticlesWithTopics","console","log","newArticles","map","article","forEach","topic","healthTopicId","healthTopicTitle","title","getColumnData","field","sorting","render","renderImage","rowData","picture","maxWidth","height","navigateToCreatePage","push","navigateToEditPage","description","pathname","state","setOpen","setDeleteArticleId","margin","border","search","actionsColumnIndex","headerStyle","icon","Edit","tooltip","onClick","event","Delete","propTypes","array","func","mapStateToProps","common","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport MaterialTable from \"material-table\";\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\n\nimport tableIcons from \"components/shared/tableIcons\";\nimport { fetchAllArticles } from \"apiRequests/common\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: \"2%\",\n  },\n  button_yes: {\n    backgroundColor: \"#ed5e68\",\n    color: \"#fff\",\n  },\n  button_no: {\n    backgroundColor: \"#8388a4\",\n    marginLeft: \"1rem\",\n    color: \"#fff\",\n  },\n  button_create: {\n    color: \"#fff\",\n    marginBottom: \"2rem\",\n    alignSelf: \"start\",\n  },\n}));\n// const modalStyle = {\n//   top: \"50%\",\n//   left: `50%`,\n//   transform: `translate(-50%, -50%)`,\n// };\n\nconst AdminArticles = ({ articles, healthTopics, fetchAllArticles }) => {\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const history = useHistory();\n\n  const setArticlesWithTopics = () => {\n    console.log(articles);\n    const newArticles = articles.map((article) => {\n      // eslint-disable-next-line react/prop-types\n      healthTopics.forEach((topic) => {\n        if (article.healthTopicId === topic.healthTopicId) {\n          article.healthTopicTitle = topic.title;\n        }\n      });\n      return article;\n    });\n    setRows(newArticles);\n  };\n\n  useEffect(() => {\n    fetchAllArticles();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setArticlesWithTopics();\n  }, [articles]);\n\n  const getColumnData = () => [\n    { field: \"title\", title: \"Title\" },\n    { field: \"description\", title: \"Description\" },\n    { field: \"healthTopicTitle\", title: \"Health Topic\" },\n    {\n      field: \"picture\",\n      title: \"Picture\",\n      sorting: false,\n      render: function renderImage(rowData) {\n        return (\n          <img\n            src={rowData.picture}\n            style={{ maxWidth: \"50%\", height: \"auto\" }}\n          />\n        );\n      },\n    },\n  ];\n  const navigateToCreatePage = () => {\n    history.push(\"/admin/article\");\n  };\n  const navigateToEditPage = (title, healthTopicId, picture, description) => {\n    history.push({\n      pathname: \"/admin/healthTopic\",\n      state: {\n        title,\n        healthTopicId,\n        picture,\n        description,\n      },\n    });\n  };\n  const setOpen = () => {};\n  const setDeleteArticleId = () => {};\n\n  return (\n    <Box\n      style={{\n        // width: \"40%\",\n        margin: \"3rem 0\",\n        padding: \"0 3rem\",\n      }}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.button_create}\n        onClick={navigateToCreatePage}\n      >\n        Create New Topic\n      </Button>\n      <MaterialTable\n        style={{ border: \"1px solid #999\" }}\n        icons={tableIcons}\n        title=\"Health topics list\"\n        columns={columns}\n        data={rows}\n        options={{\n          search: true,\n          actionsColumnIndex: -1,\n          // fixedColumns: {\n          //   left: 1,\n          //   right: 0,\n          // },\n          headerStyle: {\n            backgroundColor: \"#4bffa5\",\n            color: \"#000\",\n          },\n        }}\n        actions={[\n          {\n            icon: tableIcons.Edit,\n            tooltip: \"edit topic\",\n            onClick: (event, rowData) => {\n              navigateToEditPage(\n                rowData.title,\n                rowData.healthTopicId,\n                rowData.picture\n              );\n            },\n          },\n          {\n            icon: tableIcons.Delete,\n            tooltip: \"delete topic\",\n            onClick: (event, rowData) => {\n              setOpen(true);\n              setDeleteArticleId(rowData.healthTopicId);\n            },\n          },\n        ]}\n      />\n      {/* <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal> */}\n    </Box>\n  );\n};\nAdminArticles.propTypes = {\n  articles: PropTypes.array,\n  healthTopics: PropTypes.array,\n  fetchAllArticles: PropTypes.func,\n};\n\n// export default AdminArticles;\n\nconst mapStateToProps = (state) => ({\n  articles: state.common.articles,\n  healthTopics: state.common.healthTopics,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllArticles: () => dispatch(fetchAllArticles()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminArticles);\n"]},"metadata":{},"sourceType":"module"}