{"ast":null,"code":"import customAxios from \"apiRequests/customAxios\";\nimport { DELETE_HEALTH_TOPICS_URL } from \"apiRequests/constants\";\nimport { setAllHealthTopics } from \"redux/actions/common\";\nexport const deleteHealthTopic = healthTopicId => async (dispatch, getState) => {\n  const deleteHealthTopic = await customAxios.delete(`${DELETE_HEALTH_TOPICS_URL}/${healthTopicId}`);\n\n  if (deleteHealthTopic.data.success) {\n    const removedArr = getState().common.healthTopics.filter(healthTopic => healthTopic.healthTopicId !== healthTopicId);\n    dispatch(setAllHealthTopics(removedArr));\n  } else {\n    console.log(deleteHealthTopic.data);\n  }\n};","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/apiRequests/admin.js"],"names":["customAxios","DELETE_HEALTH_TOPICS_URL","setAllHealthTopics","deleteHealthTopic","healthTopicId","dispatch","getState","delete","data","success","removedArr","common","healthTopics","filter","healthTopic","console","log"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,yBAAxB;AACA,SAASC,wBAAT,QAAyC,uBAAzC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AAEA,OAAO,MAAMC,iBAAiB,GAC3BC,aAAD,IAAmB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC/C,QAAMH,iBAAiB,GAAG,MAAMH,WAAW,CAACO,MAAZ,CAC7B,GAAEN,wBAAyB,IAAGG,aAAc,EADf,CAAhC;;AAGA,MAAID,iBAAiB,CAACK,IAAlB,CAAuBC,OAA3B,EAAoC;AAClC,UAAMC,UAAU,GAAGJ,QAAQ,GAAGK,MAAX,CAAkBC,YAAlB,CAA+BC,MAA/B,CAChBC,WAAD,IAAiBA,WAAW,CAACV,aAAZ,KAA8BA,aAD9B,CAAnB;AAGAC,IAAAA,QAAQ,CAACH,kBAAkB,CAACQ,UAAD,CAAnB,CAAR;AACD,GALD,MAKO;AACLK,IAAAA,OAAO,CAACC,GAAR,CAAYb,iBAAiB,CAACK,IAA9B;AACD;AACF,CAbI","sourcesContent":["import customAxios from \"apiRequests/customAxios\";\nimport { DELETE_HEALTH_TOPICS_URL } from \"apiRequests/constants\";\nimport { setAllHealthTopics } from \"redux/actions/common\";\n\nexport const deleteHealthTopic =\n  (healthTopicId) => async (dispatch, getState) => {\n    const deleteHealthTopic = await customAxios.delete(\n      `${DELETE_HEALTH_TOPICS_URL}/${healthTopicId}`\n    );\n    if (deleteHealthTopic.data.success) {\n      const removedArr = getState().common.healthTopics.filter(\n        (healthTopic) => healthTopic.healthTopicId !== healthTopicId\n      );\n      dispatch(setAllHealthTopics(removedArr));\n    } else {\n      console.log(deleteHealthTopic.data);\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}