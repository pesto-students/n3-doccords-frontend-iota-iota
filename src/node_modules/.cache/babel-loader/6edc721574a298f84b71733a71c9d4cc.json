{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/HorizontalGridList/HorizontalGridList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n    padding: \"10px\",\n    marginTop: 0,\n    paddingTop: 0\n  },\n  gridList: {\n    flexWrap: \"nowrap\",\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: \"translateZ(0)\"\n  },\n  title: {\n    color: theme.palette.primary.light\n  },\n  titleBar: {\n    background: \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\n  }\n}));\nconst tileData = [{\n  img: \"https://images.unsplash.com/photo-1619423282375-02725fbb31e3?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8dG9iYWNjb3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n  title: \"Image\",\n  author: \"author\"\n}, {\n  img: \"https://images.unsplash.com/photo-1584825093714-f5d917af9317?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8dG9iYWNjb3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n  title: \"Image\",\n  author: \"author\"\n}, {\n  img: \"https://images.unsplash.com/photo-1619423282375-02725fbb31e3?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8dG9iYWNjb3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n  title: \"Image\",\n  author: \"author\"\n}, {\n  img: \"https://images.unsplash.com/photo-1584825093714-f5d917af9317?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8dG9iYWNjb3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n  title: \"Image\",\n  author: \"author\"\n}, {\n  img: \"https://images.unsplash.com/photo-1619423282375-02725fbb31e3?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8dG9iYWNjb3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n  title: \"Image\",\n  author: \"author\"\n}, {\n  img: \"https://images.unsplash.com/photo-1584825093714-f5d917af9317?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8dG9iYWNjb3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n  title: \"Image\",\n  author: \"author\"\n}];\n\nconst SingleLineGridList = () => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      className: classes.gridList,\n      cols: matches ? 1.5 : 3.5,\n      children: tileData.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tile.img,\n          alt: tile.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          title: tile.title,\n          classes: {\n            root: classes.titleBar,\n            title: classes.title\n          } // actionIcon={\n          //   <IconButton aria-label={`star ${tile.title}`}>\n          //     <StarBorderIcon className={classes.title} />\n          //   </IconButton>\n          // }\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, tile.img, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SingleLineGridList, \"UPWBnPS5gvL9MbuO6krlR+BMfOo=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = SingleLineGridList;\nexport default SingleLineGridList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleLineGridList\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/HorizontalGridList/HorizontalGridList.js"],"names":["React","makeStyles","useTheme","GridList","GridListTile","GridListTileBar","useMediaQuery","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","padding","marginTop","paddingTop","gridList","transform","title","color","primary","light","titleBar","tileData","img","author","SingleLineGridList","classes","matches","breakpoints","down","map","tile"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n    padding: \"10px\",\n    marginTop: 0,\n    paddingTop: 0,\n  },\n  gridList: {\n    flexWrap: \"nowrap\",\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: \"translateZ(0)\",\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\n  },\n}));\n\nconst tileData = [\n  {\n    img: \"https://images.unsplash.com/photo-1619423282375-02725fbb31e3?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8dG9iYWNjb3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n    title: \"Image\",\n    author: \"author\",\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1584825093714-f5d917af9317?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8dG9iYWNjb3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n    title: \"Image\",\n    author: \"author\",\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1619423282375-02725fbb31e3?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8dG9iYWNjb3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n    title: \"Image\",\n    author: \"author\",\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1584825093714-f5d917af9317?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8dG9iYWNjb3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n    title: \"Image\",\n    author: \"author\",\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1619423282375-02725fbb31e3?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8dG9iYWNjb3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n    title: \"Image\",\n    author: \"author\",\n  },\n  {\n    img: \"https://images.unsplash.com/photo-1584825093714-f5d917af9317?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8dG9iYWNjb3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n    title: \"Image\",\n    author: \"author\",\n  },\n];\nconst SingleLineGridList = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={matches ? 1.5 : 3.5}>\n        {tileData.map((tile) => (\n          <GridListTile key={tile.img}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              // actionIcon={\n              //   <IconButton aria-label={`star ${tile.title}`}>\n              //     <StarBorderIcon className={classes.title} />\n              //   </IconButton>\n              // }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n};\n\nexport default SingleLineGridList;\n"]},"metadata":{},"sourceType":"module"}