{"ast":null,"code":"import axios from \"axios\";\nimport { setAccessToken, setUserDetial, setLoading, deleteUserDetail, setProfilesAndDocuments } from \"redux/actions/user\";\nimport { setUploadedImageURL } from \"redux/actions/common\";\nimport { fetchTokenFromServer, currentUser } from \"context/AuthContext\";\nimport customAxios from \"apiRequests/customAxios\";\nimport { USER_PROFILE_URL, USER_DOCUMENTS_URL } from \"apiRequests/constants\";\nexport const fetchUserDetail = async dispatch => {\n  const idToken = await fetchTokenFromServer();\n  dispatch(setAccessToken(idToken));\n  localStorage.setItem(\"doccords_user\", JSON.stringify({\n    accessToken: idToken\n  }));\n  const userDetail = await axios.post(\"http://localhost:5001/api/v1/users\", {\n    profileName: currentUser().displayName,\n    email: currentUser().email,\n    phone: currentUser().phoneNumber,\n    profilePic: currentUser().photoURL\n  }, {\n    headers: {\n      Authorization: \"Bearer \" + idToken,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  dispatch(setUserDetial(userDetail.data.user));\n  dispatch(setLoading(false));\n};\nexport const clearUserDetail = async dispatch => {\n  dispatch(deleteUserDetail);\n};\nexport const createNewProfile = (newProfileData, history) => async (dispatch, getState) => {\n  const {\n    document,\n    relationshipId,\n    profileName,\n    age,\n    email,\n    phone,\n    gender,\n    healthIssues\n  } = newProfileData;\n  const createdUser = await customAxios.post(USER_PROFILE_URL, {\n    document,\n    relationshipId,\n    profileName,\n    age,\n    email,\n    phone,\n    gender,\n    healthIssues\n  });\n\n  if (createdUser.data.success) {\n    dispatch(setUploadedImageURL(\"\"));\n    history.push(\"/profiles\");\n  }\n};\nexport const fetchAllProfiles = () => async (dispatch, getState) => {\n  const allProfiles = await customAxios.get(USER_PROFILE_URL);\n\n  if (allProfiles.data.success) {\n    console.log(allProfiles.data.data);\n  }\n};\nexport const fetchAllDocuments = () => async (dispatch, getState) => {\n  const allDocuments = await customAxios.get(USER_DOCUMENTS_URL);\n\n  if (allDocuments.data.success) {\n    console.log(allDocuments.data.data);\n  }\n};\nexport const fetchAllProfilesAndDocuments = () => async (dispatch, getState) => {\n  const promises = [customAxios.get(USER_PROFILE_URL), customAxios.get(USER_DOCUMENTS_URL)];\n  const response = await Promise.all(promises);\n  dispatch(setProfilesAndDocuments({\n    profiles: response[0].data.data,\n    documents: response[1].data.data\n  }));\n};\nexport const deleteAllProfilesAndDocuments = (profiles, documents, history) => async (dispatch, getState) => {\n  const deletedRes = await customAxios.delete(USER_PROFILE_URL, {\n    data: {\n      profiles,\n      documents\n    }\n  });\n\n  if (deletedRes.data.success) {\n    dispatch(fetchAllProfilesAndDocuments());\n    history.push(\"/profiles\");\n  }\n};","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/apiRequests/user.js"],"names":["axios","setAccessToken","setUserDetial","setLoading","deleteUserDetail","setProfilesAndDocuments","setUploadedImageURL","fetchTokenFromServer","currentUser","customAxios","USER_PROFILE_URL","USER_DOCUMENTS_URL","fetchUserDetail","dispatch","idToken","localStorage","setItem","JSON","stringify","accessToken","userDetail","post","profileName","displayName","email","phone","phoneNumber","profilePic","photoURL","headers","Authorization","data","user","clearUserDetail","createNewProfile","newProfileData","history","getState","document","relationshipId","age","gender","healthIssues","createdUser","success","push","fetchAllProfiles","allProfiles","get","console","log","fetchAllDocuments","allDocuments","fetchAllProfilesAndDocuments","promises","response","Promise","all","profiles","documents","deleteAllProfilesAndDocuments","deletedRes","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  setAccessToken,\n  setUserDetial,\n  setLoading,\n  deleteUserDetail,\n  setProfilesAndDocuments,\n} from \"redux/actions/user\";\nimport { setUploadedImageURL } from \"redux/actions/common\";\nimport { fetchTokenFromServer, currentUser } from \"context/AuthContext\";\nimport customAxios from \"apiRequests/customAxios\";\nimport { USER_PROFILE_URL, USER_DOCUMENTS_URL } from \"apiRequests/constants\";\n\nexport const fetchUserDetail = async (dispatch) => {\n  const idToken = await fetchTokenFromServer();\n  dispatch(setAccessToken(idToken));\n  localStorage.setItem(\n    \"doccords_user\",\n    JSON.stringify({ accessToken: idToken })\n  );\n\n  const userDetail = await axios.post(\n    \"http://localhost:5001/api/v1/users\",\n    {\n      profileName: currentUser().displayName,\n      email: currentUser().email,\n      phone: currentUser().phoneNumber,\n      profilePic: currentUser().photoURL,\n    },\n    {\n      headers: {\n        Authorization: \"Bearer \" + idToken,\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  dispatch(setUserDetial(userDetail.data.user));\n  dispatch(setLoading(false));\n};\n\nexport const clearUserDetail = async (dispatch) => {\n  dispatch(deleteUserDetail);\n};\n\nexport const createNewProfile =\n  (newProfileData, history) => async (dispatch, getState) => {\n    const {\n      document,\n      relationshipId,\n      profileName,\n      age,\n      email,\n      phone,\n      gender,\n      healthIssues,\n    } = newProfileData;\n    const createdUser = await customAxios.post(USER_PROFILE_URL, {\n      document,\n      relationshipId,\n      profileName,\n      age,\n      email,\n      phone,\n      gender,\n      healthIssues,\n    });\n    if (createdUser.data.success) {\n      dispatch(setUploadedImageURL(\"\"));\n      history.push(\"/profiles\");\n    }\n  };\n\nexport const fetchAllProfiles = () => async (dispatch, getState) => {\n  const allProfiles = await customAxios.get(USER_PROFILE_URL);\n  if (allProfiles.data.success) {\n    console.log(allProfiles.data.data);\n  }\n};\nexport const fetchAllDocuments = () => async (dispatch, getState) => {\n  const allDocuments = await customAxios.get(USER_DOCUMENTS_URL);\n  if (allDocuments.data.success) {\n    console.log(allDocuments.data.data);\n  }\n};\nexport const fetchAllProfilesAndDocuments =\n  () => async (dispatch, getState) => {\n    const promises = [\n      customAxios.get(USER_PROFILE_URL),\n      customAxios.get(USER_DOCUMENTS_URL),\n    ];\n    const response = await Promise.all(promises);\n    dispatch(\n      setProfilesAndDocuments({\n        profiles: response[0].data.data,\n        documents: response[1].data.data,\n      })\n    );\n  };\nexport const deleteAllProfilesAndDocuments =\n  (profiles, documents, history) => async (dispatch, getState) => {\n    const deletedRes = await customAxios.delete(USER_PROFILE_URL, {\n      data: {\n        profiles,\n        documents,\n      },\n    });\n    if (deletedRes.data.success) {\n      dispatch(fetchAllProfilesAndDocuments());\n      history.push(\"/profiles\");\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}