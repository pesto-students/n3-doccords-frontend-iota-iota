{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminArticles/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport MaterialTable from \"material-table\";\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport tableIcons from \"components/shared/tableIcons\";\nimport { fetchAllArticles } from \"apiRequests/common\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: \"2%\"\n  },\n  button_yes: {\n    backgroundColor: \"#ed5e68\",\n    color: \"#fff\"\n  },\n  button_no: {\n    backgroundColor: \"#8388a4\",\n    marginLeft: \"1rem\",\n    color: \"#fff\"\n  },\n  button_create: {\n    color: \"#fff\",\n    marginBottom: \"2rem\",\n    alignSelf: \"start\"\n  }\n})); // const modalStyle = {\n//   top: \"50%\",\n//   left: `50%`,\n//   transform: `translate(-50%, -50%)`,\n// };\n\nconst AdminArticles = ({\n  articles,\n  healthTopics,\n  fetchAllArticles\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [deleteArticleId, setDeleteArticleId] = useState(\"\");\n  const history = useHistory();\n\n  const setArticlesWithTopics = () => {\n    console.log(articles);\n    const newArticles = articles.map(article => {\n      // eslint-disable-next-line react/prop-types\n      healthTopics.forEach(topic => {\n        if (article.healthTopicId === topic.healthTopicId) {\n          article.healthTopicTitle = topic.title;\n        }\n      });\n      return article;\n    });\n    setRows(newArticles);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    fetchAllArticles();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setArticlesWithTopics();\n  }, [articles]);\n\n  const clickedYes = () => {\n    deleteArticle(deleteHealthTopicId);\n    handleClose();\n  };\n\n  const getColumnData = () => [{\n    field: \"title\",\n    title: \"Title\"\n  }, {\n    field: \"description\",\n    title: \"Description\",\n    render: function renderDescription(rowData) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: rowData.description\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"healthTopicTitle\",\n    title: \"Health Topic\"\n  }, {\n    field: \"picture\",\n    title: \"Picture\",\n    sorting: false,\n    render: function renderImage(rowData) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: rowData.picture,\n        style: {\n          maxWidth: \"50%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n\n  const navigateToCreatePage = () => {\n    history.push(\"/admin/article\");\n  };\n\n  const navigateToEditPage = (articleId, title, healthTopicId, picture, description) => {\n    history.push({\n      pathname: \"/admin/article\",\n      state: {\n        articleId,\n        title,\n        healthTopicId,\n        picture,\n        description\n      }\n    });\n  };\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"simple-modal-title\",\n      children: \"Are you sure, you want to delete this health topic?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: classes.button_yes,\n        onClick: clickedYes,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: classes.button_no,\n        onClick: handleClose,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      margin: \"3rem 0\",\n      padding: \"0 3rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.button_create,\n      onClick: navigateToCreatePage,\n      children: \"Create New Topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MaterialTable, {\n      style: {\n        border: \"1px solid #999\"\n      },\n      icons: tableIcons,\n      title: \"Health topics list\",\n      columns: columns,\n      data: rows,\n      options: {\n        search: true,\n        actionsColumnIndex: -1,\n        headerStyle: {\n          backgroundColor: \"#4bffa5\",\n          color: \"#000\"\n        }\n      },\n      actions: [{\n        icon: tableIcons.Edit,\n        tooltip: \"edit topic\",\n        onClick: (event, rowData) => {\n          navigateToEditPage(rowData.articleId, rowData.title, rowData.healthTopicId, rowData.picture, rowData.description);\n        }\n      }, {\n        icon: tableIcons.Delete,\n        tooltip: \"delete topic\",\n        onClick: (event, rowData) => {\n          setOpen(true);\n          setDeleteArticleId(rowData.articleId);\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminArticles, \"sOQkKu+v9x7X136FvqtcUeurxR8=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = AdminArticles;\nAdminArticles.propTypes = {\n  articles: PropTypes.array,\n  healthTopics: PropTypes.array,\n  fetchAllArticles: PropTypes.func\n}; // export default AdminArticles;\n\nconst mapStateToProps = state => ({\n  articles: state.common.articles,\n  healthTopics: state.common.healthTopics\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllArticles: () => dispatch(fetchAllArticles())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminArticles);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminArticles\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminArticles/index.js"],"names":["React","useState","useEffect","PropTypes","connect","MaterialTable","Box","makeStyles","Modal","Button","tableIcons","fetchAllArticles","useHistory","useStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","borderRadius","button_yes","color","button_no","marginLeft","button_create","marginBottom","alignSelf","AdminArticles","articles","healthTopics","classes","rows","setRows","columns","setColumns","open","setOpen","deleteArticleId","setDeleteArticleId","history","setArticlesWithTopics","console","log","newArticles","map","article","forEach","topic","healthTopicId","healthTopicTitle","title","handleClose","getColumnData","clickedYes","deleteArticle","deleteHealthTopicId","field","render","renderDescription","rowData","__html","description","sorting","renderImage","picture","maxWidth","height","navigateToCreatePage","push","navigateToEditPage","articleId","pathname","state","body","modalStyle","margin","border","search","actionsColumnIndex","headerStyle","icon","Edit","tooltip","onClick","event","Delete","propTypes","array","func","mapStateToProps","common","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport MaterialTable from \"material-table\";\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\n\nimport tableIcons from \"components/shared/tableIcons\";\nimport { fetchAllArticles } from \"apiRequests/common\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: \"2%\",\n  },\n  button_yes: {\n    backgroundColor: \"#ed5e68\",\n    color: \"#fff\",\n  },\n  button_no: {\n    backgroundColor: \"#8388a4\",\n    marginLeft: \"1rem\",\n    color: \"#fff\",\n  },\n  button_create: {\n    color: \"#fff\",\n    marginBottom: \"2rem\",\n    alignSelf: \"start\",\n  },\n}));\n// const modalStyle = {\n//   top: \"50%\",\n//   left: `50%`,\n//   transform: `translate(-50%, -50%)`,\n// };\n\nconst AdminArticles = ({ articles, healthTopics, fetchAllArticles }) => {\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [deleteArticleId, setDeleteArticleId] = useState(\"\");\n  const history = useHistory();\n\n  const setArticlesWithTopics = () => {\n    console.log(articles);\n    const newArticles = articles.map((article) => {\n      // eslint-disable-next-line react/prop-types\n      healthTopics.forEach((topic) => {\n        if (article.healthTopicId === topic.healthTopicId) {\n          article.healthTopicTitle = topic.title;\n        }\n      });\n      return article;\n    });\n    setRows(newArticles);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  useEffect(() => {\n    fetchAllArticles();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setArticlesWithTopics();\n  }, [articles]);\n  const clickedYes = () => {\n    deleteArticle(deleteHealthTopicId);\n    handleClose();\n  };\n\n  const getColumnData = () => [\n    { field: \"title\", title: \"Title\" },\n    {\n      field: \"description\",\n      title: \"Description\",\n      render: function renderDescription(rowData) {\n        return (\n          <div dangerouslySetInnerHTML={{ __html: rowData.description }}></div>\n        );\n      },\n    },\n    { field: \"healthTopicTitle\", title: \"Health Topic\" },\n    {\n      field: \"picture\",\n      title: \"Picture\",\n      sorting: false,\n      render: function renderImage(rowData) {\n        return (\n          <img\n            src={rowData.picture}\n            style={{ maxWidth: \"50%\", height: \"auto\" }}\n          />\n        );\n      },\n    },\n  ];\n  const navigateToCreatePage = () => {\n    history.push(\"/admin/article\");\n  };\n  const navigateToEditPage = (\n    articleId,\n    title,\n    healthTopicId,\n    picture,\n    description\n  ) => {\n    history.push({\n      pathname: \"/admin/article\",\n      state: {\n        articleId,\n        title,\n        healthTopicId,\n        picture,\n        description,\n      },\n    });\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <p id=\"simple-modal-title\">\n        Are you sure, you want to delete this health topic?\n      </p>\n      <div>\n        <Button\n          variant=\"contained\"\n          className={classes.button_yes}\n          onClick={clickedYes}\n        >\n          Yes\n        </Button>\n        <Button\n          variant=\"contained\"\n          className={classes.button_no}\n          onClick={handleClose}\n        >\n          No\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <Box\n      style={{\n        margin: \"3rem 0\",\n        padding: \"0 3rem\",\n      }}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.button_create}\n        onClick={navigateToCreatePage}\n      >\n        Create New Topic\n      </Button>\n      <MaterialTable\n        style={{ border: \"1px solid #999\" }}\n        icons={tableIcons}\n        title=\"Health topics list\"\n        columns={columns}\n        data={rows}\n        options={{\n          search: true,\n          actionsColumnIndex: -1,\n          headerStyle: {\n            backgroundColor: \"#4bffa5\",\n            color: \"#000\",\n          },\n        }}\n        actions={[\n          {\n            icon: tableIcons.Edit,\n            tooltip: \"edit topic\",\n            onClick: (event, rowData) => {\n              navigateToEditPage(\n                rowData.articleId,\n                rowData.title,\n                rowData.healthTopicId,\n                rowData.picture,\n                rowData.description\n              );\n            },\n          },\n          {\n            icon: tableIcons.Delete,\n            tooltip: \"delete topic\",\n            onClick: (event, rowData) => {\n              setOpen(true);\n              setDeleteArticleId(rowData.articleId);\n            },\n          },\n        ]}\n      />\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </Box>\n  );\n};\nAdminArticles.propTypes = {\n  articles: PropTypes.array,\n  healthTopics: PropTypes.array,\n  fetchAllArticles: PropTypes.func,\n};\n\n// export default AdminArticles;\n\nconst mapStateToProps = (state) => ({\n  articles: state.common.articles,\n  healthTopics: state.common.healthTopics,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllArticles: () => dispatch(fetchAllArticles()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminArticles);\n"]},"metadata":{},"sourceType":"module"}