{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/shared/menuBar/drawer.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useAuth } from \"context/AuthContext\";\nimport { List, ListItem, ListItemIcon, ListItemText, Divider } from \"@material-ui/core\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { useSelector } from \"react-redux\";\nimport { ROOT, HEALTH_TOPICS, ARTICLES, DASHBOARD, PROFILES, DOCUMENTS } from \"navigation/constants\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = () => ({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\n\nconst navList = {\n  // registeredUser: [\n  //   \"Home\",\n  //   \"Dashboard\",\n  //   \"Health Topics\",\n  //   \"Articles\",\n  //   \"Profiles\",\n  //   \"Documents\",\n  // ],\n  // admin: [\"Dashboard\", \"Health Topics\", \"Articles\"],\n  unRegisteredUser: [{\n    name: \"Home\",\n    link: ROOT\n  }, {\n    name: \"Health Topics\",\n    link: HEALTH_TOPICS\n  }, {\n    name: \"Articles\",\n    link: ARTICLES\n  }],\n  registeredUser: [{\n    name: \"Home\",\n    link: ROOT\n  }, {\n    name: \"Health Topics\",\n    link: HEALTH_TOPICS\n  }, {\n    name: \"Articles\",\n    link: ARTICLES\n  }, {\n    name: \"Dasboard\",\n    link: DASHBOARD\n  }, {\n    name: \"Profiles\",\n    link: PROFILES\n  }, {\n    name: \"Documents\",\n    link: DOCUMENTS\n  }]\n};\n\nconst DrawerComponent = ({\n  classes,\n  toggleDrawerHandler,\n  left\n}) => {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const userDetail = useSelector(state => state.user.userDetail);\n  const [list, setList] = useState([\"Home\", \"Health Topics\", \"Artiles\"]); // const [left] = useState(false);\n\n  useEffect(() => {\n    if (currentUser) {\n      if (userDetail.profileType === \"admin\") {\n        setList(navList.admin);\n      } else if (userDetail.profileType === \"free\") {\n        setList(navList.registeredUser);\n      }\n    } else {\n      setList(navList.unRegisteredUser);\n    }\n  }, [userDetail]);\n\n  const sideList = list => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: toggleDrawerHandler,\n    onKeyDown: toggleDrawerHandler,\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: list.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        component: Link,\n        to: item.link,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    open: left,\n    onClose: toggleDrawerHandler,\n    children: sideList(list)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrawerComponent, \"1NVIpjrm6Bmiut4Fdp5UIGMQnMI=\", false, function () {\n  return [useAuth, useSelector];\n});\n\n_c = DrawerComponent;\nexport default withStyles(styles)(DrawerComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawerComponent\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/shared/menuBar/drawer.js"],"names":["React","useState","useEffect","Drawer","withStyles","useAuth","List","ListItem","ListItemIcon","ListItemText","Divider","InboxIcon","MailIcon","useSelector","ROOT","HEALTH_TOPICS","ARTICLES","DASHBOARD","PROFILES","DOCUMENTS","Link","styles","list","width","fullList","navList","unRegisteredUser","name","link","registeredUser","DrawerComponent","classes","toggleDrawerHandler","left","currentUser","userDetail","state","user","setList","profileType","admin","sideList","map","item","index"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useAuth } from \"context/AuthContext\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from \"@material-ui/core\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { useSelector } from \"react-redux\";\nimport {\n  ROOT,\n  HEALTH_TOPICS,\n  ARTICLES,\n  DASHBOARD,\n  PROFILES,\n  DOCUMENTS,\n} from \"navigation/constants\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = () => ({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\nconst navList = {\n  // registeredUser: [\n  //   \"Home\",\n  //   \"Dashboard\",\n  //   \"Health Topics\",\n  //   \"Articles\",\n  //   \"Profiles\",\n  //   \"Documents\",\n  // ],\n  // admin: [\"Dashboard\", \"Health Topics\", \"Articles\"],\n  unRegisteredUser: [\n    {\n      name: \"Home\",\n      link: ROOT,\n    },\n    {\n      name: \"Health Topics\",\n      link: HEALTH_TOPICS,\n    },\n    {\n      name: \"Articles\",\n      link: ARTICLES,\n    },\n  ],\n  registeredUser: [\n    {\n      name: \"Home\",\n      link: ROOT,\n    },\n    {\n      name: \"Health Topics\",\n      link: HEALTH_TOPICS,\n    },\n    {\n      name: \"Articles\",\n      link: ARTICLES,\n    },\n    {\n      name: \"Dasboard\",\n      link: DASHBOARD,\n    },\n    {\n      name: \"Profiles\",\n      link: PROFILES,\n    },\n    {\n      name: \"Documents\",\n      link: DOCUMENTS,\n    },\n  ],\n};\n\nconst DrawerComponent = ({ classes, toggleDrawerHandler, left }) => {\n  const { currentUser } = useAuth();\n  const userDetail = useSelector((state) => state.user.userDetail);\n  const [list, setList] = useState([\"Home\", \"Health Topics\", \"Artiles\"]);\n  // const [left] = useState(false);\n  useEffect(() => {\n    if (currentUser) {\n      if (userDetail.profileType === \"admin\") {\n        setList(navList.admin);\n      } else if (userDetail.profileType === \"free\") {\n        setList(navList.registeredUser);\n      }\n    } else {\n      setList(navList.unRegisteredUser);\n    }\n  }, [userDetail]);\n\n  const sideList = (list) => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawerHandler}\n      onKeyDown={toggleDrawerHandler}\n    >\n      <List>\n        {list.map((item, index) => (\n          <ListItem button component={Link} to={item.link} key={index}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={item.name} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n    <Drawer open={left} onClose={toggleDrawerHandler}>\n      {sideList(list)}\n    </Drawer>\n  );\n};\n\nexport default withStyles(styles)(DrawerComponent);\n"]},"metadata":{},"sourceType":"module"}