{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/login/index.js\";\n// Import FirebaseAuth and firebase.\nimport React from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport { PROFILES } from \"navigation/constants\"; // Configure FirebaseUI.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n      const user = {\n        access_token: \"abc\"\n      };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      return true;\n    },\n    signInFailure: function (error) {\n      return console.log(error);\n    }\n  },\n  signInFlow: \"popup\",\n  signInSuccessUrl: PROFILES,\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, {\n    provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n    recaptchaParameters: {\n      type: \"image\",\n      // 'audio'\n      size: \"invisible\",\n      // 'invisible' or 'compact'\n      badge: \"bottomleft\" // 'bottomright' or 'inline' applies to invisible.\n\n    },\n    defaultCountry: \"IN\"\n  }]\n};\n\nconst LoginView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Doccords\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Login or Signup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(StyledFirebaseAuth, {\n    uiConfig: uiConfig,\n    firebaseAuth: firebase.auth()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 3\n}, this);\n\n_c = LoginView;\nexport default LoginView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginView\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/login/index.js"],"names":["React","StyledFirebaseAuth","firebase","PROFILES","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","user","access_token","localStorage","setItem","JSON","stringify","signInFailure","error","console","log","signInFlow","signInSuccessUrl","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","provider","PhoneAuthProvider","recaptchaParameters","type","size","badge","defaultCountry","LoginView"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,QAAT,QAAyB,sBAAzB,C,CAEA;;;AACA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,SAAS,EAAE;AACTC,IAAAA,2BAA2B,EAAE,UAAUC,UAAV,EAAsBC,WAAtB,EAAmC;AAC9D,YAAMC,IAAI,GAAG;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAb;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAA7B;AACA,aAAO,IAAP;AACD,KALQ;AAMTM,IAAAA,aAAa,EAAE,UAAUC,KAAV,EAAiB;AAC9B,aAAOC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAP;AACD;AARQ,GADI;AAWfG,EAAAA,UAAU,EAAE,OAXG;AAYfC,EAAAA,gBAAgB,EAAEjB,QAZH;AAafkB,EAAAA,aAAa,EAAE,CACbnB,QAAQ,CAACoB,IAAT,CAAcC,kBAAd,CAAiCC,WADpB,EAEb;AACEC,IAAAA,QAAQ,EAAEvB,QAAQ,CAACoB,IAAT,CAAcI,iBAAd,CAAgCF,WAD5C;AAEEG,IAAAA,mBAAmB,EAAE;AACnBC,MAAAA,IAAI,EAAE,OADa;AACJ;AACfC,MAAAA,IAAI,EAAE,WAFa;AAEA;AACnBC,MAAAA,KAAK,EAAE,YAHY,CAGE;;AAHF,KAFvB;AAQEC,IAAAA,cAAc,EAAE;AARlB,GAFa;AAbA,CAAjB;;AA4BA,MAAMC,SAAS,GAAG,mBAChB;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAE5B,QAA9B;AAAwC,IAAA,YAAY,EAAEF,QAAQ,CAACoB,IAAT;AAAtD;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMU,S;AAQN,eAAeA,SAAf","sourcesContent":["// Import FirebaseAuth and firebase.\nimport React from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport { PROFILES } from \"navigation/constants\";\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n      const user = { access_token: \"abc\" };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      return true;\n    },\n    signInFailure: function (error) {\n      return console.log(error);\n    },\n  },\n  signInFlow: \"popup\",\n  signInSuccessUrl: PROFILES,\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    {\n      provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n      recaptchaParameters: {\n        type: \"image\", // 'audio'\n        size: \"invisible\", // 'invisible' or 'compact'\n        badge: \"bottomleft\", // 'bottomright' or 'inline' applies to invisible.\n      },\n\n      defaultCountry: \"IN\",\n    },\n  ],\n};\n\nconst LoginView = () => (\n  <div>\n    <h1>Doccords</h1>\n    <p>Login or Signup</p>\n    <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n  </div>\n);\n\nexport default LoginView;\n"]},"metadata":{},"sourceType":"module"}