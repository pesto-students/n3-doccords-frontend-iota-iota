{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\"; // import { Avatar } from \"@material-ui/core\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n});\n\nconst AdminHealthTopics = ({\n  fetchAllHealthTopics,\n  healthTopics\n}) => {\n  _s();\n\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  useEffect(() => {\n    fetchAllHealthTopics();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setRows(healthTopics);\n  }, [healthTopics]);\n\n  const getColumnData = () => [{\n    field: \"healthTopicId\",\n    hide: true\n  }, {\n    field: \"picture\",\n    headerName: \"Picture\",\n    width: 300,\n    renderCell: function renderImage(params) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n            children: /*#__PURE__*/_jsxDEV(CardMedia, {\n              className: classes.media,\n              image: \"/static/images/cards/contemplative-reptile.jpg\",\n              title: \"Contemplative Reptile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"title\",\n    headerName: \"Title\",\n    width: 300\n  }];\n\n  console.log(rows, columns);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: \"50%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      getRowId: row => row.healthTopicId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminHealthTopics, \"tmgGlGb+YHqZQAa/5zT9xncKH+E=\");\n\n_c = AdminHealthTopics;\nAdminHealthTopics.propTypes = {\n  fetchAllHealthTopics: PropTypes.func.isRequired,\n  healthTopics: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    healthTopics: state.common.healthTopics\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHealthTopics);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminHealthTopics\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/index.js"],"names":["React","useEffect","useState","PropTypes","connect","fetchAllHealthTopics","DataGrid","makeStyles","Card","CardActionArea","CardMedia","useStyles","root","maxWidth","media","height","AdminHealthTopics","healthTopics","rows","setRows","columns","setColumns","getColumnData","field","hide","headerName","width","renderCell","renderImage","params","classes","console","log","display","justifyContent","alignItems","row","healthTopicId","propTypes","func","isRequired","array","mapStateToProps","state","common","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n// import { Avatar } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst AdminHealthTopics = ({ fetchAllHealthTopics, healthTopics }) => {\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n\n  useEffect(() => {\n    fetchAllHealthTopics();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setRows(healthTopics);\n  }, [healthTopics]);\n\n  const getColumnData = () => [\n    { field: \"healthTopicId\", hide: true },\n    {\n      field: \"picture\",\n      headerName: \"Picture\",\n      width: 300,\n      renderCell: function renderImage(params) {\n        return (\n          <div>\n            <Card className={classes.root}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image=\"/static/images/cards/contemplative-reptile.jpg\"\n                  title=\"Contemplative Reptile\"\n                />\n              </CardActionArea>\n            </Card>\n          </div>\n        );\n      },\n    },\n    { field: \"title\", headerName: \"Title\", width: 300 },\n  ];\n  console.log(rows, columns);\n  return (\n    <div\n      style={{\n        height: 400,\n        width: \"50%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={5}\n        getRowId={(row) => row.healthTopicId}\n      />\n    </div>\n  );\n};\n\nAdminHealthTopics.propTypes = {\n  fetchAllHealthTopics: PropTypes.func.isRequired,\n  healthTopics: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    healthTopics: state.common.healthTopics,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHealthTopics);\n"]},"metadata":{},"sourceType":"module"}