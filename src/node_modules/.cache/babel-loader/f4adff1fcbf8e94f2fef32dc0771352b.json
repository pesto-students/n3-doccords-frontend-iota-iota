{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/shared/upload/avatarUpload.js\";\nimport React from \"react\";\nimport Avatar from \"react-avatar-edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    const src = \"components/shared/upload/no.jpeg\";\n    this.state = {\n      preview: null,\n      src\n    };\n    this.onCrop = this.onCrop.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.onBeforeFileLoad = this.onBeforeFileLoad.bind(this);\n  }\n\n  onClose() {\n    this.setState({\n      preview: null\n    });\n  }\n\n  onCrop(preview) {\n    this.setState({\n      preview\n    });\n  }\n\n  onBeforeFileLoad(elem) {\n    if (elem.target.files[0].size > 71680) {\n      alert(\"File is too big!\");\n      elem.target.value = \"\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        width: 390,\n        height: 295,\n        onCrop: this.onCrop,\n        onClose: this.onClose,\n        onBeforeFileLoad: this.onBeforeFileLoad,\n        src: this.state.src\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.preview,\n        alt: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AvatarUpload;","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/components/shared/upload/avatarUpload.js"],"names":["React","Avatar","AvatarUpload","Component","constructor","props","src","state","preview","onCrop","bind","onClose","onBeforeFileLoad","setState","elem","target","files","size","alert","value","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAMC,GAAG,GAAG,kCAAZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXF,MAAAA;AAFW,KAAb;AAIA,SAAKG,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDC,EAAAA,OAAO,GAAG;AACR,SAAKE,QAAL,CAAc;AAAEL,MAAAA,OAAO,EAAE;AAAX,KAAd;AACD;;AAEDC,EAAAA,MAAM,CAACD,OAAD,EAAU;AACd,SAAKK,QAAL,CAAc;AAAEL,MAAAA;AAAF,KAAd;AACD;;AAEDI,EAAAA,gBAAgB,CAACE,IAAD,EAAO;AACrB,QAAIA,IAAI,CAACC,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,GAA4B,KAAhC,EAAuC;AACrCC,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACAJ,MAAAA,IAAI,CAACC,MAAL,CAAYI,KAAZ,GAAoB,EAApB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,MAAM,EAAE,KAAKX,MAHf;AAIE,QAAA,OAAO,EAAE,KAAKE,OAJhB;AAKE,QAAA,gBAAgB,EAAE,KAAKC,gBALzB;AAME,QAAA,GAAG,EAAE,KAAKL,KAAL,CAAWD;AANlB;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,OAArB;AAA8B,QAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA1CwC;;AA6C3C,eAAeN,YAAf","sourcesContent":["import React from \"react\";\nimport Avatar from \"react-avatar-edit\";\n\nclass AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    const src = \"components/shared/upload/no.jpeg\";\n    this.state = {\n      preview: null,\n      src,\n    };\n    this.onCrop = this.onCrop.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.onBeforeFileLoad = this.onBeforeFileLoad.bind(this);\n  }\n\n  onClose() {\n    this.setState({ preview: null });\n  }\n\n  onCrop(preview) {\n    this.setState({ preview });\n  }\n\n  onBeforeFileLoad(elem) {\n    if (elem.target.files[0].size > 71680) {\n      alert(\"File is too big!\");\n      elem.target.value = \"\";\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Avatar\n          width={390}\n          height={295}\n          onCrop={this.onCrop}\n          onClose={this.onClose}\n          onBeforeFileLoad={this.onBeforeFileLoad}\n          src={this.state.src}\n        />\n        <img src={this.state.preview} alt=\"Preview\" />\n      </div>\n    );\n  }\n}\n\nexport default AvatarUpload;\n"]},"metadata":{},"sourceType":"module"}