{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/users/profiles/createProfile.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Paper, makeStyles, Grid, Typography } from \"@material-ui/core\";\nimport Controls from \"../../../components/Form/controls/Controls\";\nimport { Form } from \"../../../components/Form/useForm\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport { createNewProfile } from \"apiRequests/user\";\nimport { useHistory } from \"react-router-dom\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport UploadAvatar from \"components/shared/upload/uploadAvatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst genderItems = [{\n  id: \"male\",\n  title: \"Male\"\n}, {\n  id: \"female\",\n  title: \"Female\"\n}, {\n  id: \"other\",\n  title: \"Other\"\n}];\n\nconst getRelationshipCollection = () => [{\n  id: 1,\n  title: \"Self\"\n}, {\n  id: 2,\n  title: \"Spouse\"\n}, {\n  id: 3,\n  title: \"Father\"\n}, {\n  id: 4,\n  title: \"Mother\"\n}, {\n  id: 5,\n  title: \"Brother\"\n}, {\n  id: 6,\n  title: \"Sister\"\n}, {\n  id: 7,\n  title: \"Child\"\n}, {\n  id: 8,\n  title: \"Others\"\n}];\n\nconst initialFValues = {\n  id: 0,\n  profileName: \"\",\n  email: \"\",\n  mobile: \"\",\n  age: \"\",\n  gender: \"male\",\n  relationship: 1,\n  // creationDate: new Date(),\n  cancer: false,\n  bloodPressure: false,\n  sugar: false,\n  covid: false\n};\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    marginTop: \"3rem\",\n    margin: theme.spacing(3),\n    padding: theme.spacing(3)\n  }\n}));\n\nconst CreateProfile = ({\n  fetchAllHealthTopics,\n  healthTopics,\n  createNewProfile\n}) => {\n  _s();\n\n  const [profileName, setProfileName] = useState(\"\");\n  const [relationshipId, setRelationshipId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const uploadedLink = useSelector(state => state.common.uploadedLink);\n  const [healthTopicsList, setHealthTopicsList] = useState([]);\n  const [knownIssues, setKnownIssues] = useState([]);\n  const classes = useStyles();\n  const history = useHistory();\n\n  const generateHealthTopics = () => {\n    const healthTopicsArr = healthTopics.map(topic => ({\n      id: topic.healthTopicId,\n      title: topic.title\n    }));\n    return healthTopicsArr;\n  };\n\n  useEffect(() => {\n    fetchAllHealthTopics();\n    setGender(genderItems[0].id);\n    setRelationshipId(getRelationshipCollection()[0].id);\n  }, []);\n  useEffect(() => {\n    if (healthTopics.length > 0) {\n      setHealthTopicsList(generateHealthTopics());\n    }\n  }, [healthTopics]);\n\n  const checkForErrors = () => {\n    if (profileName.trim() === \"\") {\n      setError({\n        profileName: {\n          status: true,\n          text: \"Please enter name\"\n        }\n      });\n    }\n  };\n\n  const onSubmit = () => {\n    createNewProfile({\n      relationshipId,\n      profileName,\n      age,\n      email,\n      phone,\n      gender\n    }, history);\n  };\n\n  const handleInputChange = e => {\n    if (e.target.name === \"relationship\") {\n      setRelationshipId(e.target.value);\n    }\n\n    if (e.target.name === \"profileName\") {\n      setProfileName(e.target.value);\n    }\n\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    }\n\n    if (e.target.name === \"phone\") {\n      setPhone(e.target.value);\n    }\n\n    if (e.target.name === \"age\") {\n      setAge(e.target.value);\n    }\n\n    if (e.target.name === \"gender\") {\n      setGender(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          lg: 12,\n          xl: 12,\n          children: /*#__PURE__*/_jsxDEV(UploadAvatar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"profileName\",\n              label: \"Profile name *\",\n              value: profileName,\n              onChange: handleInputChange,\n              error: errors.profileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n              name: \"relationship\",\n              label: \"Relationship\",\n              value: relationshipId,\n              onChange: handleInputChange,\n              options: getRelationshipCollection()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              label: \"Email\",\n              name: \"email\",\n              value: email,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              label: \"Phone\",\n              name: \"phone\",\n              value: phone,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"age\",\n              label: \"Age\",\n              value: age,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Controls.RadioGroup, {\n              name: \"gender\",\n              label: \"Gender\",\n              value: gender,\n              onChange: handleInputChange,\n              items: genderItems\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.root,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Any known health issue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                multiple: true,\n                limitTags: 2,\n                id: \"multiple-limit-tags\",\n                options: healthTopicsList,\n                getOptionLabel: option => option.title,\n                defaultValue: knownIssues,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  variant: \"outlined\",\n                  label: \"Health issues\",\n                  placeholder: \"Health issues\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this),\n                onChange: (event, value) => {\n                  setKnownIssues(value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n              style: {\n                display: \"block\",\n                margin: \"0 auto\"\n              },\n              onClick: onSubmit,\n              text: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateProfile, \"dBpapm1u/uaWGAEnG29CwM4FSqU=\", false, function () {\n  return [useSelector, useStyles, useHistory];\n});\n\n_c = CreateProfile;\nCreateProfile.propTypes = {\n  fetchAllHealthTopics: PropTypes.func,\n  createNewProfile: PropTypes.func,\n  healthTopics: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  healthTopics: state.common.healthTopics\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics()),\n  createNewProfile: (data, history) => dispatch(createNewProfile(data, history))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProfile);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProfile\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/users/profiles/createProfile.js"],"names":["React","useEffect","useState","PropTypes","connect","useSelector","Paper","makeStyles","Grid","Typography","Controls","Form","fetchAllHealthTopics","createNewProfile","useHistory","Autocomplete","TextField","UploadAvatar","genderItems","id","title","getRelationshipCollection","initialFValues","profileName","email","mobile","age","gender","relationship","cancer","bloodPressure","sugar","covid","useStyles","theme","pageContent","marginTop","margin","spacing","padding","CreateProfile","healthTopics","setProfileName","relationshipId","setRelationshipId","setEmail","phone","setPhone","setAge","setGender","errors","setErrors","uploadedLink","state","common","healthTopicsList","setHealthTopicsList","knownIssues","setKnownIssues","classes","history","generateHealthTopics","healthTopicsArr","map","topic","healthTopicId","length","checkForErrors","trim","setError","status","text","onSubmit","handleInputChange","e","target","name","value","root","option","params","event","display","propTypes","func","array","mapStateToProps","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Paper, makeStyles, Grid, Typography } from \"@material-ui/core\";\nimport Controls from \"../../../components/Form/controls/Controls\";\nimport { Form } from \"../../../components/Form/useForm\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport { createNewProfile } from \"apiRequests/user\";\nimport { useHistory } from \"react-router-dom\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport UploadAvatar from \"components/shared/upload/uploadAvatar\";\n\nconst genderItems = [\n  { id: \"male\", title: \"Male\" },\n  { id: \"female\", title: \"Female\" },\n  { id: \"other\", title: \"Other\" },\n];\n\nconst getRelationshipCollection = () => [\n  { id: 1, title: \"Self\" },\n  { id: 2, title: \"Spouse\" },\n  { id: 3, title: \"Father\" },\n  { id: 4, title: \"Mother\" },\n  { id: 5, title: \"Brother\" },\n  { id: 6, title: \"Sister\" },\n  { id: 7, title: \"Child\" },\n  { id: 8, title: \"Others\" },\n];\n\nconst initialFValues = {\n  id: 0,\n  profileName: \"\",\n  email: \"\",\n  mobile: \"\",\n  age: \"\",\n  gender: \"male\",\n  relationship: 1,\n  // creationDate: new Date(),\n  cancer: false,\n  bloodPressure: false,\n  sugar: false,\n  covid: false,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    marginTop: \"3rem\",\n    margin: theme.spacing(3),\n    padding: theme.spacing(3),\n  },\n}));\n\nconst CreateProfile = ({\n  fetchAllHealthTopics,\n  healthTopics,\n  createNewProfile,\n}) => {\n  const [profileName, setProfileName] = useState(\"\");\n  const [relationshipId, setRelationshipId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const uploadedLink = useSelector((state) => state.common.uploadedLink);\n  const [healthTopicsList, setHealthTopicsList] = useState([]);\n  const [knownIssues, setKnownIssues] = useState([]);\n  const classes = useStyles();\n  const history = useHistory();\n\n  const generateHealthTopics = () => {\n    const healthTopicsArr = healthTopics.map((topic) => ({\n      id: topic.healthTopicId,\n      title: topic.title,\n    }));\n    return healthTopicsArr;\n  };\n  useEffect(() => {\n    fetchAllHealthTopics();\n    setGender(genderItems[0].id);\n    setRelationshipId(getRelationshipCollection()[0].id);\n  }, []);\n  useEffect(() => {\n    if (healthTopics.length > 0) {\n      setHealthTopicsList(generateHealthTopics());\n    }\n  }, [healthTopics]);\n\n  const checkForErrors = () => {\n    if (profileName.trim() === \"\") {\n      setError({\n        profileName: {\n          status: true,\n          text: \"Please enter name\",\n        },\n      });\n    }\n  };\n\n  const onSubmit = () => {\n    createNewProfile(\n      {\n        relationshipId,\n        profileName,\n        age,\n        email,\n        phone,\n        gender,\n      },\n      history\n    );\n  };\n\n  const handleInputChange = (e) => {\n    if (e.target.name === \"relationship\") {\n      setRelationshipId(e.target.value);\n    }\n    if (e.target.name === \"profileName\") {\n      setProfileName(e.target.value);\n    }\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    }\n    if (e.target.name === \"phone\") {\n      setPhone(e.target.value);\n    }\n    if (e.target.name === \"age\") {\n      setAge(e.target.value);\n    }\n    if (e.target.name === \"gender\") {\n      setGender(e.target.value);\n    }\n  };\n\n  return (\n    <>\n      <Paper className={classes.pageContent}>\n        <Grid container>\n          <Grid item xs={12} md={12} lg={12} xl={12}>\n            <UploadAvatar />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Paper className={classes.pageContent}>\n        <Form>\n          <Grid container>\n            <Grid item xs={12} md={6}>\n              <Controls.Input\n                name=\"profileName\"\n                label=\"Profile name *\"\n                value={profileName}\n                onChange={handleInputChange}\n                error={errors.profileName}\n              />\n              <Controls.Select\n                name=\"relationship\"\n                label=\"Relationship\"\n                value={relationshipId}\n                onChange={handleInputChange}\n                options={getRelationshipCollection()}\n              />\n              <Controls.Input\n                label=\"Email\"\n                name=\"email\"\n                value={email}\n                onChange={handleInputChange}\n              />\n              <Controls.Input\n                label=\"Phone\"\n                name=\"phone\"\n                value={phone}\n                onChange={handleInputChange}\n              />\n              <Controls.Input\n                name=\"age\"\n                label=\"Age\"\n                value={age}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Controls.RadioGroup\n                name=\"gender\"\n                label=\"Gender\"\n                value={gender}\n                onChange={handleInputChange}\n                items={genderItems}\n              />\n              <div className={classes.root}>\n                <Typography variant=\"subtitle1\">\n                  Any known health issue\n                </Typography>\n                <Autocomplete\n                  multiple\n                  limitTags={2}\n                  id=\"multiple-limit-tags\"\n                  options={healthTopicsList}\n                  getOptionLabel={(option) => option.title}\n                  defaultValue={knownIssues}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      variant=\"outlined\"\n                      label=\"Health issues\"\n                      placeholder=\"Health issues\"\n                    />\n                  )}\n                  onChange={(event, value) => {\n                    setKnownIssues(value);\n                  }}\n                />\n              </div>\n\n              <Controls.Button\n                style={{ display: \"block\", margin: \"0 auto\" }}\n                onClick={onSubmit}\n                text=\"Submit\"\n              />\n            </Grid>\n          </Grid>\n        </Form>\n      </Paper>\n    </>\n  );\n};\n\nCreateProfile.propTypes = {\n  fetchAllHealthTopics: PropTypes.func,\n  createNewProfile: PropTypes.func,\n  healthTopics: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n  healthTopics: state.common.healthTopics,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics()),\n  createNewProfile: (data, history) =>\n    dispatch(createNewProfile(data, history)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProfile);\n"]},"metadata":{},"sourceType":"module"}