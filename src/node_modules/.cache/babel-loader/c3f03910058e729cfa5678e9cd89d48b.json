{"ast":null,"code":"var _jsxFileName = \"/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport MaterialTable from \"material-table\";\nimport tableIcons from \"components/shared/tableIcons\";\nimport { Box } from \"@material-ui/core\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  button_yes: {\n    backgroundColor: \"red\"\n  },\n  button_no: {\n    backgroundColor: \"green\",\n    marginLeft: \"1rem\"\n  }\n}));\nconst modalStyle = {\n  top: \"50%\",\n  left: `50%`,\n  transform: `translate(-50%, -50%)`\n};\n\nconst AdminHealthTopics = ({\n  fetchAllHealthTopics,\n  healthTopics\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  useEffect(() => {\n    fetchAllHealthTopics();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setRows(healthTopics);\n  }, [healthTopics]);\n\n  const getColumnData = () => [// { field: \"healthTopicId\", hide: true },\n  {\n    field: \"title\",\n    title: \"Title\",\n    width: 300\n  }, {\n    field: \"picture\",\n    title: \"Picture\",\n    sorting: false,\n    render: function renderImage(rowData) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: rowData.picture,\n        style: {\n          maxWidth: \"50%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      id: \"simple-modal-title\",\n      children: \"Are you sure, you want to delete this health topic?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: classes.button_yes,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: classes.button_no,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      // width: \"40%\",\n      marginTop: \"3rem\",\n      padding: \"0 3rem\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n      style: {\n        width: \"60%\"\n      },\n      icons: tableIcons,\n      title: \"Health topics list\",\n      columns: columns,\n      data: rows,\n      options: {\n        search: true,\n        actionsColumnIndex: -1,\n        fixedColumns: {\n          left: 1,\n          right: 0\n        },\n        headerStyle: {\n          backgroundColor: \"#ff80ab\",\n          color: \"#FFF\"\n        }\n      },\n      actions: [{\n        icon: tableIcons.Edit,\n        tooltip: \"edit topic\",\n        onClick: (event, rowData) => confirm(\"You want to delete \" + rowData.name)\n      }, {\n        icon: tableIcons.Delete,\n        tooltip: \"delete topic\",\n        onClick: (event, rowData) => {\n          setOpen(true);\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminHealthTopics, \"XoeafT87BptkbYaBixy91qmFL7U=\", false, function () {\n  return [useStyles];\n});\n\n_c = AdminHealthTopics;\nAdminHealthTopics.propTypes = {\n  fetchAllHealthTopics: PropTypes.func.isRequired,\n  healthTopics: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    healthTopics: state.common.healthTopics\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHealthTopics);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminHealthTopics\");","map":{"version":3,"sources":["/Users/elango/Documents/pesto/iota-ninja3-doccords-frontend/src/pages/admin/adminHealthTopics/index.js"],"names":["React","useEffect","useState","PropTypes","connect","makeStyles","fetchAllHealthTopics","MaterialTable","tableIcons","Box","Modal","Button","useStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","button_yes","button_no","marginLeft","modalStyle","top","left","transform","AdminHealthTopics","healthTopics","classes","rows","setRows","columns","setColumns","open","setOpen","getColumnData","field","title","sorting","render","renderImage","rowData","picture","maxWidth","height","body","handleClose","marginTop","display","justifyContent","alignItems","search","actionsColumnIndex","fixedColumns","right","headerStyle","color","icon","Edit","tooltip","onClick","event","confirm","name","Delete","propTypes","func","isRequired","array","mapStateToProps","state","common","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fetchAllHealthTopics } from \"apiRequests/common\";\nimport MaterialTable from \"material-table\";\nimport tableIcons from \"components/shared/tableIcons\";\nimport { Box } from \"@material-ui/core\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  button_yes: {\n    backgroundColor: \"red\",\n  },\n  button_no: {\n    backgroundColor: \"green\",\n    marginLeft: \"1rem\",\n  },\n}));\nconst modalStyle = {\n  top: \"50%\",\n  left: `50%`,\n  transform: `translate(-50%, -50%)`,\n};\nconst AdminHealthTopics = ({ fetchAllHealthTopics, healthTopics }) => {\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    fetchAllHealthTopics();\n  }, []);\n  useEffect(() => {\n    setColumns(getColumnData());\n    setRows(healthTopics);\n  }, [healthTopics]);\n\n  const getColumnData = () => [\n    // { field: \"healthTopicId\", hide: true },\n    { field: \"title\", title: \"Title\", width: 300 },\n    {\n      field: \"picture\",\n      title: \"Picture\",\n      sorting: false,\n      render: function renderImage(rowData) {\n        return (\n          <img\n            src={rowData.picture}\n            style={{ maxWidth: \"50%\", height: \"auto\" }}\n          />\n        );\n      },\n    },\n  ];\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h4 id=\"simple-modal-title\">\n        Are you sure, you want to delete this health topic?\n      </h4>\n      <div>\n        <Button variant=\"contained\" className={classes.button_yes}>\n          Yes\n        </Button>\n        <Button variant=\"contained\" className={classes.button_no}>\n          No\n        </Button>\n      </div>\n    </div>\n  );\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <Box\n      style={{\n        // width: \"40%\",\n        marginTop: \"3rem\",\n        padding: \"0 3rem\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <MaterialTable\n        style={{ width: \"60%\" }}\n        icons={tableIcons}\n        title=\"Health topics list\"\n        columns={columns}\n        data={rows}\n        options={{\n          search: true,\n          actionsColumnIndex: -1,\n          fixedColumns: {\n            left: 1,\n            right: 0,\n          },\n          headerStyle: {\n            backgroundColor: \"#ff80ab\",\n            color: \"#FFF\",\n          },\n        }}\n        actions={[\n          {\n            icon: tableIcons.Edit,\n            tooltip: \"edit topic\",\n            onClick: (event, rowData) =>\n              confirm(\"You want to delete \" + rowData.name),\n          },\n          {\n            icon: tableIcons.Delete,\n            tooltip: \"delete topic\",\n            onClick: (event, rowData) => {\n              setOpen(true);\n            },\n          },\n        ]}\n      />\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </Box>\n  );\n};\n\nAdminHealthTopics.propTypes = {\n  fetchAllHealthTopics: PropTypes.func.isRequired,\n  healthTopics: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    healthTopics: state.common.healthTopics,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllHealthTopics: () => dispatch(fetchAllHealthTopics()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHealthTopics);\n"]},"metadata":{},"sourceType":"module"}